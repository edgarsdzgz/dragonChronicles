{
  "numTotalTestSuites": 123,
  "numPassedTestSuites": 120,
  "numFailedTestSuites": 3,
  "numPendingTestSuites": 0,
  "numTotalTests": 340,
  "numPassedTests": 339,
  "numFailedTests": 1,
  "numPendingTests": 0,
  "numTodoTests": 0,
  "snapshot": {
    "added": 0,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0,
    "didUpdate": false
  },
  "startTime": 1759889353161,
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Atomic Write Operations", "putSaveAtomic"],
          "fullName": "Atomic Write Operations putSaveAtomic should write save data atomically",
          "status": "passed",
          "title": "should write save data atomically",
          "duration": 39.467027000000144,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "putSaveAtomic"],
          "fullName": "Atomic Write Operations putSaveAtomic should update active profile pointer",
          "status": "passed",
          "title": "should update active profile pointer",
          "duration": 8.252095999999938,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "putSaveAtomic"],
          "fullName": "Atomic Write Operations putSaveAtomic should prune old saves to keep only 3 backups",
          "status": "passed",
          "title": "should prune old saves to keep only 3 backups",
          "duration": 20.020003000000088,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "putSaveAtomic"],
          "fullName": "Atomic Write Operations putSaveAtomic should handle concurrent writes to different profiles",
          "status": "passed",
          "title": "should handle concurrent writes to different profiles",
          "duration": 7.239118999999846,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "putSaveAtomic"],
          "fullName": "Atomic Write Operations putSaveAtomic should maintain data integrity during transaction failures",
          "status": "passed",
          "title": "should maintain data integrity during transaction failures",
          "duration": 4.744947000000138,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "getActiveSave"],
          "fullName": "Atomic Write Operations getActiveSave should return the most recent save for a profile",
          "status": "passed",
          "title": "should return the most recent save for a profile",
          "duration": 7.939836000000014,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "getActiveSave"],
          "fullName": "Atomic Write Operations getActiveSave should return null for non-existent profile",
          "status": "passed",
          "title": "should return null for non-existent profile",
          "duration": 3.753689000000122,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "getActiveSave"],
          "fullName": "Atomic Write Operations getActiveSave should handle profile with multiple saves correctly",
          "status": "passed",
          "title": "should handle profile with multiple saves correctly",
          "duration": 6.223346999999876,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "Database consistency"],
          "fullName": "Atomic Write Operations Database consistency should maintain referential integrity between saves and meta tables",
          "status": "passed",
          "title": "should maintain referential integrity between saves and meta tables",
          "duration": 4.762755999999854,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "Database consistency"],
          "fullName": "Atomic Write Operations Database consistency should handle database corruption gracefully",
          "status": "passed",
          "title": "should handle database corruption gracefully",
          "duration": 8.036427000000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "W3 time accounting integration"],
          "fullName": "Atomic Write Operations W3 time accounting integration should preserve W3 time accounting fields during atomic writes",
          "status": "passed",
          "title": "should preserve W3 time accounting fields during atomic writes",
          "duration": 4.159118000000035,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "W3 time accounting integration"],
          "fullName": "Atomic Write Operations W3 time accounting integration should handle W3 time accounting updates correctly",
          "status": "passed",
          "title": "should handle W3 time accounting updates correctly",
          "duration": 4.533886999999822,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354280,
      "endTime": 1759889354400.534,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/atomic.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Export/Import Functionality", "exportAllProfiles"],
          "fullName": "Export/Import Functionality exportAllProfiles should export all profiles with correct format",
          "status": "passed",
          "title": "should export all profiles with correct format",
          "duration": 48.66687000000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "exportAllProfiles"],
          "fullName": "Export/Import Functionality exportAllProfiles should include W3 time accounting fields in export",
          "status": "passed",
          "title": "should include W3 time accounting fields in export",
          "duration": 7.374470999999858,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "exportAllProfiles"],
          "fullName": "Export/Import Functionality exportAllProfiles should generate valid checksum for export data",
          "status": "passed",
          "title": "should generate valid checksum for export data",
          "duration": 7.539087000000109,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "exportAllProfiles"],
          "fullName": "Export/Import Functionality exportAllProfiles should handle empty database gracefully",
          "status": "passed",
          "title": "should handle empty database gracefully",
          "duration": 4.870730999999978,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "importFromBlob"],
          "fullName": "Export/Import Functionality importFromBlob should import valid export data correctly",
          "status": "passed",
          "title": "should import valid export data correctly",
          "duration": 16.46214800000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "importFromBlob"],
          "fullName": "Export/Import Functionality importFromBlob should validate checksum during import",
          "status": "passed",
          "title": "should validate checksum during import",
          "duration": 7.002636000000166,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "importFromBlob"],
          "fullName": "Export/Import Functionality importFromBlob should reject import with wrong file version",
          "status": "passed",
          "title": "should reject import with wrong file version",
          "duration": 3.9022419999998874,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "importFromBlob"],
          "fullName": "Export/Import Functionality importFromBlob should handle corrupted export data gracefully",
          "status": "passed",
          "title": "should handle corrupted export data gracefully",
          "duration": 2.820190999999795,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "importFromBlob"],
          "fullName": "Export/Import Functionality importFromBlob should preserve W3 time accounting during import",
          "status": "passed",
          "title": "should preserve W3 time accounting during import",
          "duration": 9.13726399999996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Round-trip data integrity"],
          "fullName": "Export/Import Functionality Round-trip data integrity should maintain data integrity through export-import cycle",
          "status": "passed",
          "title": "should maintain data integrity through export-import cycle",
          "duration": 10.939448999999968,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Round-trip data integrity"],
          "fullName": "Export/Import Functionality Round-trip data integrity should preserve all profile data during round-trip",
          "status": "passed",
          "title": "should preserve all profile data during round-trip",
          "duration": 6.384679999999889,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Codec functions"],
          "fullName": "Export/Import Functionality Codec functions should encode and validate export data correctly",
          "status": "passed",
          "title": "should encode and validate export data correctly",
          "duration": 4.5537910000000466,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Codec functions"],
          "fullName": "Export/Import Functionality Codec functions should detect tampered export data",
          "status": "passed",
          "title": "should detect tampered export data",
          "duration": 3.8506989999998495,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Codec functions"],
          "fullName": "Export/Import Functionality Codec functions should handle checksum generation consistently",
          "status": "passed",
          "title": "should handle checksum generation consistently",
          "duration": 2.6849090000000615,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Multiple profile handling"],
          "fullName": "Export/Import Functionality Multiple profile handling should handle multiple profile pointers correctly",
          "status": "passed",
          "title": "should handle multiple profile pointers correctly",
          "duration": 12.141138000000183,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Multiple profile handling"],
          "fullName": "Export/Import Functionality Multiple profile handling should maintain profile independence during import",
          "status": "passed",
          "title": "should maintain profile independence during import",
          "duration": 8.184489999999869,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354281,
      "endTime": 1759889354439.1846,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/export-import.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Migration System", "Database Version Management"],
          "fullName": "Migration System Database Version Management should return version 1 for new database",
          "status": "passed",
          "title": "should return version 1 for new database",
          "duration": 22.640167999999903,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Database Version Management"],
          "fullName": "Migration System Database Version Management should track database version in meta table",
          "status": "passed",
          "title": "should track database version in meta table",
          "duration": 5.755548999999974,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Database Version Management"],
          "fullName": "Migration System Database Version Management should handle missing version gracefully",
          "status": "passed",
          "title": "should handle missing version gracefully",
          "duration": 3.4859180000000833,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Status"],
          "fullName": "Migration System Migration Status should return correct migration status for fresh database",
          "status": "passed",
          "title": "should return correct migration status for fresh database",
          "duration": 3.992197000000033,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Status"],
          "fullName": "Migration System Migration Status should handle database with version set",
          "status": "passed",
          "title": "should handle database with version set",
          "duration": 3.788191000000097,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Execution"],
          "fullName": "Migration System Migration Execution should handle no migrations needed",
          "status": "passed",
          "title": "should handle no migrations needed",
          "duration": 3.4046230000001287,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Execution"],
          "fullName": "Migration System Migration Execution should complete successfully when no data exists",
          "status": "passed",
          "title": "should complete successfully when no data exists",
          "duration": 5.173144000000093,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Execution"],
          "fullName": "Migration System Migration Execution should handle migration with existing data",
          "status": "passed",
          "title": "should handle migration with existing data",
          "duration": 10.788033999999925,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Validation"],
          "fullName": "Migration System Migration Validation should validate empty database successfully",
          "status": "passed",
          "title": "should validate empty database successfully",
          "duration": 3.9273149999999077,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Validation"],
          "fullName": "Migration System Migration Validation should validate valid save data",
          "status": "passed",
          "title": "should validate valid save data",
          "duration": 4.42549299999996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Validation"],
          "fullName": "Migration System Migration Validation should detect invalid save data structure",
          "status": "passed",
          "title": "should detect invalid save data structure",
          "duration": 3.5555500000000393,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Validation"],
          "fullName": "Migration System Migration Validation should detect missing required fields",
          "status": "passed",
          "title": "should detect missing required fields",
          "duration": 3.0388640000001033,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Backup"],
          "fullName": "Migration System Migration Backup should create backup successfully for empty database",
          "status": "passed",
          "title": "should create backup successfully for empty database",
          "duration": 3.1173650000000634,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Backup"],
          "fullName": "Migration System Migration Backup should create backup with save data",
          "status": "passed",
          "title": "should create backup with save data",
          "duration": 4.228749999999991,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Backup"],
          "fullName": "Migration System Migration Backup should store backup in meta table",
          "status": "passed",
          "title": "should store backup in meta table",
          "duration": 4.380096000000094,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Backup"],
          "fullName": "Migration System Migration Backup should not backup other backups",
          "status": "passed",
          "title": "should not backup other backups",
          "duration": 6.413105000000087,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Integration Tests"],
          "fullName": "Migration System Integration Tests should handle complete migration workflow",
          "status": "passed",
          "title": "should handle complete migration workflow",
          "duration": 4.517822000000024,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Integration Tests"],
          "fullName": "Migration System Integration Tests should maintain data integrity through migration process",
          "status": "passed",
          "title": "should maintain data integrity through migration process",
          "duration": 7.392909000000145,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354281,
      "endTime": 1759889354386.3928,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/migrate.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should validate a complete valid profile",
          "status": "passed",
          "title": "should validate a complete valid profile",
          "duration": 8.661366000000044,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should reject profile with missing W3 time accounting fields",
          "status": "passed",
          "title": "should reject profile with missing W3 time accounting fields",
          "duration": 2.2600640000000567,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should reject profile with invalid W3 time accounting",
          "status": "passed",
          "title": "should reject profile with invalid W3 time accounting",
          "duration": 0.6254280000000563,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should reject profile with invalid name length",
          "status": "passed",
          "title": "should reject profile with invalid name length",
          "duration": 0.6912189999999327,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should reject profile with negative progress values",
          "status": "passed",
          "title": "should reject profile with negative progress values",
          "duration": 0.5804509999999254,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should reject profile with non-integer values",
          "status": "passed",
          "title": "should reject profile with non-integer values",
          "duration": 0.5189199999999801,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "SaveV1 validation"],
          "fullName": "Schema Validation SaveV1 validation should validate a complete valid save",
          "status": "passed",
          "title": "should validate a complete valid save",
          "duration": 1.1979879999998957,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "SaveV1 validation"],
          "fullName": "Schema Validation SaveV1 validation should reject save with wrong version",
          "status": "passed",
          "title": "should reject save with wrong version",
          "duration": 0.6987619999999879,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "SaveV1 validation"],
          "fullName": "Schema Validation SaveV1 validation should reject save with no profiles",
          "status": "passed",
          "title": "should reject save with no profiles",
          "duration": 0.7077020000000402,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "SaveV1 validation"],
          "fullName": "Schema Validation SaveV1 validation should reject save with too many profiles",
          "status": "passed",
          "title": "should reject save with too many profiles",
          "duration": 1.1345019999999977,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "SaveV1 validation"],
          "fullName": "Schema Validation SaveV1 validation should reject save with invalid profile",
          "status": "passed",
          "title": "should reject save with invalid profile",
          "duration": 0.6931049999999459,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ExportFileV1 validation"],
          "fullName": "Schema Validation ExportFileV1 validation should validate a complete valid export file",
          "status": "passed",
          "title": "should validate a complete valid export file",
          "duration": 0.746044999999981,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ExportFileV1 validation"],
          "fullName": "Schema Validation ExportFileV1 validation should reject export with wrong file version",
          "status": "passed",
          "title": "should reject export with wrong file version",
          "duration": 0.4594160000000329,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ExportFileV1 validation"],
          "fullName": "Schema Validation ExportFileV1 validation should reject export with empty checksum",
          "status": "passed",
          "title": "should reject export with empty checksum",
          "duration": 0.3964890000000878,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ExportFileV1 validation"],
          "fullName": "Schema Validation ExportFileV1 validation should reject export with invalid data",
          "status": "passed",
          "title": "should reject export with invalid data",
          "duration": 0.37853900000004614,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate a complete valid save row",
          "status": "passed",
          "title": "should validate a complete valid save row",
          "duration": 0.8004510000000664,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate save row with optional id",
          "status": "passed",
          "title": "should validate save row with optional id",
          "duration": 0.33831100000008973,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should reject save row with invalid profile id",
          "status": "passed",
          "title": "should reject save row with invalid profile id",
          "duration": 0.3932069999999612,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate a complete valid meta row",
          "status": "passed",
          "title": "should validate a complete valid meta row",
          "duration": 0.41450800000006893,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should reject meta row with empty key",
          "status": "passed",
          "title": "should reject meta row with empty key",
          "duration": 0.3482290000000603,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate a complete valid log row",
          "status": "passed",
          "title": "should validate a complete valid log row",
          "duration": 0.6245209999999588,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate log row with optional id",
          "status": "passed",
          "title": "should validate log row with optional id",
          "duration": 0.2133649999999534,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate log row with optional data",
          "status": "passed",
          "title": "should validate log row with optional data",
          "duration": 0.5889720000000125,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should reject log row with invalid level",
          "status": "passed",
          "title": "should reject log row with invalid level",
          "duration": 0.4877719999999499,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should reject log row with invalid source",
          "status": "passed",
          "title": "should reject log row with invalid source",
          "duration": 0.3638029999999617,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should reject log row with empty message",
          "status": "passed",
          "title": "should reject log row with empty message",
          "duration": 0.34487699999999677,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354156,
      "endTime": 1759889354182.345,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/schema.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should initialize with zero balance",
          "status": "passed",
          "title": "should initialize with zero balance",
          "duration": 3.4722289999999703,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should drop Arcana correctly",
          "status": "passed",
          "title": "should drop Arcana correctly",
          "duration": 2.7852000000000317,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should calculate drop amounts correctly",
          "status": "passed",
          "title": "should calculate drop amounts correctly",
          "duration": 0.4494990000000598,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should handle distance scaling",
          "status": "passed",
          "title": "should handle distance scaling",
          "duration": 0.26832999999999174,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should handle ward scaling",
          "status": "passed",
          "title": "should handle ward scaling",
          "duration": 0.34724999999991724,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should handle combined distance and ward scaling",
          "status": "passed",
          "title": "should handle combined distance and ward scaling",
          "duration": 0.21678700000006756,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should spend Arcana correctly",
          "status": "passed",
          "title": "should spend Arcana correctly",
          "duration": 0.9240009999999756,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should reset for new journey",
          "status": "passed",
          "title": "should reset for new journey",
          "duration": 0.8994159999999738,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should track drop history",
          "status": "passed",
          "title": "should track drop history",
          "duration": 0.8847489999999425,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should get journey statistics",
          "status": "passed",
          "title": "should get journey statistics",
          "duration": 2.307416000000103,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should filter drops by source type",
          "status": "passed",
          "title": "should filter drops by source type",
          "duration": 0.8752509999999347,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should calculate total drops by source type",
          "status": "passed",
          "title": "should calculate total drops by source type",
          "duration": 0.5393149999999878,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Scaling System"],
          "fullName": "Arcana Drop System Arcana Scaling System should calculate distance scaling factor",
          "status": "passed",
          "title": "should calculate distance scaling factor",
          "duration": 0.23417800000004263,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Scaling System"],
          "fullName": "Arcana Drop System Arcana Scaling System should calculate ward scaling factor",
          "status": "passed",
          "title": "should calculate ward scaling factor",
          "duration": 0.3567490000000362,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Scaling System"],
          "fullName": "Arcana Drop System Arcana Scaling System should calculate total scaling factor",
          "status": "passed",
          "title": "should calculate total scaling factor",
          "duration": 0.258342999999968,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Scaling System"],
          "fullName": "Arcana Drop System Arcana Scaling System should calculate drop amounts for different enemy types",
          "status": "passed",
          "title": "should calculate drop amounts for different enemy types",
          "duration": 0.3955110000000559,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Scaling System"],
          "fullName": "Arcana Drop System Arcana Scaling System should apply scaling correctly",
          "status": "passed",
          "title": "should apply scaling correctly",
          "duration": 0.24744800000007672,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Performance Tests"],
          "fullName": "Arcana Drop System Performance Tests should handle many drops efficiently",
          "status": "passed",
          "title": "should handle many drops efficiently",
          "duration": 54.928559000000064,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Performance Tests"],
          "fullName": "Arcana Drop System Performance Tests should handle scaling calculations efficiently",
          "status": "passed",
          "title": "should handle scaling calculations efficiently",
          "duration": 1.0228250000000116,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Edge Cases"],
          "fullName": "Arcana Drop System Edge Cases should handle zero amounts gracefully",
          "status": "passed",
          "title": "should handle zero amounts gracefully",
          "duration": 0.3265080000001035,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Edge Cases"],
          "fullName": "Arcana Drop System Edge Cases should handle negative amounts gracefully",
          "status": "passed",
          "title": "should handle negative amounts gracefully",
          "duration": 0.26644499999997606,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Edge Cases"],
          "fullName": "Arcana Drop System Edge Cases should handle spending more than available",
          "status": "passed",
          "title": "should handle spending more than available",
          "duration": 0.6243809999999712,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Edge Cases"],
          "fullName": "Arcana Drop System Edge Cases should handle spending zero amount",
          "status": "passed",
          "title": "should handle spending zero amount",
          "duration": 0.3501139999999623,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354088,
      "endTime": 1759889354161.6243,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/arcana-drop.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Balance Analyzer", "Initialization"],
          "fullName": "Balance Analyzer Initialization should create analyzer with default configuration",
          "status": "passed",
          "title": "should create analyzer with default configuration",
          "duration": 2.444164999999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Initialization"],
          "fullName": "Balance Analyzer Initialization should create analyzer with custom configuration",
          "status": "passed",
          "title": "should create analyzer with custom configuration",
          "duration": 0.3571680000000015,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Balance Analysis"],
          "fullName": "Balance Analyzer Balance Analysis should perform comprehensive balance analysis",
          "status": "passed",
          "title": "should perform comprehensive balance analysis",
          "duration": 2.097752000000014,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Balance Analysis"],
          "fullName": "Balance Analyzer Balance Analysis should analyze progression curves",
          "status": "passed",
          "title": "should analyze progression curves",
          "duration": 1.7704069999999774,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Balance Analysis"],
          "fullName": "Balance Analyzer Balance Analysis should analyze performance metrics",
          "status": "passed",
          "title": "should analyze performance metrics",
          "duration": 0.6713150000000496,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Balance Analysis"],
          "fullName": "Balance Analyzer Balance Analysis should analyze economic efficiency",
          "status": "passed",
          "title": "should analyze economic efficiency",
          "duration": 0.43524999999999636,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Balance Analysis"],
          "fullName": "Balance Analyzer Balance Analysis should generate prioritized recommendations",
          "status": "passed",
          "title": "should generate prioritized recommendations",
          "duration": 1.3630220000000008,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Progression Curve Analysis"],
          "fullName": "Balance Analyzer Progression Curve Analysis should handle empty data gracefully",
          "status": "passed",
          "title": "should handle empty data gracefully",
          "duration": 1.1969399999999268,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Progression Curve Analysis"],
          "fullName": "Balance Analyzer Progression Curve Analysis should analyze increasing progression curve",
          "status": "passed",
          "title": "should analyze increasing progression curve",
          "duration": 0.77021000000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Progression Curve Analysis"],
          "fullName": "Balance Analyzer Progression Curve Analysis should analyze decreasing progression curve",
          "status": "passed",
          "title": "should analyze decreasing progression curve",
          "duration": 0.4163939999999684,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Progression Curve Analysis"],
          "fullName": "Balance Analyzer Progression Curve Analysis should calculate consistency correctly",
          "status": "passed",
          "title": "should calculate consistency correctly",
          "duration": 0.3695310000000518,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Performance Analysis"],
          "fullName": "Balance Analyzer Performance Analysis should handle empty performance events",
          "status": "passed",
          "title": "should handle empty performance events",
          "duration": 0.308838000000037,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Performance Analysis"],
          "fullName": "Balance Analyzer Performance Analysis should calculate frame rate consistency",
          "status": "passed",
          "title": "should calculate frame rate consistency",
          "duration": 0.3202919999999949,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Recommendation Generation"],
          "fullName": "Balance Analyzer Recommendation Generation should generate high priority recommendations for critical issues",
          "status": "passed",
          "title": "should generate high priority recommendations for critical issues",
          "duration": 0.25687700000003133,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Recommendation Generation"],
          "fullName": "Balance Analyzer Recommendation Generation should generate medium priority recommendations for moderate issues",
          "status": "passed",
          "title": "should generate medium priority recommendations for moderate issues",
          "duration": 0.16748000000006869,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Analyzer", "Recommendation Generation"],
          "fullName": "Balance Analyzer Recommendation Generation should categorize recommendations correctly",
          "status": "passed",
          "title": "should categorize recommendations correctly",
          "duration": 1.0062730000000784,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354135,
      "endTime": 1759889354150.0063,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/balance-analyzer.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Balance Testing Framework", "Scenario Management"],
          "fullName": "Balance Testing Framework Scenario Management should create default scenarios",
          "status": "passed",
          "title": "should create default scenarios",
          "duration": 5.9211429999999154,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Scenario Management"],
          "fullName": "Balance Testing Framework Scenario Management should add custom scenarios",
          "status": "passed",
          "title": "should add custom scenarios",
          "duration": 1.547542999999905,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Scenario Management"],
          "fullName": "Balance Testing Framework Scenario Management should get specific scenario by ID",
          "status": "passed",
          "title": "should get specific scenario by ID",
          "duration": 0.6335310000000618,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Scenario Management"],
          "fullName": "Balance Testing Framework Scenario Management should return undefined for non-existent scenario",
          "status": "passed",
          "title": "should return undefined for non-existent scenario",
          "duration": 0.32462199999997665,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Test Execution"],
          "fullName": "Balance Testing Framework Test Execution should execute a test successfully",
          "status": "passed",
          "title": "should execute a test successfully",
          "duration": 26.81541900000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Test Execution"],
          "fullName": "Balance Testing Framework Test Execution should throw error for non-existent scenario",
          "status": "passed",
          "title": "should throw error for non-existent scenario",
          "duration": 2.1967879999999695,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Test Execution"],
          "fullName": "Balance Testing Framework Test Execution should prevent concurrent test execution",
          "status": "passed",
          "title": "should prevent concurrent test execution",
          "duration": 15.379608000000076,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Test Execution"],
          "fullName": "Balance Testing Framework Test Execution should track test results",
          "status": "passed",
          "title": "should track test results",
          "duration": 11.876719000000094,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Test Execution"],
          "fullName": "Balance Testing Framework Test Execution should clear test results",
          "status": "passed",
          "title": "should clear test results",
          "duration": 11.391672000000085,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Balance Analysis"],
          "fullName": "Balance Testing Framework Balance Analysis should analyze balance correctly",
          "status": "passed",
          "title": "should analyze balance correctly",
          "duration": 11.937272000000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Balance Analysis"],
          "fullName": "Balance Testing Framework Balance Analysis should provide progression curve analysis",
          "status": "passed",
          "title": "should provide progression curve analysis",
          "duration": 8.467417000000069,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Performance Metrics"],
          "fullName": "Balance Testing Framework Performance Metrics should collect performance metrics",
          "status": "passed",
          "title": "should collect performance metrics",
          "duration": 10.886858999999959,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Economic Metrics"],
          "fullName": "Balance Testing Framework Economic Metrics should collect economic metrics",
          "status": "passed",
          "title": "should collect economic metrics",
          "duration": 10.383023999999978,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Scenario Variations"],
          "fullName": "Balance Testing Framework Scenario Variations should handle different progression scenarios",
          "status": "passed",
          "title": "should handle different progression scenarios",
          "duration": 27.658961999999974,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Balance Testing Framework", "Scenario Variations"],
          "fullName": "Balance Testing Framework Scenario Variations should handle stress test scenario",
          "status": "passed",
          "title": "should handle stress test scenario",
          "duration": 8.479289999999992,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354135,
      "endTime": 1759889354290.4792,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/balance-testing.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Economic Metrics Collector", "Collection Control"],
          "fullName": "Economic Metrics Collector Collection Control should start and stop collection",
          "status": "passed",
          "title": "should start and stop collection",
          "duration": 2.8296890000000303,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Collection Control"],
          "fullName": "Economic Metrics Collector Collection Control should not record events when not collecting",
          "status": "passed",
          "title": "should not record events when not collecting",
          "duration": 1.4392890000000307,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Collection Control"],
          "fullName": "Economic Metrics Collector Collection Control should record events when collecting",
          "status": "passed",
          "title": "should record events when collecting",
          "duration": 0.6874480000000176,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Event Recording"],
          "fullName": "Economic Metrics Collector Event Recording should record different event types",
          "status": "passed",
          "title": "should record different event types",
          "duration": 1.8678350000000137,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Event Recording"],
          "fullName": "Economic Metrics Collector Event Recording should include performance metrics when enabled",
          "status": "passed",
          "title": "should include performance metrics when enabled",
          "duration": 0.8748319999999694,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Event Recording"],
          "fullName": "Economic Metrics Collector Event Recording should not include performance metrics when disabled",
          "status": "passed",
          "title": "should not include performance metrics when disabled",
          "duration": 0.6703370000000177,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Event Recording"],
          "fullName": "Economic Metrics Collector Event Recording should trim events when exceeding maximum",
          "status": "passed",
          "title": "should trim events when exceeding maximum",
          "duration": 0.5251369999999724,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Event Filtering"],
          "fullName": "Economic Metrics Collector Event Filtering should filter events by type",
          "status": "passed",
          "title": "should filter events by type",
          "duration": 1.0077400000000125,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Event Filtering"],
          "fullName": "Economic Metrics Collector Event Filtering should filter events by time range",
          "status": "passed",
          "title": "should filter events by time range",
          "duration": 1.2698540000000094,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Event Filtering"],
          "fullName": "Economic Metrics Collector Event Filtering should return empty array for events outside time range",
          "status": "passed",
          "title": "should return empty array for events outside time range",
          "duration": 0.43916200000001027,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Snapshot Management"],
          "fullName": "Economic Metrics Collector Snapshot Management should take snapshots",
          "status": "passed",
          "title": "should take snapshots",
          "duration": 1.2225020000000768,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Snapshot Management"],
          "fullName": "Economic Metrics Collector Snapshot Management should get latest snapshot",
          "status": "passed",
          "title": "should get latest snapshot",
          "duration": 0.30604399999992893,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Snapshot Management"],
          "fullName": "Economic Metrics Collector Snapshot Management should return undefined for latest snapshot when none exist",
          "status": "passed",
          "title": "should return undefined for latest snapshot when none exist",
          "duration": 0.19346099999995658,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Metrics Summary"],
          "fullName": "Economic Metrics Collector Metrics Summary should generate metrics summary",
          "status": "passed",
          "title": "should generate metrics summary",
          "duration": 0.8184700000000475,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Metrics Summary"],
          "fullName": "Economic Metrics Collector Metrics Summary should calculate performance summary correctly",
          "status": "passed",
          "title": "should calculate performance summary correctly",
          "duration": 0.34676200000001245,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Data Export"],
          "fullName": "Economic Metrics Collector Data Export should export complete data",
          "status": "passed",
          "title": "should export complete data",
          "duration": 0.6793459999998959,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Data Clearing"],
          "fullName": "Economic Metrics Collector Data Clearing should clear all data",
          "status": "passed",
          "title": "should clear all data",
          "duration": 0.7258600000000115,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Real-time Analysis"],
          "fullName": "Economic Metrics Collector Real-time Analysis should perform real-time analysis when enabled",
          "status": "passed",
          "title": "should perform real-time analysis when enabled",
          "duration": 4.143124999999941,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Economic Metrics Collector", "Real-time Analysis"],
          "fullName": "Economic Metrics Collector Real-time Analysis should not perform real-time analysis when disabled",
          "status": "passed",
          "title": "should not perform real-time analysis when disabled",
          "duration": 0.5384760000000597,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354136,
      "endTime": 1759889354158.5386,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/economic-metrics.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Enchant System", "Enchant Cost Calculator"],
          "fullName": "Enchant System Enchant Cost Calculator should calculate correct costs for geometric progression",
          "status": "passed",
          "title": "should calculate correct costs for geometric progression",
          "duration": 3.7102479999999787,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Cost Calculator"],
          "fullName": "Enchant System Enchant Cost Calculator should calculate total cost for level ranges",
          "status": "passed",
          "title": "should calculate total cost for level ranges",
          "duration": 0.47785399999997935,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Cost Calculator"],
          "fullName": "Enchant System Enchant Cost Calculator should handle Soul Forging cost calculations",
          "status": "passed",
          "title": "should handle Soul Forging cost calculations",
          "duration": 0.5099809999999252,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Cost Calculator"],
          "fullName": "Enchant System Enchant Cost Calculator should validate affordable purchases",
          "status": "passed",
          "title": "should validate affordable purchases",
          "duration": 0.38133300000004056,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Cost Calculator"],
          "fullName": "Enchant System Enchant Cost Calculator should calculate max affordable level",
          "status": "passed",
          "title": "should calculate max affordable level",
          "duration": 0.6648190000000795,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should initialize with zero levels",
          "status": "passed",
          "title": "should initialize with zero levels",
          "duration": 0.48909900000001016,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should calculate effective cap correctly",
          "status": "passed",
          "title": "should calculate effective cap correctly",
          "duration": 0.22433000000000902,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should handle temporary Soul Forging purchases",
          "status": "passed",
          "title": "should handle temporary Soul Forging purchases",
          "duration": 0.8214029999999184,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should handle permanent Soul Forging purchases",
          "status": "passed",
          "title": "should handle permanent Soul Forging purchases",
          "duration": 0.7986349999999902,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should reset temporary Soul Forging",
          "status": "passed",
          "title": "should reset temporary Soul Forging",
          "duration": 0.2975930000000062,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should track transaction history",
          "status": "passed",
          "title": "should track transaction history",
          "duration": 0.3349589999999125,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should provide Soul Forging statistics",
          "status": "passed",
          "title": "should provide Soul Forging statistics",
          "duration": 0.4816950000000588,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should initialize with zero levels",
          "status": "passed",
          "title": "should initialize with zero levels",
          "duration": 0.3458540000000312,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should have correct initial cap",
          "status": "passed",
          "title": "should have correct initial cap",
          "duration": 0.23515500000007705,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should calculate enchant costs correctly",
          "status": "passed",
          "title": "should calculate enchant costs correctly",
          "duration": 0.25645699999995486,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should enforce location restrictions for Arcana spending",
          "status": "passed",
          "title": "should enforce location restrictions for Arcana spending",
          "duration": 0.27817799999991166,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should enforce location restrictions for Soul Power spending",
          "status": "passed",
          "title": "should enforce location restrictions for Soul Power spending",
          "duration": 0.21909199999993234,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should handle successful enchant purchases",
          "status": "passed",
          "title": "should handle successful enchant purchases",
          "duration": 0.4797399999999925,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should handle failed enchant purchases due to location",
          "status": "passed",
          "title": "should handle failed enchant purchases due to location",
          "duration": 0.5531429999999773,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should handle failed enchant purchases due to insufficient currency",
          "status": "passed",
          "title": "should handle failed enchant purchases due to insufficient currency",
          "duration": 0.5445530000000645,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should reset temporary enchants",
          "status": "passed",
          "title": "should reset temporary enchants",
          "duration": 0.31938400000001366,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should track transaction history",
          "status": "passed",
          "title": "should track transaction history",
          "duration": 0.3487169999999651,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should provide analytics",
          "status": "passed",
          "title": "should provide analytics",
          "duration": 0.5450420000000804,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Integration Tests"],
          "fullName": "Enchant System Integration Tests should integrate Soul Forging with enchant caps",
          "status": "passed",
          "title": "should integrate Soul Forging with enchant caps",
          "duration": 0.2881649999999354,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Integration Tests"],
          "fullName": "Enchant System Integration Tests should handle complex enchant scenarios",
          "status": "passed",
          "title": "should handle complex enchant scenarios",
          "duration": 0.47317499999996926,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Integration Tests"],
          "fullName": "Enchant System Integration Tests should handle location switching",
          "status": "passed",
          "title": "should handle location switching",
          "duration": 0.4097590000000082,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Performance Tests"],
          "fullName": "Enchant System Performance Tests should meet performance targets for cost calculations",
          "status": "passed",
          "title": "should meet performance targets for cost calculations",
          "duration": 0.6206789999999955,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Performance Tests"],
          "fullName": "Enchant System Performance Tests should meet performance targets for enchant operations",
          "status": "passed",
          "title": "should meet performance targets for enchant operations",
          "duration": 0.7924199999999928,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Edge Cases"],
          "fullName": "Enchant System Edge Cases should handle zero amount purchases",
          "status": "passed",
          "title": "should handle zero amount purchases",
          "duration": 0.3179179999999633,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Edge Cases"],
          "fullName": "Enchant System Edge Cases should handle negative amount purchases",
          "status": "passed",
          "title": "should handle negative amount purchases",
          "duration": 0.5417589999999564,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Edge Cases"],
          "fullName": "Enchant System Edge Cases should handle invalid enchant types gracefully",
          "status": "passed",
          "title": "should handle invalid enchant types gracefully",
          "duration": 1.5309909999999718,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Edge Cases"],
          "fullName": "Enchant System Edge Cases should handle Soul Forging with insufficient currency",
          "status": "passed",
          "title": "should handle Soul Forging with insufficient currency",
          "duration": 0.3500450000000228,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354131,
      "endTime": 1759889354151.35,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/enchant-system.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Scenario Runner", "Initialization"],
          "fullName": "Scenario Runner Initialization should create runner with default options",
          "status": "passed",
          "title": "should create runner with default options",
          "duration": 2.785270999999966,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Initialization"],
          "fullName": "Scenario Runner Initialization should create runner with custom options",
          "status": "passed",
          "title": "should create runner with custom options",
          "duration": 0.4007490000000189,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Execution Control"],
          "fullName": "Scenario Runner Execution Control should execute scenario successfully",
          "status": "passed",
          "title": "should execute scenario successfully",
          "duration": 25.84120299999995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Execution Control"],
          "fullName": "Scenario Runner Execution Control should track execution state during run",
          "status": "passed",
          "title": "should track execution state during run",
          "duration": 14.484942000000046,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Execution Control"],
          "fullName": "Scenario Runner Execution Control should stop execution when requested",
          "status": "passed",
          "title": "should stop execution when requested",
          "duration": 13.921043000000054,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Execution Control"],
          "fullName": "Scenario Runner Execution Control should handle timeout",
          "status": "passed",
          "title": "should handle timeout",
          "duration": 103.24440700000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Performance Monitoring"],
          "fullName": "Scenario Runner Performance Monitoring should collect performance metrics",
          "status": "passed",
          "title": "should collect performance metrics",
          "duration": 12.442992000000004,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Performance Monitoring"],
          "fullName": "Scenario Runner Performance Monitoring should track frame timing",
          "status": "passed",
          "title": "should track frame timing",
          "duration": 13.293169999999918,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Performance Monitoring"],
          "fullName": "Scenario Runner Performance Monitoring should handle performance monitoring when disabled",
          "status": "passed",
          "title": "should handle performance monitoring when disabled",
          "duration": 9.6511559999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Event Statistics"],
          "fullName": "Scenario Runner Event Statistics should track economic events",
          "status": "passed",
          "title": "should track economic events",
          "duration": 11.427221000000145,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Event Statistics"],
          "fullName": "Scenario Runner Event Statistics should track events per frame",
          "status": "passed",
          "title": "should track events per frame",
          "duration": 9.352097000000185,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "State Management"],
          "fullName": "Scenario Runner State Management should provide execution state",
          "status": "failed",
          "title": "should provide execution state",
          "duration": 9.726864999999862,
          "failureMessages": [
            "AssertionError: expected undefined to be +0 // Object.is equality\n    at C:\\Users\\ediaz\\Coding_Projects\\dragonIdler\\tests\\economy\\scenario-runner.test.ts:300:29\n    at file:///C:/Users/ediaz/Coding_Projects/dragonIdler/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///C:/Users/ediaz/Coding_Projects/dragonIdler/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///C:/Users/ediaz/Coding_Projects/dragonIdler/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///C:/Users/ediaz/Coding_Projects/dragonIdler/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///C:/Users/ediaz/Coding_Projects/dragonIdler/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at runSuite (file:///C:/Users/ediaz/Coding_Projects/dragonIdler/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///C:/Users/ediaz/Coding_Projects/dragonIdler/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///C:/Users/ediaz/Coding_Projects/dragonIdler/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "State Management"],
          "fullName": "Scenario Runner State Management should update state during execution",
          "status": "passed",
          "title": "should update state during execution",
          "duration": 10.574738000000025,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "State Management"],
          "fullName": "Scenario Runner State Management should track progress correctly",
          "status": "passed",
          "title": "should track progress correctly",
          "duration": 57.4848199999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Simulation Speed"],
          "fullName": "Scenario Runner Simulation Speed should respect simulation speed multiplier",
          "status": "passed",
          "title": "should respect simulation speed multiplier",
          "duration": 9.14390000000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Error Handling"],
          "fullName": "Scenario Runner Error Handling should handle errors gracefully when pauseOnError is false",
          "status": "passed",
          "title": "should handle errors gracefully when pauseOnError is false",
          "duration": 1.7448440000000573,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Error Handling"],
          "fullName": "Scenario Runner Error Handling should pause on errors when pauseOnError is true",
          "status": "passed",
          "title": "should pause on errors when pauseOnError is true",
          "duration": 0.5473460000000614,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Metrics Integration"],
          "fullName": "Scenario Runner Metrics Integration should integrate with metrics collector",
          "status": "passed",
          "title": "should integrate with metrics collector",
          "duration": 9.647875000000113,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Scenario Runner", "Metrics Integration"],
          "fullName": "Scenario Runner Metrics Integration should work without metrics collector",
          "status": "passed",
          "title": "should work without metrics collector",
          "duration": 8.785824000000048,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354135,
      "endTime": 1759889354461.786,
      "status": "failed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/scenario-runner.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should initialize with zero levels",
          "status": "passed",
          "title": "should initialize with zero levels",
          "duration": 3.0194480000000112,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should handle temporary Soul Forging purchases",
          "status": "passed",
          "title": "should handle temporary Soul Forging purchases",
          "duration": 0.981689000000074,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should handle permanent Soul Forging purchases",
          "status": "passed",
          "title": "should handle permanent Soul Forging purchases",
          "duration": 0.4017270000000508,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should track milestones and achievements",
          "status": "passed",
          "title": "should track milestones and achievements",
          "duration": 0.37092699999993783,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should provide analytics",
          "status": "passed",
          "title": "should provide analytics",
          "duration": 0.4929389999999785,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should calculate optimal Soul Forging",
          "status": "passed",
          "title": "should calculate optimal Soul Forging",
          "duration": 0.4418160000000171,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should validate Soul Forging progression",
          "status": "passed",
          "title": "should validate Soul Forging progression",
          "duration": 0.8232189999999946,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should save and load state",
          "status": "passed",
          "title": "should save and load state",
          "duration": 0.4115749999999707,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should reset temporary Soul Forging",
          "status": "passed",
          "title": "should reset temporary Soul Forging",
          "duration": 0.4574600000000828,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Cost Optimizer"],
          "fullName": "Enhanced Soul Forging System Soul Forging Cost Optimizer should calculate optimal purchase",
          "status": "passed",
          "title": "should calculate optimal purchase",
          "duration": 1.8797779999999875,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Cost Optimizer"],
          "fullName": "Enhanced Soul Forging System Soul Forging Cost Optimizer should calculate bulk purchase",
          "status": "passed",
          "title": "should calculate bulk purchase",
          "duration": 0.48071700000002693,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Cost Optimizer"],
          "fullName": "Enhanced Soul Forging System Soul Forging Cost Optimizer should calculate cost progression",
          "status": "passed",
          "title": "should calculate cost progression",
          "duration": 0.40542900000002646,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Cost Optimizer"],
          "fullName": "Enhanced Soul Forging System Soul Forging Cost Optimizer should get cost efficiency",
          "status": "passed",
          "title": "should get cost efficiency",
          "duration": 0.19108600000004117,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Persistence"],
          "fullName": "Enhanced Soul Forging System Soul Forging Persistence should save and load state",
          "status": "passed",
          "title": "should save and load state",
          "duration": 0.9216959999999972,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Persistence"],
          "fullName": "Enhanced Soul Forging System Soul Forging Persistence should validate state",
          "status": "passed",
          "title": "should validate state",
          "duration": 0.2503110000000106,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Persistence"],
          "fullName": "Enhanced Soul Forging System Soul Forging Persistence should repair invalid state",
          "status": "passed",
          "title": "should repair invalid state",
          "duration": 0.2980130000000827,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Persistence"],
          "fullName": "Enhanced Soul Forging System Soul Forging Persistence should list saved states",
          "status": "passed",
          "title": "should list saved states",
          "duration": 0.5658539999999448,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Persistence"],
          "fullName": "Enhanced Soul Forging System Soul Forging Persistence should delete saved state",
          "status": "passed",
          "title": "should delete saved state",
          "duration": 0.3359370000000581,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should analyze Soul Forging state",
          "status": "passed",
          "title": "should analyze Soul Forging state",
          "duration": 1.1401579999999285,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should generate analytics report",
          "status": "passed",
          "title": "should generate analytics report",
          "duration": 0.6373019999999769,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should get progression analytics",
          "status": "passed",
          "title": "should get progression analytics",
          "duration": 0.2517080000000078,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should get cost analytics",
          "status": "passed",
          "title": "should get cost analytics",
          "duration": 0.24926300000004176,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should get performance analytics",
          "status": "passed",
          "title": "should get performance analytics",
          "duration": 0.2820199999999886,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should get trend analytics",
          "status": "passed",
          "title": "should get trend analytics",
          "duration": 0.5100509999999758,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should get recommendations",
          "status": "passed",
          "title": "should get recommendations",
          "duration": 0.3046470000000454,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Integration Tests"],
          "fullName": "Enhanced Soul Forging System Integration Tests should integrate all Soul Forging components",
          "status": "passed",
          "title": "should integrate all Soul Forging components",
          "duration": 0.3846160000000509,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Integration Tests"],
          "fullName": "Enhanced Soul Forging System Integration Tests should handle complex Soul Forging scenarios",
          "status": "passed",
          "title": "should handle complex Soul Forging scenarios",
          "duration": 0.4504060000000436,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Integration Tests"],
          "fullName": "Enhanced Soul Forging System Integration Tests should handle state persistence across sessions",
          "status": "passed",
          "title": "should handle state persistence across sessions",
          "duration": 0.3230859999999893,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Performance Tests"],
          "fullName": "Enhanced Soul Forging System Performance Tests should meet performance targets for Soul Forging operations",
          "status": "passed",
          "title": "should meet performance targets for Soul Forging operations",
          "duration": 1.8702089999999316,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Performance Tests"],
          "fullName": "Enhanced Soul Forging System Performance Tests should meet performance targets for cost calculations",
          "status": "passed",
          "title": "should meet performance targets for cost calculations",
          "duration": 8.817601000000082,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Edge Cases"],
          "fullName": "Enhanced Soul Forging System Edge Cases should handle zero amount purchases",
          "status": "passed",
          "title": "should handle zero amount purchases",
          "duration": 0.3983739999999898,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Edge Cases"],
          "fullName": "Enhanced Soul Forging System Edge Cases should handle negative amount purchases",
          "status": "passed",
          "title": "should handle negative amount purchases",
          "duration": 0.2777579999999489,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Edge Cases"],
          "fullName": "Enhanced Soul Forging System Edge Cases should handle insufficient currency",
          "status": "passed",
          "title": "should handle insufficient currency",
          "duration": 0.3362859999999728,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Edge Cases"],
          "fullName": "Enhanced Soul Forging System Edge Cases should handle invalid state loading",
          "status": "passed",
          "title": "should handle invalid state loading",
          "duration": 1.6653650000000653,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Edge Cases"],
          "fullName": "Enhanced Soul Forging System Edge Cases should handle empty analytics",
          "status": "passed",
          "title": "should handle empty analytics",
          "duration": 0.7556129999999257,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354211,
      "endTime": 1759889354243.7556,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/soul-forging.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should initialize with zero balance",
          "status": "passed",
          "title": "should initialize with zero balance",
          "duration": 3.043961999999965,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should drop Soul Power correctly",
          "status": "passed",
          "title": "should drop Soul Power correctly",
          "duration": 2.439416000000051,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should calculate drop chances and amounts correctly",
          "status": "passed",
          "title": "should calculate drop chances and amounts correctly",
          "duration": 0.9306350000000521,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should handle distance scaling (slower than Arcana)",
          "status": "passed",
          "title": "should handle distance scaling (slower than Arcana)",
          "duration": 0.3969080000000531,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should handle ward scaling (slower than Arcana)",
          "status": "passed",
          "title": "should handle ward scaling (slower than Arcana)",
          "duration": 0.43469199999992725,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should handle combined distance and ward scaling",
          "status": "passed",
          "title": "should handle combined distance and ward scaling",
          "duration": 0.3506730000000289,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should spend Soul Power correctly",
          "status": "passed",
          "title": "should spend Soul Power correctly",
          "duration": 1.1098480000000563,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should track drop history",
          "status": "passed",
          "title": "should track drop history",
          "duration": 0.8871240000000853,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should get lifetime statistics",
          "status": "passed",
          "title": "should get lifetime statistics",
          "duration": 2.3745340000000397,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should filter drops by source type",
          "status": "passed",
          "title": "should filter drops by source type",
          "duration": 1.4008759999999256,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should calculate total drops by source type",
          "status": "passed",
          "title": "should calculate total drops by source type",
          "duration": 0.6595810000000029,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should get drop rate statistics",
          "status": "passed",
          "title": "should get drop rate statistics",
          "duration": 0.8605139999999665,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should get scaling statistics",
          "status": "passed",
          "title": "should get scaling statistics",
          "duration": 0.6212379999999484,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should calculate distance scaling factor (slower than Arcana)",
          "status": "passed",
          "title": "should calculate distance scaling factor (slower than Arcana)",
          "duration": 0.32490199999995184,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should calculate ward scaling factor (slower than Arcana)",
          "status": "passed",
          "title": "should calculate ward scaling factor (slower than Arcana)",
          "duration": 0.24130200000001878,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should calculate total scaling factor",
          "status": "passed",
          "title": "should calculate total scaling factor",
          "duration": 0.258762000000047,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should calculate drop amounts for different enemy types",
          "status": "passed",
          "title": "should calculate drop amounts for different enemy types",
          "duration": 0.2503110000000106,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should apply scaling correctly",
          "status": "passed",
          "title": "should apply scaling correctly",
          "duration": 0.3595430000000306,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should respect min/max drop amounts",
          "status": "passed",
          "title": "should respect min/max drop amounts",
          "duration": 0.17222900000001573,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Performance Tests"],
          "fullName": "Soul Power Drop System Performance Tests should handle many drops efficiently",
          "status": "passed",
          "title": "should handle many drops efficiently",
          "duration": 56.33991200000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Performance Tests"],
          "fullName": "Soul Power Drop System Performance Tests should handle scaling calculations efficiently",
          "status": "passed",
          "title": "should handle scaling calculations efficiently",
          "duration": 1.9174220000001014,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle zero amounts gracefully",
          "status": "passed",
          "title": "should handle zero amounts gracefully",
          "duration": 0.5468570000000454,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle negative amounts gracefully",
          "status": "passed",
          "title": "should handle negative amounts gracefully",
          "duration": 0.3151239999999689,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle spending more than available",
          "status": "passed",
          "title": "should handle spending more than available",
          "duration": 0.5326800000000276,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle spending zero amount",
          "status": "passed",
          "title": "should handle spending zero amount",
          "duration": 0.4214920000000575,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle very low Arcana amounts",
          "status": "passed",
          "title": "should handle very low Arcana amounts",
          "duration": 0.20065400000009959,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle very high Arcana amounts",
          "status": "passed",
          "title": "should handle very high Arcana amounts",
          "duration": 0.17215799999996761,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Chance-based Mechanics"],
          "fullName": "Soul Power Drop System Chance-based Mechanics should have reasonable drop chances",
          "status": "passed",
          "title": "should have reasonable drop chances",
          "duration": 0.3355179999999791,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Chance-based Mechanics"],
          "fullName": "Soul Power Drop System Chance-based Mechanics should cap drop chances at reasonable levels",
          "status": "passed",
          "title": "should cap drop chances at reasonable levels",
          "duration": 0.16175299999997605,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354090,
      "endTime": 1759889354169.1619,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/soul-power-drop.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Flag Parsing", "DEFAULT_FLAGS"],
          "fullName": "Flag Parsing DEFAULT_FLAGS should have correct default values",
          "status": "passed",
          "title": "should have correct default values",
          "duration": 2.4366220000000567,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should return empty object in production mode",
          "status": "passed",
          "title": "should return empty object in production mode",
          "duration": 0.5242289999999912,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should return empty object when no env vars are set",
          "status": "passed",
          "title": "should return empty object when no env vars are set",
          "duration": 0.2331299999999601,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse HUD flag from environment",
          "status": "passed",
          "title": "should parse HUD flag from environment",
          "duration": 0.2995489999999563,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse dev menu flag from environment",
          "status": "passed",
          "title": "should parse dev menu flag from environment",
          "duration": 0.3202929999999924,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse console logging flag from environment",
          "status": "passed",
          "title": "should parse console logging flag from environment",
          "duration": 0.39090200000009645,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse legacy background sim flag from environment",
          "status": "passed",
          "title": "should parse legacy background sim flag from environment",
          "duration": 0.21532000000001972,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse force mode from environment",
          "status": "passed",
          "title": "should parse force mode from environment",
          "duration": 0.17453299999999672,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should ignore invalid force mode values",
          "status": "passed",
          "title": "should ignore invalid force mode values",
          "duration": 0.44426099999998314,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse multiple flags from environment",
          "status": "passed",
          "title": "should parse multiple flags from environment",
          "duration": 0.36191699999994853,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should return empty object in production mode",
          "status": "passed",
          "title": "should return empty object in production mode",
          "duration": 0.24884400000007645,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should return empty object when no query params are present",
          "status": "passed",
          "title": "should return empty object when no query params are present",
          "duration": 0.2114090000000033,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse HUD flag from query string",
          "status": "passed",
          "title": "should parse HUD flag from query string",
          "duration": 0.2885840000000144,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse dev menu flag from query string",
          "status": "passed",
          "title": "should parse dev menu flag from query string",
          "duration": 0.1745330000001104,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse console logging flag from query string",
          "status": "passed",
          "title": "should parse console logging flag from query string",
          "duration": 0.17034300000000258,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse legacy background sim flag from query string",
          "status": "passed",
          "title": "should parse legacy background sim flag from query string",
          "duration": 0.26448900000002595,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse force mode from query string",
          "status": "passed",
          "title": "should parse force mode from query string",
          "duration": 0.3454350000000659,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should ignore invalid force mode values",
          "status": "passed",
          "title": "should ignore invalid force mode values",
          "duration": 0.14953000000002703,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse multiple flags from query string",
          "status": "passed",
          "title": "should parse multiple flags from query string",
          "duration": 0.15944700000000012,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should ignore non-flag query parameters",
          "status": "passed",
          "title": "should ignore non-flag query parameters",
          "duration": 0.24744799999996303,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "mergeFlags"],
          "fullName": "Flag Parsing mergeFlags should merge flags with correct precedence: query > env > defaults",
          "status": "passed",
          "title": "should merge flags with correct precedence: query > env > defaults",
          "duration": 0.2871870000000172,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "mergeFlags"],
          "fullName": "Flag Parsing mergeFlags should handle empty env and query flags",
          "status": "passed",
          "title": "should handle empty env and query flags",
          "duration": 0.16279999999994743,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "mergeFlags"],
          "fullName": "Flag Parsing mergeFlags should handle partial flag overrides",
          "status": "passed",
          "title": "should handle partial flag overrides",
          "duration": 0.14282600000001366,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "createFlags"],
          "fullName": "Flag Parsing createFlags should create complete flag configuration from URL",
          "status": "passed",
          "title": "should create complete flag configuration from URL",
          "duration": 0.22286399999995865,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "createFlags"],
          "fullName": "Flag Parsing createFlags should return defaults when no overrides are present",
          "status": "passed",
          "title": "should return defaults when no overrides are present",
          "duration": 0.6382099999999582,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "createFlags"],
          "fullName": "Flag Parsing createFlags should respect production mode restrictions",
          "status": "passed",
          "title": "should respect production mode restrictions",
          "duration": 0.28285699999992175,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "ForceMode type validation"],
          "fullName": "Flag Parsing ForceMode type validation should accept valid force mode values",
          "status": "passed",
          "title": "should accept valid force mode values",
          "duration": 0.3415939999999864,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "ForceMode type validation"],
          "fullName": "Flag Parsing ForceMode type validation should reject invalid force mode values",
          "status": "passed",
          "title": "should reject invalid force mode values",
          "duration": 0.237461000000053,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "Edge cases"],
          "fullName": "Flag Parsing Edge cases should handle malformed URLs gracefully",
          "status": "passed",
          "title": "should handle malformed URLs gracefully",
          "duration": 1.2760700000000043,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "Edge cases"],
          "fullName": "Flag Parsing Edge cases should handle empty query parameter values",
          "status": "passed",
          "title": "should handle empty query parameter values",
          "duration": 0.24982199999999466,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "Edge cases"],
          "fullName": "Flag Parsing Edge cases should handle undefined environment variables",
          "status": "passed",
          "title": "should handle undefined environment variables",
          "duration": 0.21951100000001134,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354088,
      "endTime": 1759889354100.2761,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/flags/parse.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Flag Store", "appFlags store"],
          "fullName": "Flag Store appFlags store should initialize with default values",
          "status": "passed",
          "title": "should initialize with default values",
          "duration": 3.113593999999921,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "appFlags store"],
          "fullName": "Flag Store appFlags store should update when set is called",
          "status": "passed",
          "title": "should update when set is called",
          "duration": 0.31840699999997923,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "appFlags store"],
          "fullName": "Flag Store appFlags store should update when update is called",
          "status": "passed",
          "title": "should update when update is called",
          "duration": 0.37616499999990083,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "appFlags store"],
          "fullName": "Flag Store appFlags store should notify subscribers when values change",
          "status": "passed",
          "title": "should notify subscribers when values change",
          "duration": 3.1797330000001693,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "appFlags store"],
          "fullName": "Flag Store appFlags store should not notify unsubscribed listeners",
          "status": "passed",
          "title": "should not notify unsubscribed listeners",
          "duration": 0.6387680000000273,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should derive hudEnabled correctly",
          "status": "passed",
          "title": "should derive hudEnabled correctly",
          "duration": 0.8412379999999757,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should derive devMenuEnabled correctly",
          "status": "passed",
          "title": "should derive devMenuEnabled correctly",
          "duration": 0.48923800000011397,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should derive logConsoleEnabled correctly",
          "status": "passed",
          "title": "should derive logConsoleEnabled correctly",
          "duration": 0.4622799999999643,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should derive legacyBgSimEnabled correctly",
          "status": "passed",
          "title": "should derive legacyBgSimEnabled correctly",
          "duration": 0.577726999999868,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should derive forceMode correctly",
          "status": "passed",
          "title": "should derive forceMode correctly",
          "duration": 0.5615940000000137,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should update derived stores when parent store changes",
          "status": "passed",
          "title": "should update derived stores when parent store changes",
          "duration": 0.7848759999999402,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "isFlagEnabled utility"],
          "fullName": "Flag Store isFlagEnabled utility should return a derived store for boolean flags",
          "status": "passed",
          "title": "should return a derived store for boolean flags",
          "duration": 0.35765700000001743,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "isFlagEnabled utility"],
          "fullName": "Flag Store isFlagEnabled utility should work with all boolean flags",
          "status": "passed",
          "title": "should work with all boolean flags",
          "duration": 0.6349970000001122,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "isFlagEnabled utility"],
          "fullName": "Flag Store isFlagEnabled utility should convert non-boolean values to boolean",
          "status": "passed",
          "title": "should convert non-boolean values to boolean",
          "duration": 0.22991799999999785,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "isFlagEnabled utility"],
          "fullName": "Flag Store isFlagEnabled utility should update when flag values change",
          "status": "passed",
          "title": "should update when flag values change",
          "duration": 0.46646999999984473,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "getCurrentFlags utility"],
          "fullName": "Flag Store getCurrentFlags utility should return current flag values",
          "status": "passed",
          "title": "should return current flag values",
          "duration": 0.3401969999999892,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "getCurrentFlags utility"],
          "fullName": "Flag Store getCurrentFlags utility should return updated values after store changes",
          "status": "passed",
          "title": "should return updated values after store changes",
          "duration": 0.21483200000011493,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "getCurrentFlags utility"],
          "fullName": "Flag Store getCurrentFlags utility should return a snapshot of current state",
          "status": "passed",
          "title": "should return a snapshot of current state",
          "duration": 0.3013650000000325,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "store integration"],
          "fullName": "Flag Store store integration should maintain consistency across all derived stores",
          "status": "passed",
          "title": "should maintain consistency across all derived stores",
          "duration": 0.4064060000000609,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "store integration"],
          "fullName": "Flag Store store integration should handle rapid updates correctly",
          "status": "passed",
          "title": "should handle rapid updates correctly",
          "duration": 0.4017269999999371,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "store integration"],
          "fullName": "Flag Store store integration should handle partial updates correctly",
          "status": "passed",
          "title": "should handle partial updates correctly",
          "duration": 0.2426980000000185,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "edge cases"],
          "fullName": "Flag Store edge cases should handle undefined values gracefully",
          "status": "passed",
          "title": "should handle undefined values gracefully",
          "duration": 1.032324000000017,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "edge cases"],
          "fullName": "Flag Store edge cases should handle multiple subscribers correctly",
          "status": "passed",
          "title": "should handle multiple subscribers correctly",
          "duration": 1.7495940000001156,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354328,
      "endTime": 1759889354346.7495,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/flags/store.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Handling Functions"],
          "fullName": "Error Boundary Integration Tests Error Handling Functions should handle page reload functionality",
          "status": "passed",
          "title": "should handle page reload functionality",
          "duration": 2.2402289999999994,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Handling Functions"],
          "fullName": "Error Boundary Integration Tests Error Handling Functions should handle navigation to home",
          "status": "passed",
          "title": "should handle navigation to home",
          "duration": 0.46884399999999005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Handling Functions"],
          "fullName": "Error Boundary Integration Tests Error Handling Functions should handle log export functionality",
          "status": "passed",
          "title": "should handle log export functionality",
          "duration": 3.516159000000016,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Handling Functions"],
          "fullName": "Error Boundary Integration Tests Error Handling Functions should handle log export errors gracefully",
          "status": "passed",
          "title": "should handle log export errors gracefully",
          "duration": 8.464624000000072,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Handling Functions"],
          "fullName": "Error Boundary Integration Tests Error Handling Functions should prevent multiple simultaneous log exports",
          "status": "passed",
          "title": "should prevent multiple simultaneous log exports",
          "duration": 101.50703500000009,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Information Processing"],
          "fullName": "Error Boundary Integration Tests Error Information Processing should generate detailed error information",
          "status": "passed",
          "title": "should generate detailed error information",
          "duration": 1.244711000000052,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Information Processing"],
          "fullName": "Error Boundary Integration Tests Error Information Processing should handle missing error information gracefully",
          "status": "passed",
          "title": "should handle missing error information gracefully",
          "duration": 0.37288300000000163,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Download Functionality"],
          "fullName": "Error Boundary Integration Tests Download Functionality should generate correct filename with current date",
          "status": "passed",
          "title": "should generate correct filename with current date",
          "duration": 0.3491360000000441,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Download Functionality"],
          "fullName": "Error Boundary Integration Tests Download Functionality should handle download errors gracefully",
          "status": "passed",
          "title": "should handle download errors gracefully",
          "duration": 1.9251050000000305,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Integration Scenarios"],
          "fullName": "Error Boundary Integration Tests Integration Scenarios should handle complete error boundary workflow",
          "status": "passed",
          "title": "should handle complete error boundary workflow",
          "duration": 0.6429590000000189,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Integration Scenarios"],
          "fullName": "Error Boundary Integration Tests Integration Scenarios should handle rapid user interactions without issues",
          "status": "passed",
          "title": "should handle rapid user interactions without issues",
          "duration": 0.3155429999999342,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354006,
      "endTime": 1759889354128.643,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/integration/error-boundary.int.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Log Export Integration Tests", "NDJSON Export"],
          "fullName": "Log Export Integration Tests NDJSON Export should export logs as NDJSON blob",
          "status": "passed",
          "title": "should export logs as NDJSON blob",
          "duration": 9.504908999999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "NDJSON Export"],
          "fullName": "Log Export Integration Tests NDJSON Export should export empty logs when no logs are present",
          "status": "passed",
          "title": "should export empty logs when no logs are present",
          "duration": 0.7906029999999191,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "NDJSON Export"],
          "fullName": "Log Export Integration Tests NDJSON Export should include proper NDJSON formatting",
          "status": "passed",
          "title": "should include proper NDJSON formatting",
          "duration": 1.7637710000000197,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "NDJSON Export"],
          "fullName": "Log Export Integration Tests NDJSON Export should handle multiple log entries correctly",
          "status": "passed",
          "title": "should handle multiple log entries correctly",
          "duration": 0.8108579999999392,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Download Functionality"],
          "fullName": "Log Export Integration Tests Download Functionality should trigger download with correct filename",
          "status": "passed",
          "title": "should trigger download with correct filename",
          "duration": 2.7256949999999733,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Download Functionality"],
          "fullName": "Log Export Integration Tests Download Functionality should generate filename with current date",
          "status": "passed",
          "title": "should generate filename with current date",
          "duration": 0.4797399999999925,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Download Functionality"],
          "fullName": "Log Export Integration Tests Download Functionality should handle download errors gracefully",
          "status": "passed",
          "title": "should handle download errors gracefully",
          "duration": 0.8453579999999192,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "PII Redaction in Exports"],
          "fullName": "Log Export Integration Tests PII Redaction in Exports should redact sensitive information in exported logs",
          "status": "passed",
          "title": "should redact sensitive information in exported logs",
          "duration": 0.6917079999999487,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "PII Redaction in Exports"],
          "fullName": "Log Export Integration Tests PII Redaction in Exports should preserve allowed data fields in exports",
          "status": "passed",
          "title": "should preserve allowed data fields in exports",
          "duration": 0.8766479999999319,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "PII Redaction in Exports"],
          "fullName": "Log Export Integration Tests PII Redaction in Exports should handle nested objects in data field",
          "status": "passed",
          "title": "should handle nested objects in data field",
          "duration": 0.7081900000000587,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Memory Management"],
          "fullName": "Log Export Integration Tests Memory Management should respect memory limits during export",
          "status": "passed",
          "title": "should respect memory limits during export",
          "duration": 0.6845839999999725,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Memory Management"],
          "fullName": "Log Export Integration Tests Memory Management should handle large exports efficiently",
          "status": "passed",
          "title": "should handle large exports efficiently",
          "duration": 2.501435000000015,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Error Handling"],
          "fullName": "Log Export Integration Tests Error Handling should handle export errors gracefully",
          "status": "passed",
          "title": "should handle export errors gracefully",
          "duration": 1.6137529999999742,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Error Handling"],
          "fullName": "Log Export Integration Tests Error Handling should handle corrupted log data",
          "status": "passed",
          "title": "should handle corrupted log data",
          "duration": 0.6312249999999722,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Integration with Error Boundary"],
          "fullName": "Log Export Integration Tests Integration with Error Boundary should work correctly when called from error boundary",
          "status": "passed",
          "title": "should work correctly when called from error boundary",
          "duration": 1.2380769999999757,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759889354017,
      "endTime": 1759889354044.238,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/integration/export-logs.int.spec.ts"
    }
  ]
}
