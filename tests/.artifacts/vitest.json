{
  "numTotalTestSuites": 88,
  "numPassedTestSuites": 88,
  "numFailedTestSuites": 0,
  "numPendingTestSuites": 0,
  "numTotalTests": 271,
  "numPassedTests": 271,
  "numFailedTests": 0,
  "numPendingTests": 0,
  "numTodoTests": 0,
  "snapshot": {
    "added": 0,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0,
    "didUpdate": false
  },
  "startTime": 1759291305485,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Atomic Write Operations", "putSaveAtomic"],
          "fullName": "Atomic Write Operations putSaveAtomic should write save data atomically",
          "status": "passed",
          "title": "should write save data atomically",
          "duration": 43.44211300000006,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "putSaveAtomic"],
          "fullName": "Atomic Write Operations putSaveAtomic should update active profile pointer",
          "status": "passed",
          "title": "should update active profile pointer",
          "duration": 7.888294000000087,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "putSaveAtomic"],
          "fullName": "Atomic Write Operations putSaveAtomic should prune old saves to keep only 3 backups",
          "status": "passed",
          "title": "should prune old saves to keep only 3 backups",
          "duration": 21.416688000000022,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "putSaveAtomic"],
          "fullName": "Atomic Write Operations putSaveAtomic should handle concurrent writes to different profiles",
          "status": "passed",
          "title": "should handle concurrent writes to different profiles",
          "duration": 7.286050999999816,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "putSaveAtomic"],
          "fullName": "Atomic Write Operations putSaveAtomic should maintain data integrity during transaction failures",
          "status": "passed",
          "title": "should maintain data integrity during transaction failures",
          "duration": 4.465233000000126,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "getActiveSave"],
          "fullName": "Atomic Write Operations getActiveSave should return the most recent save for a profile",
          "status": "passed",
          "title": "should return the most recent save for a profile",
          "duration": 9.792165999999952,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "getActiveSave"],
          "fullName": "Atomic Write Operations getActiveSave should return null for non-existent profile",
          "status": "passed",
          "title": "should return null for non-existent profile",
          "duration": 3.134896000000026,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "getActiveSave"],
          "fullName": "Atomic Write Operations getActiveSave should handle profile with multiple saves correctly",
          "status": "passed",
          "title": "should handle profile with multiple saves correctly",
          "duration": 7.355194999999867,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "Database consistency"],
          "fullName": "Atomic Write Operations Database consistency should maintain referential integrity between saves and meta tables",
          "status": "passed",
          "title": "should maintain referential integrity between saves and meta tables",
          "duration": 6.2527500000001055,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "Database consistency"],
          "fullName": "Atomic Write Operations Database consistency should handle database corruption gracefully",
          "status": "passed",
          "title": "should handle database corruption gracefully",
          "duration": 8.447582000000011,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "W3 time accounting integration"],
          "fullName": "Atomic Write Operations W3 time accounting integration should preserve W3 time accounting fields during atomic writes",
          "status": "passed",
          "title": "should preserve W3 time accounting fields during atomic writes",
          "duration": 5.993429999999989,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Atomic Write Operations", "W3 time accounting integration"],
          "fullName": "Atomic Write Operations W3 time accounting integration should handle W3 time accounting updates correctly",
          "status": "passed",
          "title": "should handle W3 time accounting updates correctly",
          "duration": 7.025822999999946,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306800,
      "endTime": 1759291306934.026,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/atomic.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Export/Import Functionality", "exportAllProfiles"],
          "fullName": "Export/Import Functionality exportAllProfiles should export all profiles with correct format",
          "status": "passed",
          "title": "should export all profiles with correct format",
          "duration": 48.087745999999925,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "exportAllProfiles"],
          "fullName": "Export/Import Functionality exportAllProfiles should include W3 time accounting fields in export",
          "status": "passed",
          "title": "should include W3 time accounting fields in export",
          "duration": 9.332749999999805,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "exportAllProfiles"],
          "fullName": "Export/Import Functionality exportAllProfiles should generate valid checksum for export data",
          "status": "passed",
          "title": "should generate valid checksum for export data",
          "duration": 9.958667000000105,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "exportAllProfiles"],
          "fullName": "Export/Import Functionality exportAllProfiles should handle empty database gracefully",
          "status": "passed",
          "title": "should handle empty database gracefully",
          "duration": 7.586019999999962,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "importFromBlob"],
          "fullName": "Export/Import Functionality importFromBlob should import valid export data correctly",
          "status": "passed",
          "title": "should import valid export data correctly",
          "duration": 12.114108999999871,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "importFromBlob"],
          "fullName": "Export/Import Functionality importFromBlob should validate checksum during import",
          "status": "passed",
          "title": "should validate checksum during import",
          "duration": 3.1912569999999505,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "importFromBlob"],
          "fullName": "Export/Import Functionality importFromBlob should reject import with wrong file version",
          "status": "passed",
          "title": "should reject import with wrong file version",
          "duration": 4.0868319999999585,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "importFromBlob"],
          "fullName": "Export/Import Functionality importFromBlob should handle corrupted export data gracefully",
          "status": "passed",
          "title": "should handle corrupted export data gracefully",
          "duration": 2.539219000000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "importFromBlob"],
          "fullName": "Export/Import Functionality importFromBlob should preserve W3 time accounting during import",
          "status": "passed",
          "title": "should preserve W3 time accounting during import",
          "duration": 10.675448000000188,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Round-trip data integrity"],
          "fullName": "Export/Import Functionality Round-trip data integrity should maintain data integrity through export-import cycle",
          "status": "passed",
          "title": "should maintain data integrity through export-import cycle",
          "duration": 15.132789000000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Round-trip data integrity"],
          "fullName": "Export/Import Functionality Round-trip data integrity should preserve all profile data during round-trip",
          "status": "passed",
          "title": "should preserve all profile data during round-trip",
          "duration": 9.958178999999973,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Codec functions"],
          "fullName": "Export/Import Functionality Codec functions should encode and validate export data correctly",
          "status": "passed",
          "title": "should encode and validate export data correctly",
          "duration": 3.8555180000000746,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Codec functions"],
          "fullName": "Export/Import Functionality Codec functions should detect tampered export data",
          "status": "passed",
          "title": "should detect tampered export data",
          "duration": 5.831606999999849,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Codec functions"],
          "fullName": "Export/Import Functionality Codec functions should handle checksum generation consistently",
          "status": "passed",
          "title": "should handle checksum generation consistently",
          "duration": 3.0160960000000614,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Multiple profile handling"],
          "fullName": "Export/Import Functionality Multiple profile handling should handle multiple profile pointers correctly",
          "status": "passed",
          "title": "should handle multiple profile pointers correctly",
          "duration": 16.673138999999992,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Export/Import Functionality", "Multiple profile handling"],
          "fullName": "Export/Import Functionality Multiple profile handling should maintain profile independence during import",
          "status": "passed",
          "title": "should maintain profile independence during import",
          "duration": 9.40985499999988,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306800,
      "endTime": 1759291306973.41,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/export-import.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Migration System", "Database Version Management"],
          "fullName": "Migration System Database Version Management should return version 1 for new database",
          "status": "passed",
          "title": "should return version 1 for new database",
          "duration": 23.354575000000068,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Database Version Management"],
          "fullName": "Migration System Database Version Management should track database version in meta table",
          "status": "passed",
          "title": "should track database version in meta table",
          "duration": 7.408484000000044,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Database Version Management"],
          "fullName": "Migration System Database Version Management should handle missing version gracefully",
          "status": "passed",
          "title": "should handle missing version gracefully",
          "duration": 4.8490099999999074,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Status"],
          "fullName": "Migration System Migration Status should return correct migration status for fresh database",
          "status": "passed",
          "title": "should return correct migration status for fresh database",
          "duration": 4.837207000000035,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Status"],
          "fullName": "Migration System Migration Status should handle database with version set",
          "status": "passed",
          "title": "should handle database with version set",
          "duration": 5.816939999999931,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Execution"],
          "fullName": "Migration System Migration Execution should handle no migrations needed",
          "status": "passed",
          "title": "should handle no migrations needed",
          "duration": 3.2351880000001074,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Execution"],
          "fullName": "Migration System Migration Execution should complete successfully when no data exists",
          "status": "passed",
          "title": "should complete successfully when no data exists",
          "duration": 5.004686999999876,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Execution"],
          "fullName": "Migration System Migration Execution should handle migration with existing data",
          "status": "passed",
          "title": "should handle migration with existing data",
          "duration": 14.775063000000046,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Validation"],
          "fullName": "Migration System Migration Validation should validate empty database successfully",
          "status": "passed",
          "title": "should validate empty database successfully",
          "duration": 5.445594000000028,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Validation"],
          "fullName": "Migration System Migration Validation should validate valid save data",
          "status": "passed",
          "title": "should validate valid save data",
          "duration": 5.351936999999907,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Validation"],
          "fullName": "Migration System Migration Validation should detect invalid save data structure",
          "status": "passed",
          "title": "should detect invalid save data structure",
          "duration": 3.3572699999999713,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Validation"],
          "fullName": "Migration System Migration Validation should detect missing required fields",
          "status": "passed",
          "title": "should detect missing required fields",
          "duration": 3.096622000000025,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Backup"],
          "fullName": "Migration System Migration Backup should create backup successfully for empty database",
          "status": "passed",
          "title": "should create backup successfully for empty database",
          "duration": 3.1434159999998883,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Backup"],
          "fullName": "Migration System Migration Backup should create backup with save data",
          "status": "passed",
          "title": "should create backup with save data",
          "duration": 5.820780999999897,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Backup"],
          "fullName": "Migration System Migration Backup should store backup in meta table",
          "status": "passed",
          "title": "should store backup in meta table",
          "duration": 6.055867000000035,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Migration Backup"],
          "fullName": "Migration System Migration Backup should not backup other backups",
          "status": "passed",
          "title": "should not backup other backups",
          "duration": 8.664717999999993,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Integration Tests"],
          "fullName": "Migration System Integration Tests should handle complete migration workflow",
          "status": "passed",
          "title": "should handle complete migration workflow",
          "duration": 4.337631999999985,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Migration System", "Integration Tests"],
          "fullName": "Migration System Integration Tests should maintain data integrity through migration process",
          "status": "passed",
          "title": "should maintain data integrity through migration process",
          "duration": 6.241784999999936,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306800,
      "endTime": 1759291306922.2417,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/migrate.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should validate a complete valid profile",
          "status": "passed",
          "title": "should validate a complete valid profile",
          "duration": 7.293105999999852,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should reject profile with missing W3 time accounting fields",
          "status": "passed",
          "title": "should reject profile with missing W3 time accounting fields",
          "duration": 2.5023429999998825,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should reject profile with invalid W3 time accounting",
          "status": "passed",
          "title": "should reject profile with invalid W3 time accounting",
          "duration": 0.7551240000000234,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should reject profile with invalid name length",
          "status": "passed",
          "title": "should reject profile with invalid name length",
          "duration": 0.99488899999983,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should reject profile with negative progress values",
          "status": "passed",
          "title": "should reject profile with negative progress values",
          "duration": 0.7632250000001477,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ProfileV1 validation"],
          "fullName": "Schema Validation ProfileV1 validation should reject profile with non-integer values",
          "status": "passed",
          "title": "should reject profile with non-integer values",
          "duration": 0.672851000000037,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "SaveV1 validation"],
          "fullName": "Schema Validation SaveV1 validation should validate a complete valid save",
          "status": "passed",
          "title": "should validate a complete valid save",
          "duration": 1.1573399999999765,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "SaveV1 validation"],
          "fullName": "Schema Validation SaveV1 validation should reject save with wrong version",
          "status": "passed",
          "title": "should reject save with wrong version",
          "duration": 0.586667000000034,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "SaveV1 validation"],
          "fullName": "Schema Validation SaveV1 validation should reject save with no profiles",
          "status": "passed",
          "title": "should reject save with no profiles",
          "duration": 0.6500819999998839,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "SaveV1 validation"],
          "fullName": "Schema Validation SaveV1 validation should reject save with too many profiles",
          "status": "passed",
          "title": "should reject save with too many profiles",
          "duration": 0.9457909999998719,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "SaveV1 validation"],
          "fullName": "Schema Validation SaveV1 validation should reject save with invalid profile",
          "status": "passed",
          "title": "should reject save with invalid profile",
          "duration": 0.6216570000001411,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ExportFileV1 validation"],
          "fullName": "Schema Validation ExportFileV1 validation should validate a complete valid export file",
          "status": "passed",
          "title": "should validate a complete valid export file",
          "duration": 0.7565899999999601,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ExportFileV1 validation"],
          "fullName": "Schema Validation ExportFileV1 validation should reject export with wrong file version",
          "status": "passed",
          "title": "should reject export with wrong file version",
          "duration": 0.5090729999999439,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ExportFileV1 validation"],
          "fullName": "Schema Validation ExportFileV1 validation should reject export with empty checksum",
          "status": "passed",
          "title": "should reject export with empty checksum",
          "duration": 0.5185020000001259,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "ExportFileV1 validation"],
          "fullName": "Schema Validation ExportFileV1 validation should reject export with invalid data",
          "status": "passed",
          "title": "should reject export with invalid data",
          "duration": 0.4224690000000919,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate a complete valid save row",
          "status": "passed",
          "title": "should validate a complete valid save row",
          "duration": 0.7570100000000366,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate save row with optional id",
          "status": "passed",
          "title": "should validate save row with optional id",
          "duration": 0.29528899999991154,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should reject save row with invalid profile id",
          "status": "passed",
          "title": "should reject save row with invalid profile id",
          "duration": 0.3964889999999741,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate a complete valid meta row",
          "status": "passed",
          "title": "should validate a complete valid meta row",
          "duration": 0.46933400000011716,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should reject meta row with empty key",
          "status": "passed",
          "title": "should reject meta row with empty key",
          "duration": 0.3095370000000912,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate a complete valid log row",
          "status": "passed",
          "title": "should validate a complete valid log row",
          "duration": 0.630666999999903,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate log row with optional id",
          "status": "passed",
          "title": "should validate log row with optional id",
          "duration": 0.25268499999992855,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should validate log row with optional data",
          "status": "passed",
          "title": "should validate log row with optional data",
          "duration": 0.6860509999999067,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should reject log row with invalid level",
          "status": "passed",
          "title": "should reject log row with invalid level",
          "duration": 0.5213650000000598,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should reject log row with invalid source",
          "status": "passed",
          "title": "should reject log row with invalid source",
          "duration": 0.4214920000001712,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Schema Validation", "Database row validation"],
          "fullName": "Schema Validation Database row validation should reject log row with empty message",
          "status": "passed",
          "title": "should reject log row with empty message",
          "duration": 0.40829200000007404,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306736,
      "endTime": 1759291306761.4214,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/schema.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should initialize with zero balance",
          "status": "passed",
          "title": "should initialize with zero balance",
          "duration": 4.628520999999864,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should drop Arcana correctly",
          "status": "passed",
          "title": "should drop Arcana correctly",
          "duration": 3.0927809999998317,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should calculate drop amounts correctly",
          "status": "passed",
          "title": "should calculate drop amounts correctly",
          "duration": 0.4267299999999068,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should handle distance scaling",
          "status": "passed",
          "title": "should handle distance scaling",
          "duration": 0.35297799999989365,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should handle ward scaling",
          "status": "passed",
          "title": "should handle ward scaling",
          "duration": 0.5242279999999937,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should handle combined distance and ward scaling",
          "status": "passed",
          "title": "should handle combined distance and ward scaling",
          "duration": 0.2669330000001082,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should spend Arcana correctly",
          "status": "passed",
          "title": "should spend Arcana correctly",
          "duration": 1.1440010000001166,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should reset for new journey",
          "status": "passed",
          "title": "should reset for new journey",
          "duration": 1.0650090000001455,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should track drop history",
          "status": "passed",
          "title": "should track drop history",
          "duration": 1.2088830000000144,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should get journey statistics",
          "status": "passed",
          "title": "should get journey statistics",
          "duration": 1.6796130000000176,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should filter drops by source type",
          "status": "passed",
          "title": "should filter drops by source type",
          "duration": 1.0795359999999619,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Drop Manager"],
          "fullName": "Arcana Drop System Arcana Drop Manager should calculate total drops by source type",
          "status": "passed",
          "title": "should calculate total drops by source type",
          "duration": 0.678438000000142,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Scaling System"],
          "fullName": "Arcana Drop System Arcana Scaling System should calculate distance scaling factor",
          "status": "passed",
          "title": "should calculate distance scaling factor",
          "duration": 0.4783429999999953,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Scaling System"],
          "fullName": "Arcana Drop System Arcana Scaling System should calculate ward scaling factor",
          "status": "passed",
          "title": "should calculate ward scaling factor",
          "duration": 0.3804259999999431,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Scaling System"],
          "fullName": "Arcana Drop System Arcana Scaling System should calculate total scaling factor",
          "status": "passed",
          "title": "should calculate total scaling factor",
          "duration": 0.29326400000013564,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Scaling System"],
          "fullName": "Arcana Drop System Arcana Scaling System should calculate drop amounts for different enemy types",
          "status": "passed",
          "title": "should calculate drop amounts for different enemy types",
          "duration": 0.43008300000019517,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Arcana Scaling System"],
          "fullName": "Arcana Drop System Arcana Scaling System should apply scaling correctly",
          "status": "passed",
          "title": "should apply scaling correctly",
          "duration": 0.2814600000001519,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Performance Tests"],
          "fullName": "Arcana Drop System Performance Tests should handle many drops efficiently",
          "status": "passed",
          "title": "should handle many drops efficiently",
          "duration": 66.22566600000005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Performance Tests"],
          "fullName": "Arcana Drop System Performance Tests should handle scaling calculations efficiently",
          "status": "passed",
          "title": "should handle scaling calculations efficiently",
          "duration": 1.1373650000000453,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Edge Cases"],
          "fullName": "Arcana Drop System Edge Cases should handle zero amounts gracefully",
          "status": "passed",
          "title": "should handle zero amounts gracefully",
          "duration": 0.4159749999998894,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Edge Cases"],
          "fullName": "Arcana Drop System Edge Cases should handle negative amounts gracefully",
          "status": "passed",
          "title": "should handle negative amounts gracefully",
          "duration": 0.2989199999999528,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Edge Cases"],
          "fullName": "Arcana Drop System Edge Cases should handle spending more than available",
          "status": "passed",
          "title": "should handle spending more than available",
          "duration": 0.6770409999999174,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Arcana Drop System", "Edge Cases"],
          "fullName": "Arcana Drop System Edge Cases should handle spending zero amount",
          "status": "passed",
          "title": "should handle spending zero amount",
          "duration": 0.42016499999999724,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306628,
      "endTime": 1759291306716.677,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/arcana-drop.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Enchant System", "Enchant Cost Calculator"],
          "fullName": "Enchant System Enchant Cost Calculator should calculate correct costs for geometric progression",
          "status": "passed",
          "title": "should calculate correct costs for geometric progression",
          "duration": 3.7390929999999116,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Cost Calculator"],
          "fullName": "Enchant System Enchant Cost Calculator should calculate total cost for level ranges",
          "status": "passed",
          "title": "should calculate total cost for level ranges",
          "duration": 0.5652959999999894,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Cost Calculator"],
          "fullName": "Enchant System Enchant Cost Calculator should handle Soul Forging cost calculations",
          "status": "passed",
          "title": "should handle Soul Forging cost calculations",
          "duration": 0.5720000000001164,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Cost Calculator"],
          "fullName": "Enchant System Enchant Cost Calculator should validate affordable purchases",
          "status": "passed",
          "title": "should validate affordable purchases",
          "duration": 0.38133399999992434,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Cost Calculator"],
          "fullName": "Enchant System Enchant Cost Calculator should calculate max affordable level",
          "status": "passed",
          "title": "should calculate max affordable level",
          "duration": 0.7294919999999365,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should initialize with zero levels",
          "status": "passed",
          "title": "should initialize with zero levels",
          "duration": 0.6083869999999933,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should calculate effective cap correctly",
          "status": "passed",
          "title": "should calculate effective cap correctly",
          "duration": 0.2776890000000094,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should handle temporary Soul Forging purchases",
          "status": "passed",
          "title": "should handle temporary Soul Forging purchases",
          "duration": 1.2243869999999788,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should handle permanent Soul Forging purchases",
          "status": "passed",
          "title": "should handle permanent Soul Forging purchases",
          "duration": 0.8605850000001283,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should reset temporary Soul Forging",
          "status": "passed",
          "title": "should reset temporary Soul Forging",
          "duration": 0.4835809999999583,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should track transaction history",
          "status": "passed",
          "title": "should track transaction history",
          "duration": 0.4206540000000132,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Soul Forging System"],
          "fullName": "Enchant System Soul Forging System should provide Soul Forging statistics",
          "status": "passed",
          "title": "should provide Soul Forging statistics",
          "duration": 0.49391800000012154,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should initialize with zero levels",
          "status": "passed",
          "title": "should initialize with zero levels",
          "duration": 0.27300900000000183,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should have correct initial cap",
          "status": "passed",
          "title": "should have correct initial cap",
          "duration": 0.16608199999996032,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should calculate enchant costs correctly",
          "status": "passed",
          "title": "should calculate enchant costs correctly",
          "duration": 0.1887810000000627,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should enforce location restrictions for Arcana spending",
          "status": "passed",
          "title": "should enforce location restrictions for Arcana spending",
          "duration": 0.1841020000001663,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should enforce location restrictions for Soul Power spending",
          "status": "passed",
          "title": "should enforce location restrictions for Soul Power spending",
          "duration": 0.16901599999982864,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should handle successful enchant purchases",
          "status": "passed",
          "title": "should handle successful enchant purchases",
          "duration": 0.4517329999998765,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should handle failed enchant purchases due to location",
          "status": "passed",
          "title": "should handle failed enchant purchases due to location",
          "duration": 0.6183750000000146,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should handle failed enchant purchases due to insufficient currency",
          "status": "passed",
          "title": "should handle failed enchant purchases due to insufficient currency",
          "duration": 0.5374280000000908,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should reset temporary enchants",
          "status": "passed",
          "title": "should reset temporary enchants",
          "duration": 0.39697799999999006,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should track transaction history",
          "status": "passed",
          "title": "should track transaction history",
          "duration": 0.31980300000009265,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Enchant Manager"],
          "fullName": "Enchant System Enchant Manager should provide analytics",
          "status": "passed",
          "title": "should provide analytics",
          "duration": 0.5799620000000232,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Integration Tests"],
          "fullName": "Enchant System Integration Tests should integrate Soul Forging with enchant caps",
          "status": "passed",
          "title": "should integrate Soul Forging with enchant caps",
          "duration": 0.30611399999997957,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Integration Tests"],
          "fullName": "Enchant System Integration Tests should handle complex enchant scenarios",
          "status": "passed",
          "title": "should handle complex enchant scenarios",
          "duration": 0.4162539999999808,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Integration Tests"],
          "fullName": "Enchant System Integration Tests should handle location switching",
          "status": "passed",
          "title": "should handle location switching",
          "duration": 0.38175200000000586,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Performance Tests"],
          "fullName": "Enchant System Performance Tests should meet performance targets for cost calculations",
          "status": "passed",
          "title": "should meet performance targets for cost calculations",
          "duration": 0.5923239999999623,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Performance Tests"],
          "fullName": "Enchant System Performance Tests should meet performance targets for enchant operations",
          "status": "passed",
          "title": "should meet performance targets for enchant operations",
          "duration": 0.8000320000001011,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Edge Cases"],
          "fullName": "Enchant System Edge Cases should handle zero amount purchases",
          "status": "passed",
          "title": "should handle zero amount purchases",
          "duration": 0.3809139999998479,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Edge Cases"],
          "fullName": "Enchant System Edge Cases should handle negative amount purchases",
          "status": "passed",
          "title": "should handle negative amount purchases",
          "duration": 0.23180299999989984,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Edge Cases"],
          "fullName": "Enchant System Edge Cases should handle invalid enchant types gracefully",
          "status": "passed",
          "title": "should handle invalid enchant types gracefully",
          "duration": 0.9689089999999396,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enchant System", "Edge Cases"],
          "fullName": "Enchant System Edge Cases should handle Soul Forging with insufficient currency",
          "status": "passed",
          "title": "should handle Soul Forging with insufficient currency",
          "duration": 0.31121299999995244,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306704,
      "endTime": 1759291306724.3113,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/enchant-system.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should initialize with zero levels",
          "status": "passed",
          "title": "should initialize with zero levels",
          "duration": 3.5262159999999767,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should handle temporary Soul Forging purchases",
          "status": "passed",
          "title": "should handle temporary Soul Forging purchases",
          "duration": 1.1671869999997853,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should handle permanent Soul Forging purchases",
          "status": "passed",
          "title": "should handle permanent Soul Forging purchases",
          "duration": 0.41450800000006893,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should track milestones and achievements",
          "status": "passed",
          "title": "should track milestones and achievements",
          "duration": 0.31414700000004814,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should provide analytics",
          "status": "passed",
          "title": "should provide analytics",
          "duration": 0.43762599999990925,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should calculate optimal Soul Forging",
          "status": "passed",
          "title": "should calculate optimal Soul Forging",
          "duration": 0.42819699999995464,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should validate Soul Forging progression",
          "status": "passed",
          "title": "should validate Soul Forging progression",
          "duration": 0.8260130000001027,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should save and load state",
          "status": "passed",
          "title": "should save and load state",
          "duration": 0.4045209999999315,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Enhanced Soul Forging Manager"],
          "fullName": "Enhanced Soul Forging System Enhanced Soul Forging Manager should reset temporary Soul Forging",
          "status": "passed",
          "title": "should reset temporary Soul Forging",
          "duration": 0.5100509999999758,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Cost Optimizer"],
          "fullName": "Enhanced Soul Forging System Soul Forging Cost Optimizer should calculate optimal purchase",
          "status": "passed",
          "title": "should calculate optimal purchase",
          "duration": 1.2571430000000419,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Cost Optimizer"],
          "fullName": "Enhanced Soul Forging System Soul Forging Cost Optimizer should calculate bulk purchase",
          "status": "passed",
          "title": "should calculate bulk purchase",
          "duration": 0.3378219999999601,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Cost Optimizer"],
          "fullName": "Enhanced Soul Forging System Soul Forging Cost Optimizer should calculate cost progression",
          "status": "passed",
          "title": "should calculate cost progression",
          "duration": 0.30373899999995047,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Cost Optimizer"],
          "fullName": "Enhanced Soul Forging System Soul Forging Cost Optimizer should get cost efficiency",
          "status": "passed",
          "title": "should get cost efficiency",
          "duration": 0.14988000000016655,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Persistence"],
          "fullName": "Enhanced Soul Forging System Soul Forging Persistence should save and load state",
          "status": "passed",
          "title": "should save and load state",
          "duration": 0.7990539999998418,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Persistence"],
          "fullName": "Enhanced Soul Forging System Soul Forging Persistence should validate state",
          "status": "passed",
          "title": "should validate state",
          "duration": 0.253105000000005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Persistence"],
          "fullName": "Enhanced Soul Forging System Soul Forging Persistence should repair invalid state",
          "status": "passed",
          "title": "should repair invalid state",
          "duration": 0.28620999999998276,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Persistence"],
          "fullName": "Enhanced Soul Forging System Soul Forging Persistence should list saved states",
          "status": "passed",
          "title": "should list saved states",
          "duration": 0.47121900000001915,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Persistence"],
          "fullName": "Enhanced Soul Forging System Soul Forging Persistence should delete saved state",
          "status": "passed",
          "title": "should delete saved state",
          "duration": 0.2786670000000413,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should analyze Soul Forging state",
          "status": "passed",
          "title": "should analyze Soul Forging state",
          "duration": 1.0749269999998887,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should generate analytics report",
          "status": "passed",
          "title": "should generate analytics report",
          "duration": 0.5549589999998261,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should get progression analytics",
          "status": "passed",
          "title": "should get progression analytics",
          "duration": 0.22516799999993964,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should get cost analytics",
          "status": "passed",
          "title": "should get cost analytics",
          "duration": 0.2180439999999635,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should get performance analytics",
          "status": "passed",
          "title": "should get performance analytics",
          "duration": 0.2342470000000958,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should get trend analytics",
          "status": "passed",
          "title": "should get trend analytics",
          "duration": 0.528489000000036,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Soul Forging Analytics"],
          "fullName": "Enhanced Soul Forging System Soul Forging Analytics should get recommendations",
          "status": "passed",
          "title": "should get recommendations",
          "duration": 0.40361299999995026,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Integration Tests"],
          "fullName": "Enhanced Soul Forging System Integration Tests should integrate all Soul Forging components",
          "status": "passed",
          "title": "should integrate all Soul Forging components",
          "duration": 0.6822799999999916,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Integration Tests"],
          "fullName": "Enhanced Soul Forging System Integration Tests should handle complex Soul Forging scenarios",
          "status": "passed",
          "title": "should handle complex Soul Forging scenarios",
          "duration": 0.6345079999998688,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Integration Tests"],
          "fullName": "Enhanced Soul Forging System Integration Tests should handle state persistence across sessions",
          "status": "passed",
          "title": "should handle state persistence across sessions",
          "duration": 0.4693339999998898,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Performance Tests"],
          "fullName": "Enhanced Soul Forging System Performance Tests should meet performance targets for Soul Forging operations",
          "status": "passed",
          "title": "should meet performance targets for Soul Forging operations",
          "duration": 3.7451690000000326,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Performance Tests"],
          "fullName": "Enhanced Soul Forging System Performance Tests should meet performance targets for cost calculations",
          "status": "passed",
          "title": "should meet performance targets for cost calculations",
          "duration": 9.300134000000071,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Edge Cases"],
          "fullName": "Enhanced Soul Forging System Edge Cases should handle zero amount purchases",
          "status": "passed",
          "title": "should handle zero amount purchases",
          "duration": 0.6131359999999404,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Edge Cases"],
          "fullName": "Enhanced Soul Forging System Edge Cases should handle negative amount purchases",
          "status": "passed",
          "title": "should handle negative amount purchases",
          "duration": 0.3373340000000553,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Edge Cases"],
          "fullName": "Enhanced Soul Forging System Edge Cases should handle insufficient currency",
          "status": "passed",
          "title": "should handle insufficient currency",
          "duration": 0.4295940000001792,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Edge Cases"],
          "fullName": "Enhanced Soul Forging System Edge Cases should handle invalid state loading",
          "status": "passed",
          "title": "should handle invalid state loading",
          "duration": 1.7822100000000773,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Soul Forging System", "Edge Cases"],
          "fullName": "Enhanced Soul Forging System Edge Cases should handle empty analytics",
          "status": "passed",
          "title": "should handle empty analytics",
          "duration": 0.4385330000000067,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306777,
      "endTime": 1759291306813.4385,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/soul-forging.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should initialize with zero balance",
          "status": "passed",
          "title": "should initialize with zero balance",
          "duration": 4.811644999999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should drop Soul Power correctly",
          "status": "passed",
          "title": "should drop Soul Power correctly",
          "duration": 3.1926539999999477,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should calculate drop chances and amounts correctly",
          "status": "passed",
          "title": "should calculate drop chances and amounts correctly",
          "duration": 0.8691049999999905,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should handle distance scaling (slower than Arcana)",
          "status": "passed",
          "title": "should handle distance scaling (slower than Arcana)",
          "duration": 0.4013079999999718,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should handle ward scaling (slower than Arcana)",
          "status": "passed",
          "title": "should handle ward scaling (slower than Arcana)",
          "duration": 0.4310609999999997,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should handle combined distance and ward scaling",
          "status": "passed",
          "title": "should handle combined distance and ward scaling",
          "duration": 0.28620999999998276,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should spend Soul Power correctly",
          "status": "passed",
          "title": "should spend Soul Power correctly",
          "duration": 1.1076829999999518,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should track drop history",
          "status": "passed",
          "title": "should track drop history",
          "duration": 0.881396999999879,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should get lifetime statistics",
          "status": "passed",
          "title": "should get lifetime statistics",
          "duration": 2.9053969999999936,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should filter drops by source type",
          "status": "passed",
          "title": "should filter drops by source type",
          "duration": 1.9578610000000936,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should calculate total drops by source type",
          "status": "passed",
          "title": "should calculate total drops by source type",
          "duration": 1.2470860000000812,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should get drop rate statistics",
          "status": "passed",
          "title": "should get drop rate statistics",
          "duration": 1.8588250000000244,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Drop Manager"],
          "fullName": "Soul Power Drop System Soul Power Drop Manager should get scaling statistics",
          "status": "passed",
          "title": "should get scaling statistics",
          "duration": 1.4359360000000834,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should calculate distance scaling factor (slower than Arcana)",
          "status": "passed",
          "title": "should calculate distance scaling factor (slower than Arcana)",
          "duration": 0.5663429999999607,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should calculate ward scaling factor (slower than Arcana)",
          "status": "passed",
          "title": "should calculate ward scaling factor (slower than Arcana)",
          "duration": 0.38978399999996327,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should calculate total scaling factor",
          "status": "passed",
          "title": "should calculate total scaling factor",
          "duration": 0.42665999999985615,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should calculate drop amounts for different enemy types",
          "status": "passed",
          "title": "should calculate drop amounts for different enemy types",
          "duration": 0.46737800000005336,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should apply scaling correctly",
          "status": "passed",
          "title": "should apply scaling correctly",
          "duration": 0.464095000000043,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Soul Power Scaling System"],
          "fullName": "Soul Power Drop System Soul Power Scaling System should respect min/max drop amounts",
          "status": "passed",
          "title": "should respect min/max drop amounts",
          "duration": 0.28104099999995924,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Performance Tests"],
          "fullName": "Soul Power Drop System Performance Tests should handle many drops efficiently",
          "status": "passed",
          "title": "should handle many drops efficiently",
          "duration": 67.88069399999995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Performance Tests"],
          "fullName": "Soul Power Drop System Performance Tests should handle scaling calculations efficiently",
          "status": "passed",
          "title": "should handle scaling calculations efficiently",
          "duration": 1.36358099999984,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle zero amounts gracefully",
          "status": "passed",
          "title": "should handle zero amounts gracefully",
          "duration": 0.26211400000011054,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle negative amounts gracefully",
          "status": "passed",
          "title": "should handle negative amounts gracefully",
          "duration": 0.20344700000009652,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle spending more than available",
          "status": "passed",
          "title": "should handle spending more than available",
          "duration": 0.45326999999997497,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle spending zero amount",
          "status": "passed",
          "title": "should handle spending zero amount",
          "duration": 0.3439690000000155,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle very low Arcana amounts",
          "status": "passed",
          "title": "should handle very low Arcana amounts",
          "duration": 0.18165699999985918,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Edge Cases"],
          "fullName": "Soul Power Drop System Edge Cases should handle very high Arcana amounts",
          "status": "passed",
          "title": "should handle very high Arcana amounts",
          "duration": 0.18591799999990144,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Chance-based Mechanics"],
          "fullName": "Soul Power Drop System Chance-based Mechanics should have reasonable drop chances",
          "status": "passed",
          "title": "should have reasonable drop chances",
          "duration": 0.4083619999998973,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Soul Power Drop System", "Chance-based Mechanics"],
          "fullName": "Soul Power Drop System Chance-based Mechanics should cap drop chances at reasonable levels",
          "status": "passed",
          "title": "should cap drop chances at reasonable levels",
          "duration": 0.18221599999992577,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306607,
      "endTime": 1759291306704.1821,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/economy/soul-power-drop.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Flag Parsing", "DEFAULT_FLAGS"],
          "fullName": "Flag Parsing DEFAULT_FLAGS should have correct default values",
          "status": "passed",
          "title": "should have correct default values",
          "duration": 2.888915000000111,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should return empty object in production mode",
          "status": "passed",
          "title": "should return empty object in production mode",
          "duration": 0.5587299999999686,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should return empty object when no env vars are set",
          "status": "passed",
          "title": "should return empty object when no env vars are set",
          "duration": 0.22425999999995838,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse HUD flag from environment",
          "status": "passed",
          "title": "should parse HUD flag from environment",
          "duration": 0.30429900000001453,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse dev menu flag from environment",
          "status": "passed",
          "title": "should parse dev menu flag from environment",
          "duration": 0.3368440000000419,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse console logging flag from environment",
          "status": "passed",
          "title": "should parse console logging flag from environment",
          "duration": 0.32217800000000807,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse legacy background sim flag from environment",
          "status": "passed",
          "title": "should parse legacy background sim flag from environment",
          "duration": 0.22663499999998749,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse force mode from environment",
          "status": "passed",
          "title": "should parse force mode from environment",
          "duration": 0.194437999999991,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should ignore invalid force mode values",
          "status": "passed",
          "title": "should ignore invalid force mode values",
          "duration": 0.48972699999990255,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getEnvFlags"],
          "fullName": "Flag Parsing getEnvFlags should parse multiple flags from environment",
          "status": "passed",
          "title": "should parse multiple flags from environment",
          "duration": 0.45047699999997803,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should return empty object in production mode",
          "status": "passed",
          "title": "should return empty object in production mode",
          "duration": 0.3202919999999949,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should return empty object when no query params are present",
          "status": "passed",
          "title": "should return empty object when no query params are present",
          "duration": 0.28669800000000123,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse HUD flag from query string",
          "status": "passed",
          "title": "should parse HUD flag from query string",
          "duration": 0.3311869999999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse dev menu flag from query string",
          "status": "passed",
          "title": "should parse dev menu flag from query string",
          "duration": 0.21720600000003287,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse console logging flag from query string",
          "status": "passed",
          "title": "should parse console logging flag from query string",
          "duration": 0.21951199999989512,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse legacy background sim flag from query string",
          "status": "passed",
          "title": "should parse legacy background sim flag from query string",
          "duration": 0.2753139999999803,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse force mode from query string",
          "status": "passed",
          "title": "should parse force mode from query string",
          "duration": 0.19017799999994622,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should ignore invalid force mode values",
          "status": "passed",
          "title": "should ignore invalid force mode values",
          "duration": 0.1755120000000261,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should parse multiple flags from query string",
          "status": "passed",
          "title": "should parse multiple flags from query string",
          "duration": 0.18689500000004955,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "getQueryFlags"],
          "fullName": "Flag Parsing getQueryFlags should ignore non-flag query parameters",
          "status": "passed",
          "title": "should ignore non-flag query parameters",
          "duration": 0.33411999999998443,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "mergeFlags"],
          "fullName": "Flag Parsing mergeFlags should merge flags with correct precedence: query > env > defaults",
          "status": "passed",
          "title": "should merge flags with correct precedence: query > env > defaults",
          "duration": 0.25121899999999187,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "mergeFlags"],
          "fullName": "Flag Parsing mergeFlags should handle empty env and query flags",
          "status": "passed",
          "title": "should handle empty env and query flags",
          "duration": 0.18074999999998909,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "mergeFlags"],
          "fullName": "Flag Parsing mergeFlags should handle partial flag overrides",
          "status": "passed",
          "title": "should handle partial flag overrides",
          "duration": 0.17592999999999392,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "createFlags"],
          "fullName": "Flag Parsing createFlags should create complete flag configuration from URL",
          "status": "passed",
          "title": "should create complete flag configuration from URL",
          "duration": 0.2762920000000122,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "createFlags"],
          "fullName": "Flag Parsing createFlags should return defaults when no overrides are present",
          "status": "passed",
          "title": "should return defaults when no overrides are present",
          "duration": 0.5360319999999774,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "createFlags"],
          "fullName": "Flag Parsing createFlags should respect production mode restrictions",
          "status": "passed",
          "title": "should respect production mode restrictions",
          "duration": 0.2403229999999894,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "ForceMode type validation"],
          "fullName": "Flag Parsing ForceMode type validation should accept valid force mode values",
          "status": "passed",
          "title": "should accept valid force mode values",
          "duration": 0.6178859999999986,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "ForceMode type validation"],
          "fullName": "Flag Parsing ForceMode type validation should reject invalid force mode values",
          "status": "passed",
          "title": "should reject invalid force mode values",
          "duration": 0.4849780000000692,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "Edge cases"],
          "fullName": "Flag Parsing Edge cases should handle malformed URLs gracefully",
          "status": "passed",
          "title": "should handle malformed URLs gracefully",
          "duration": 1.3842539999999417,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "Edge cases"],
          "fullName": "Flag Parsing Edge cases should handle empty query parameter values",
          "status": "passed",
          "title": "should handle empty query parameter values",
          "duration": 0.25547900000003665,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Parsing", "Edge cases"],
          "fullName": "Flag Parsing Edge cases should handle undefined environment variables",
          "status": "passed",
          "title": "should handle undefined environment variables",
          "duration": 0.18493999999998323,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306635,
      "endTime": 1759291306649.3843,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/flags/parse.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Flag Store", "appFlags store"],
          "fullName": "Flag Store appFlags store should initialize with default values",
          "status": "passed",
          "title": "should initialize with default values",
          "duration": 3.14111099999991,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "appFlags store"],
          "fullName": "Flag Store appFlags store should update when set is called",
          "status": "passed",
          "title": "should update when set is called",
          "duration": 0.31135199999994256,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "appFlags store"],
          "fullName": "Flag Store appFlags store should update when update is called",
          "status": "passed",
          "title": "should update when update is called",
          "duration": 0.35053399999992507,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "appFlags store"],
          "fullName": "Flag Store appFlags store should notify subscribers when values change",
          "status": "passed",
          "title": "should notify subscribers when values change",
          "duration": 2.515544000000091,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "appFlags store"],
          "fullName": "Flag Store appFlags store should not notify unsubscribed listeners",
          "status": "passed",
          "title": "should not notify unsubscribed listeners",
          "duration": 0.522762000000057,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should derive hudEnabled correctly",
          "status": "passed",
          "title": "should derive hudEnabled correctly",
          "duration": 0.7924890000001596,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should derive devMenuEnabled correctly",
          "status": "passed",
          "title": "should derive devMenuEnabled correctly",
          "duration": 0.4144380000000183,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should derive logConsoleEnabled correctly",
          "status": "passed",
          "title": "should derive logConsoleEnabled correctly",
          "duration": 0.29521999999997206,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should derive legacyBgSimEnabled correctly",
          "status": "passed",
          "title": "should derive legacyBgSimEnabled correctly",
          "duration": 0.38273000000003776,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should derive forceMode correctly",
          "status": "passed",
          "title": "should derive forceMode correctly",
          "duration": 0.35437400000000707,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "derived stores"],
          "fullName": "Flag Store derived stores should update derived stores when parent store changes",
          "status": "passed",
          "title": "should update derived stores when parent store changes",
          "duration": 0.5913459999999304,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "isFlagEnabled utility"],
          "fullName": "Flag Store isFlagEnabled utility should return a derived store for boolean flags",
          "status": "passed",
          "title": "should return a derived store for boolean flags",
          "duration": 0.2370410000000902,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "isFlagEnabled utility"],
          "fullName": "Flag Store isFlagEnabled utility should work with all boolean flags",
          "status": "passed",
          "title": "should work with all boolean flags",
          "duration": 0.510539000000108,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "isFlagEnabled utility"],
          "fullName": "Flag Store isFlagEnabled utility should convert non-boolean values to boolean",
          "status": "passed",
          "title": "should convert non-boolean values to boolean",
          "duration": 0.17083200000001852,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "isFlagEnabled utility"],
          "fullName": "Flag Store isFlagEnabled utility should update when flag values change",
          "status": "passed",
          "title": "should update when flag values change",
          "duration": 0.37944800000013856,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "getCurrentFlags utility"],
          "fullName": "Flag Store getCurrentFlags utility should return current flag values",
          "status": "passed",
          "title": "should return current flag values",
          "duration": 0.2734290000000783,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "getCurrentFlags utility"],
          "fullName": "Flag Store getCurrentFlags utility should return updated values after store changes",
          "status": "passed",
          "title": "should return updated values after store changes",
          "duration": 0.22935900000015863,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "getCurrentFlags utility"],
          "fullName": "Flag Store getCurrentFlags utility should return a snapshot of current state",
          "status": "passed",
          "title": "should return a snapshot of current state",
          "duration": 0.3316059999999652,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "store integration"],
          "fullName": "Flag Store store integration should maintain consistency across all derived stores",
          "status": "passed",
          "title": "should maintain consistency across all derived stores",
          "duration": 0.47736600000007456,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "store integration"],
          "fullName": "Flag Store store integration should handle rapid updates correctly",
          "status": "passed",
          "title": "should handle rapid updates correctly",
          "duration": 0.34347999999999956,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "store integration"],
          "fullName": "Flag Store store integration should handle partial updates correctly",
          "status": "passed",
          "title": "should handle partial updates correctly",
          "duration": 0.28439400000002024,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "edge cases"],
          "fullName": "Flag Store edge cases should handle undefined values gracefully",
          "status": "passed",
          "title": "should handle undefined values gracefully",
          "duration": 1.4028319999999894,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Flag Store", "edge cases"],
          "fullName": "Flag Store edge cases should handle multiple subscribers correctly",
          "status": "passed",
          "title": "should handle multiple subscribers correctly",
          "duration": 2.1290419999997994,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306825,
      "endTime": 1759291306843.1292,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/flags/store.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Handling Functions"],
          "fullName": "Error Boundary Integration Tests Error Handling Functions should handle page reload functionality",
          "status": "passed",
          "title": "should handle page reload functionality",
          "duration": 3.0747619999999642,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Handling Functions"],
          "fullName": "Error Boundary Integration Tests Error Handling Functions should handle navigation to home",
          "status": "passed",
          "title": "should handle navigation to home",
          "duration": 0.705885999999964,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Handling Functions"],
          "fullName": "Error Boundary Integration Tests Error Handling Functions should handle log export functionality",
          "status": "passed",
          "title": "should handle log export functionality",
          "duration": 4.488908000000038,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Handling Functions"],
          "fullName": "Error Boundary Integration Tests Error Handling Functions should handle log export errors gracefully",
          "status": "passed",
          "title": "should handle log export errors gracefully",
          "duration": 10.741239000000064,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Handling Functions"],
          "fullName": "Error Boundary Integration Tests Error Handling Functions should prevent multiple simultaneous log exports",
          "status": "passed",
          "title": "should prevent multiple simultaneous log exports",
          "duration": 105.56062300000008,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Information Processing"],
          "fullName": "Error Boundary Integration Tests Error Information Processing should generate detailed error information",
          "status": "passed",
          "title": "should generate detailed error information",
          "duration": 1.4022730000001502,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Error Information Processing"],
          "fullName": "Error Boundary Integration Tests Error Information Processing should handle missing error information gracefully",
          "status": "passed",
          "title": "should handle missing error information gracefully",
          "duration": 0.5010409999999865,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Download Functionality"],
          "fullName": "Error Boundary Integration Tests Download Functionality should generate correct filename with current date",
          "status": "passed",
          "title": "should generate correct filename with current date",
          "duration": 0.43860300000005736,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Download Functionality"],
          "fullName": "Error Boundary Integration Tests Download Functionality should handle download errors gracefully",
          "status": "passed",
          "title": "should handle download errors gracefully",
          "duration": 2.6367179999999735,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Integration Scenarios"],
          "fullName": "Error Boundary Integration Tests Integration Scenarios should handle complete error boundary workflow",
          "status": "passed",
          "title": "should handle complete error boundary workflow",
          "duration": 1.245689000000084,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Error Boundary Integration Tests", "Integration Scenarios"],
          "fullName": "Error Boundary Integration Tests Integration Scenarios should handle rapid user interactions without issues",
          "status": "passed",
          "title": "should handle rapid user interactions without issues",
          "duration": 0.5791240000000926,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306525,
      "endTime": 1759291306657.579,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/integration/error-boundary.int.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Log Export Integration Tests", "NDJSON Export"],
          "fullName": "Log Export Integration Tests NDJSON Export should export logs as NDJSON blob",
          "status": "passed",
          "title": "should export logs as NDJSON blob",
          "duration": 12.184718999999973,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "NDJSON Export"],
          "fullName": "Log Export Integration Tests NDJSON Export should export empty logs when no logs are present",
          "status": "passed",
          "title": "should export empty logs when no logs are present",
          "duration": 1.045594000000051,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "NDJSON Export"],
          "fullName": "Log Export Integration Tests NDJSON Export should include proper NDJSON formatting",
          "status": "passed",
          "title": "should include proper NDJSON formatting",
          "duration": 2.3840319999999338,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "NDJSON Export"],
          "fullName": "Log Export Integration Tests NDJSON Export should handle multiple log entries correctly",
          "status": "passed",
          "title": "should handle multiple log entries correctly",
          "duration": 1.119416000000001,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Download Functionality"],
          "fullName": "Log Export Integration Tests Download Functionality should trigger download with correct filename",
          "status": "passed",
          "title": "should trigger download with correct filename",
          "duration": 3.7916139999999814,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Download Functionality"],
          "fullName": "Log Export Integration Tests Download Functionality should generate filename with current date",
          "status": "passed",
          "title": "should generate filename with current date",
          "duration": 0.5497210000000905,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Download Functionality"],
          "fullName": "Log Export Integration Tests Download Functionality should handle download errors gracefully",
          "status": "passed",
          "title": "should handle download errors gracefully",
          "duration": 0.9708640000000059,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "PII Redaction in Exports"],
          "fullName": "Log Export Integration Tests PII Redaction in Exports should redact sensitive information in exported logs",
          "status": "passed",
          "title": "should redact sensitive information in exported logs",
          "duration": 0.8255940000000237,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "PII Redaction in Exports"],
          "fullName": "Log Export Integration Tests PII Redaction in Exports should preserve allowed data fields in exports",
          "status": "passed",
          "title": "should preserve allowed data fields in exports",
          "duration": 1.0479689999999664,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "PII Redaction in Exports"],
          "fullName": "Log Export Integration Tests PII Redaction in Exports should handle nested objects in data field",
          "status": "passed",
          "title": "should handle nested objects in data field",
          "duration": 0.8521339999999782,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Memory Management"],
          "fullName": "Log Export Integration Tests Memory Management should respect memory limits during export",
          "status": "passed",
          "title": "should respect memory limits during export",
          "duration": 0.8279689999999391,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Memory Management"],
          "fullName": "Log Export Integration Tests Memory Management should handle large exports efficiently",
          "status": "passed",
          "title": "should handle large exports efficiently",
          "duration": 3.5493339999999307,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Error Handling"],
          "fullName": "Log Export Integration Tests Error Handling should handle export errors gracefully",
          "status": "passed",
          "title": "should handle export errors gracefully",
          "duration": 3.618336999999997,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Error Handling"],
          "fullName": "Log Export Integration Tests Error Handling should handle corrupted log data",
          "status": "passed",
          "title": "should handle corrupted log data",
          "duration": 1.2892000000000507,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Log Export Integration Tests", "Integration with Error Boundary"],
          "fullName": "Log Export Integration Tests Integration with Error Boundary should work correctly when called from error boundary",
          "status": "passed",
          "title": "should work correctly when called from error boundary",
          "duration": 1.5915430000000015,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759291306527,
      "endTime": 1759291306564.5916,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/integration/export-logs.int.spec.ts"
    }
  ]
}
