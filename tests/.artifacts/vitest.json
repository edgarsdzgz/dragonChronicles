{
  "numTotalTestSuites": 27,
  "numPassedTestSuites": 27,
  "numFailedTestSuites": 0,
  "numPendingTestSuites": 0,
  "numTotalTests": 72,
  "numPassedTests": 72,
  "numFailedTests": 0,
  "numPendingTests": 0,
  "numTodoTests": 0,
  "startTime": 1756949178228,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["", "Atomic Write Operations", "putSaveAtomic"],
          "fullName": " Atomic Write Operations putSaveAtomic should write save data atomically",
          "status": "passed",
          "title": "should write save data atomically",
          "duration": 36,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Atomic Write Operations", "putSaveAtomic"],
          "fullName": " Atomic Write Operations putSaveAtomic should update active profile pointer",
          "status": "passed",
          "title": "should update active profile pointer",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Atomic Write Operations", "putSaveAtomic"],
          "fullName": " Atomic Write Operations putSaveAtomic should prune old saves to keep only 3 backups",
          "status": "passed",
          "title": "should prune old saves to keep only 3 backups",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Atomic Write Operations", "putSaveAtomic"],
          "fullName": " Atomic Write Operations putSaveAtomic should handle concurrent writes to different profiles",
          "status": "passed",
          "title": "should handle concurrent writes to different profiles",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Atomic Write Operations", "putSaveAtomic"],
          "fullName": " Atomic Write Operations putSaveAtomic should maintain data integrity during transaction failures",
          "status": "passed",
          "title": "should maintain data integrity during transaction failures",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Atomic Write Operations", "getActiveSave"],
          "fullName": " Atomic Write Operations getActiveSave should return the most recent save for a profile",
          "status": "passed",
          "title": "should return the most recent save for a profile",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Atomic Write Operations", "getActiveSave"],
          "fullName": " Atomic Write Operations getActiveSave should return null for non-existent profile",
          "status": "passed",
          "title": "should return null for non-existent profile",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Atomic Write Operations", "getActiveSave"],
          "fullName": " Atomic Write Operations getActiveSave should handle profile with multiple saves correctly",
          "status": "passed",
          "title": "should handle profile with multiple saves correctly",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Atomic Write Operations", "Database consistency"],
          "fullName": " Atomic Write Operations Database consistency should maintain referential integrity between saves and meta tables",
          "status": "passed",
          "title": "should maintain referential integrity between saves and meta tables",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Atomic Write Operations", "Database consistency"],
          "fullName": " Atomic Write Operations Database consistency should handle database corruption gracefully",
          "status": "passed",
          "title": "should handle database corruption gracefully",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Atomic Write Operations", "W3 time accounting integration"],
          "fullName": " Atomic Write Operations W3 time accounting integration should preserve W3 time accounting fields during atomic writes",
          "status": "passed",
          "title": "should preserve W3 time accounting fields during atomic writes",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Atomic Write Operations", "W3 time accounting integration"],
          "fullName": " Atomic Write Operations W3 time accounting integration should handle W3 time accounting updates correctly",
          "status": "passed",
          "title": "should handle W3 time accounting updates correctly",
          "duration": 5,
          "failureMessages": []
        }
      ],
      "startTime": 1756949179107,
      "endTime": 1756949179210,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/atomic.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["", "Export/Import Functionality", "exportAllProfiles"],
          "fullName": " Export/Import Functionality exportAllProfiles should export all profiles with correct format",
          "status": "passed",
          "title": "should export all profiles with correct format",
          "duration": 41,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "exportAllProfiles"],
          "fullName": " Export/Import Functionality exportAllProfiles should include W3 time accounting fields in export",
          "status": "passed",
          "title": "should include W3 time accounting fields in export",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "exportAllProfiles"],
          "fullName": " Export/Import Functionality exportAllProfiles should generate valid checksum for export data",
          "status": "passed",
          "title": "should generate valid checksum for export data",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "exportAllProfiles"],
          "fullName": " Export/Import Functionality exportAllProfiles should handle empty database gracefully",
          "status": "passed",
          "title": "should handle empty database gracefully",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "importFromBlob"],
          "fullName": " Export/Import Functionality importFromBlob should import valid export data correctly",
          "status": "passed",
          "title": "should import valid export data correctly",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "importFromBlob"],
          "fullName": " Export/Import Functionality importFromBlob should validate checksum during import",
          "status": "passed",
          "title": "should validate checksum during import",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "importFromBlob"],
          "fullName": " Export/Import Functionality importFromBlob should reject import with wrong file version",
          "status": "passed",
          "title": "should reject import with wrong file version",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "importFromBlob"],
          "fullName": " Export/Import Functionality importFromBlob should handle corrupted export data gracefully",
          "status": "passed",
          "title": "should handle corrupted export data gracefully",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "importFromBlob"],
          "fullName": " Export/Import Functionality importFromBlob should preserve W3 time accounting during import",
          "status": "passed",
          "title": "should preserve W3 time accounting during import",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "Round-trip data integrity"],
          "fullName": " Export/Import Functionality Round-trip data integrity should maintain data integrity through export-import cycle",
          "status": "passed",
          "title": "should maintain data integrity through export-import cycle",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "Round-trip data integrity"],
          "fullName": " Export/Import Functionality Round-trip data integrity should preserve all profile data during round-trip",
          "status": "passed",
          "title": "should preserve all profile data during round-trip",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "Codec functions"],
          "fullName": " Export/Import Functionality Codec functions should encode and validate export data correctly",
          "status": "passed",
          "title": "should encode and validate export data correctly",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "Codec functions"],
          "fullName": " Export/Import Functionality Codec functions should detect tampered export data",
          "status": "passed",
          "title": "should detect tampered export data",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "Codec functions"],
          "fullName": " Export/Import Functionality Codec functions should handle checksum generation consistently",
          "status": "passed",
          "title": "should handle checksum generation consistently",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "Multiple profile handling"],
          "fullName": " Export/Import Functionality Multiple profile handling should handle multiple profile pointers correctly",
          "status": "passed",
          "title": "should handle multiple profile pointers correctly",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Export/Import Functionality", "Multiple profile handling"],
          "fullName": " Export/Import Functionality Multiple profile handling should maintain profile independence during import",
          "status": "passed",
          "title": "should maintain profile independence during import",
          "duration": 8,
          "failureMessages": []
        }
      ],
      "startTime": 1756949179112,
      "endTime": 1756949179249,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/export-import.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["", "Migration System", "Database Version Management"],
          "fullName": " Migration System Database Version Management should return version 1 for new database",
          "status": "passed",
          "title": "should return version 1 for new database",
          "duration": 23,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Database Version Management"],
          "fullName": " Migration System Database Version Management should track database version in meta table",
          "status": "passed",
          "title": "should track database version in meta table",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Database Version Management"],
          "fullName": " Migration System Database Version Management should handle missing version gracefully",
          "status": "passed",
          "title": "should handle missing version gracefully",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Status"],
          "fullName": " Migration System Migration Status should return correct migration status for fresh database",
          "status": "passed",
          "title": "should return correct migration status for fresh database",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Status"],
          "fullName": " Migration System Migration Status should handle database with version set",
          "status": "passed",
          "title": "should handle database with version set",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Execution"],
          "fullName": " Migration System Migration Execution should handle no migrations needed",
          "status": "passed",
          "title": "should handle no migrations needed",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Execution"],
          "fullName": " Migration System Migration Execution should complete successfully when no data exists",
          "status": "passed",
          "title": "should complete successfully when no data exists",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Execution"],
          "fullName": " Migration System Migration Execution should handle migration with existing data",
          "status": "passed",
          "title": "should handle migration with existing data",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Validation"],
          "fullName": " Migration System Migration Validation should validate empty database successfully",
          "status": "passed",
          "title": "should validate empty database successfully",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Validation"],
          "fullName": " Migration System Migration Validation should validate valid save data",
          "status": "passed",
          "title": "should validate valid save data",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Validation"],
          "fullName": " Migration System Migration Validation should detect invalid save data structure",
          "status": "passed",
          "title": "should detect invalid save data structure",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Validation"],
          "fullName": " Migration System Migration Validation should detect missing required fields",
          "status": "passed",
          "title": "should detect missing required fields",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Backup"],
          "fullName": " Migration System Migration Backup should create backup successfully for empty database",
          "status": "passed",
          "title": "should create backup successfully for empty database",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Backup"],
          "fullName": " Migration System Migration Backup should create backup with save data",
          "status": "passed",
          "title": "should create backup with save data",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Backup"],
          "fullName": " Migration System Migration Backup should store backup in meta table",
          "status": "passed",
          "title": "should store backup in meta table",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Migration Backup"],
          "fullName": " Migration System Migration Backup should not backup other backups",
          "status": "passed",
          "title": "should not backup other backups",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Integration Tests"],
          "fullName": " Migration System Integration Tests should handle complete migration workflow",
          "status": "passed",
          "title": "should handle complete migration workflow",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Migration System", "Integration Tests"],
          "fullName": " Migration System Integration Tests should maintain data integrity through migration process",
          "status": "passed",
          "title": "should maintain data integrity through migration process",
          "duration": 5,
          "failureMessages": []
        }
      ],
      "startTime": 1756949179107,
      "endTime": 1756949179200,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/migrate.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["", "Schema Validation", "ProfileV1 validation"],
          "fullName": " Schema Validation ProfileV1 validation should validate a complete valid profile",
          "status": "passed",
          "title": "should validate a complete valid profile",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "ProfileV1 validation"],
          "fullName": " Schema Validation ProfileV1 validation should reject profile with missing W3 time accounting fields",
          "status": "passed",
          "title": "should reject profile with missing W3 time accounting fields",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "ProfileV1 validation"],
          "fullName": " Schema Validation ProfileV1 validation should reject profile with invalid W3 time accounting",
          "status": "passed",
          "title": "should reject profile with invalid W3 time accounting",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "ProfileV1 validation"],
          "fullName": " Schema Validation ProfileV1 validation should reject profile with invalid name length",
          "status": "passed",
          "title": "should reject profile with invalid name length",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "ProfileV1 validation"],
          "fullName": " Schema Validation ProfileV1 validation should reject profile with negative progress values",
          "status": "passed",
          "title": "should reject profile with negative progress values",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "ProfileV1 validation"],
          "fullName": " Schema Validation ProfileV1 validation should reject profile with non-integer values",
          "status": "passed",
          "title": "should reject profile with non-integer values",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "SaveV1 validation"],
          "fullName": " Schema Validation SaveV1 validation should validate a complete valid save",
          "status": "passed",
          "title": "should validate a complete valid save",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "SaveV1 validation"],
          "fullName": " Schema Validation SaveV1 validation should reject save with wrong version",
          "status": "passed",
          "title": "should reject save with wrong version",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "SaveV1 validation"],
          "fullName": " Schema Validation SaveV1 validation should reject save with no profiles",
          "status": "passed",
          "title": "should reject save with no profiles",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "SaveV1 validation"],
          "fullName": " Schema Validation SaveV1 validation should reject save with too many profiles",
          "status": "passed",
          "title": "should reject save with too many profiles",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "SaveV1 validation"],
          "fullName": " Schema Validation SaveV1 validation should reject save with invalid profile",
          "status": "passed",
          "title": "should reject save with invalid profile",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "ExportFileV1 validation"],
          "fullName": " Schema Validation ExportFileV1 validation should validate a complete valid export file",
          "status": "passed",
          "title": "should validate a complete valid export file",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "ExportFileV1 validation"],
          "fullName": " Schema Validation ExportFileV1 validation should reject export with wrong file version",
          "status": "passed",
          "title": "should reject export with wrong file version",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "ExportFileV1 validation"],
          "fullName": " Schema Validation ExportFileV1 validation should reject export with empty checksum",
          "status": "passed",
          "title": "should reject export with empty checksum",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "ExportFileV1 validation"],
          "fullName": " Schema Validation ExportFileV1 validation should reject export with invalid data",
          "status": "passed",
          "title": "should reject export with invalid data",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "Database row validation"],
          "fullName": " Schema Validation Database row validation should validate a complete valid save row",
          "status": "passed",
          "title": "should validate a complete valid save row",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "Database row validation"],
          "fullName": " Schema Validation Database row validation should validate save row with optional id",
          "status": "passed",
          "title": "should validate save row with optional id",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "Database row validation"],
          "fullName": " Schema Validation Database row validation should reject save row with invalid profile id",
          "status": "passed",
          "title": "should reject save row with invalid profile id",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "Database row validation"],
          "fullName": " Schema Validation Database row validation should validate a complete valid meta row",
          "status": "passed",
          "title": "should validate a complete valid meta row",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "Database row validation"],
          "fullName": " Schema Validation Database row validation should reject meta row with empty key",
          "status": "passed",
          "title": "should reject meta row with empty key",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "Database row validation"],
          "fullName": " Schema Validation Database row validation should validate a complete valid log row",
          "status": "passed",
          "title": "should validate a complete valid log row",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "Database row validation"],
          "fullName": " Schema Validation Database row validation should validate log row with optional id",
          "status": "passed",
          "title": "should validate log row with optional id",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "Database row validation"],
          "fullName": " Schema Validation Database row validation should validate log row with optional data",
          "status": "passed",
          "title": "should validate log row with optional data",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "Database row validation"],
          "fullName": " Schema Validation Database row validation should reject log row with invalid level",
          "status": "passed",
          "title": "should reject log row with invalid level",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "Database row validation"],
          "fullName": " Schema Validation Database row validation should reject log row with invalid source",
          "status": "passed",
          "title": "should reject log row with invalid source",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": ["", "Schema Validation", "Database row validation"],
          "fullName": " Schema Validation Database row validation should reject log row with empty message",
          "status": "passed",
          "title": "should reject log row with empty message",
          "duration": 0,
          "failureMessages": []
        }
      ],
      "startTime": 1756949179075,
      "endTime": 1756949179096,
      "status": "passed",
      "message": "",
      "name": "C:/Users/ediaz/Coding_Projects/dragonIdler/tests/db/schema.spec.ts"
    }
  ]
}
