import{E as tt,d as T,v as B,D as R,u as rt,C as L,w as N,T as P,M as V,a as Y,R as at,I as ot,b as z}from"./B2cBvE-Z.js";import{G as A,t as X,a as U,F as O,b as K}from"./Cc_xf6Qv.js";import{C as q}from"./BGfg7URi.js";class lt extends tt{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.applyFillAsTint=!0,this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return T(B,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return T(B,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return T(B,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return T(B,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return T(B,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(t=!1){this.emit("destroy",this),this.removeAllListeners();for(const e in this.chars)this.chars[e].texture?.destroy();this.chars=null,t&&(this.pages.forEach(e=>e.texture.destroy(!0)),this.pages=null)}}/**
 * tiny-lru
 *
 * @copyright 2025 Jason Mulligan <jason.mulligan@avoidwork.com>
 * @license BSD-3-Clause
 * @version 11.4.5
 */class ht{constructor(t=0,e=0,i=!1){this.first=null,this.items=Object.create(null),this.last=null,this.max=t,this.resetTtl=i,this.size=0,this.ttl=e}clear(){return this.first=null,this.items=Object.create(null),this.last=null,this.size=0,this}delete(t){if(this.has(t)){const e=this.items[t];delete this.items[t],this.size--,e.prev!==null&&(e.prev.next=e.next),e.next!==null&&(e.next.prev=e.prev),this.first===e&&(this.first=e.next),this.last===e&&(this.last=e.prev)}return this}entries(t=this.keys()){return t.map(e=>[e,this.get(e)])}evict(t=!1){if(t||this.size>0){const e=this.first;delete this.items[e.key],--this.size===0?(this.first=null,this.last=null):(this.first=e.next,this.first.prev=null)}return this}expiresAt(t){let e;return this.has(t)&&(e=this.items[t].expiry),e}get(t){const e=this.items[t];if(e!==void 0){if(this.ttl>0&&e.expiry<=Date.now()){this.delete(t);return}return this.moveToEnd(e),e.value}}has(t){return t in this.items}moveToEnd(t){this.last!==t&&(t.prev!==null&&(t.prev.next=t.next),t.next!==null&&(t.next.prev=t.prev),this.first===t&&(this.first=t.next),t.prev=this.last,t.next=null,this.last!==null&&(this.last.next=t),this.last=t,this.first===null&&(this.first=t))}keys(){const t=[];let e=this.first;for(;e!==null;)t.push(e.key),e=e.next;return t}setWithEvicted(t,e,i=this.resetTtl){let n=null;if(this.has(t))this.set(t,e,!0,i);else{this.max>0&&this.size===this.max&&(n={...this.first},this.evict(!0));let s=this.items[t]={expiry:this.ttl>0?Date.now()+this.ttl:this.ttl,key:t,prev:this.last,next:null,value:e};++this.size===1?this.first=s:this.last.next=s,this.last=s}return n}set(t,e,i=!1,n=this.resetTtl){let s=this.items[t];return i||s!==void 0?(s.value=e,i===!1&&n&&(s.expiry=this.ttl>0?Date.now()+this.ttl:this.ttl),this.moveToEnd(s)):(this.max>0&&this.size===this.max&&this.evict(!0),s=this.items[t]={expiry:this.ttl>0?Date.now()+this.ttl:this.ttl,key:t,prev:this.last,next:null,value:e},++this.size===1?this.first=s:this.last.next=s,this.last=s),this}values(t=this.keys()){return t.map(e=>this.get(e))}}function et(o=1e3,t=0,e=!1){if(isNaN(o)||o<0)throw new TypeError("Invalid max value");if(isNaN(t)||t<0)throw new TypeError("Invalid ttl value");if(typeof e!="boolean")throw new TypeError("Invalid resetTtl value");return new ht(o,t,e)}const ct=["serif","sans-serif","monospace","cursive","fantasy","system-ui"];function j(o){const t=typeof o.fontSize=="number"?`${o.fontSize}px`:o.fontSize;let e=o.fontFamily;Array.isArray(o.fontFamily)||(e=o.fontFamily.split(","));for(let i=e.length-1;i>=0;i--){let n=e[i].trim();!/([\"\'])[^\'\"]+\1/.test(n)&&!ct.includes(n)&&(n=`"${n}"`),e[i]=n}return`${o.fontStyle} ${o.fontVariant} ${o.fontWeight} ${t} ${e.join(",")}`}const $={willReadFrequently:!0},C=class l{static get experimentalLetterSpacingSupported(){let t=l._experimentalLetterSpacingSupported;if(t===void 0){const e=R.get().getCanvasRenderingContext2D().prototype;t=l._experimentalLetterSpacingSupported="letterSpacing"in e||"textLetterSpacing"in e}return t}constructor(t,e,i,n,s,r,a,h,f){this.text=t,this.style=e,this.width=i,this.height=n,this.lines=s,this.lineWidths=r,this.lineHeight=a,this.maxLineWidth=h,this.fontProperties=f}static measureText(t=" ",e,i=l._canvas,n=e.wordWrap){const s=`${t}-${e.styleKey}-wordWrap-${n}`;if(l._measurementCache.has(s))return l._measurementCache.get(s);const r=j(e),a=l.measureFont(r);a.fontSize===0&&(a.fontSize=e.fontSize,a.ascent=e.fontSize);const h=l.__context;h.font=r;const d=(n?l._wordWrap(t,e,i):t).split(/(?:\r\n|\r|\n)/),u=new Array(d.length);let g=0;for(let p=0;p<d.length;p++){const S=l._measureText(d[p],e.letterSpacing,h);u[p]=S,g=Math.max(g,S)}const m=e._stroke?.width||0;let x=g+m;e.dropShadow&&(x+=e.dropShadow.distance);const w=e.lineHeight||a.fontSize;let _=Math.max(w,a.fontSize+m)+(d.length-1)*(w+e.leading);e.dropShadow&&(_+=e.dropShadow.distance);const c=new l(t,e,x,_,d,u,w+e.leading,g,a);return l._measurementCache.set(s,c),c}static _measureText(t,e,i){let n=!1;l.experimentalLetterSpacingSupported&&(l.experimentalLetterSpacing?(i.letterSpacing=`${e}px`,i.textLetterSpacing=`${e}px`,n=!0):(i.letterSpacing="0px",i.textLetterSpacing="0px"));const s=i.measureText(t);let r=s.width;const a=-s.actualBoundingBoxLeft;let f=s.actualBoundingBoxRight-a;if(r>0)if(n)r-=e,f-=e;else{const d=(l.graphemeSegmenter(t).length-1)*e;r+=d,f+=d}return Math.max(r,f)}static _wordWrap(t,e,i=l._canvas){const n=i.getContext("2d",$);let s=0,r="",a="";const h=Object.create(null),{letterSpacing:f,whiteSpace:d}=e,u=l._collapseSpaces(d),g=l._collapseNewlines(d);let m=!u;const x=e.wordWrapWidth+f,w=l._tokenize(t);for(let _=0;_<w.length;_++){let c=w[_];if(l._isNewline(c)){if(!g){a+=l._addLine(r),m=!u,r="",s=0;continue}c=" "}if(u){const S=l.isBreakingSpace(c),y=l.isBreakingSpace(r[r.length-1]);if(S&&y)continue}const p=l._getFromCache(c,f,h,n);if(p>x)if(r!==""&&(a+=l._addLine(r),r="",s=0),l.canBreakWords(c,e.breakWords)){const S=l.wordWrapSplit(c);for(let y=0;y<S.length;y++){let v=S[y],b=v,k=1;for(;S[y+k];){const F=S[y+k];if(!l.canBreakChars(b,F,c,y,e.breakWords))v+=F;else break;b=F,k++}y+=k-1;const W=l._getFromCache(v,f,h,n);W+s>x&&(a+=l._addLine(r),m=!1,r="",s=0),r+=v,s+=W}}else{r.length>0&&(a+=l._addLine(r),r="",s=0);const S=_===w.length-1;a+=l._addLine(c,!S),m=!1,r="",s=0}else p+s>x&&(m=!1,a+=l._addLine(r),r="",s=0),(r.length>0||!l.isBreakingSpace(c)||m)&&(r+=c,s+=p)}return a+=l._addLine(r,!1),a}static _addLine(t,e=!0){return t=l._trimRight(t),t=e?`${t}
`:t,t}static _getFromCache(t,e,i,n){let s=i[t];return typeof s!="number"&&(s=l._measureText(t,e,n)+e,i[t]=s),s}static _collapseSpaces(t){return t==="normal"||t==="pre-line"}static _collapseNewlines(t){return t==="normal"}static _trimRight(t){if(typeof t!="string")return"";for(let e=t.length-1;e>=0;e--){const i=t[e];if(!l.isBreakingSpace(i))break;t=t.slice(0,-1)}return t}static _isNewline(t){return typeof t!="string"?!1:l._newlines.includes(t.charCodeAt(0))}static isBreakingSpace(t,e){return typeof t!="string"?!1:l._breakingSpaces.includes(t.charCodeAt(0))}static _tokenize(t){const e=[];let i="";if(typeof t!="string")return e;for(let n=0;n<t.length;n++){const s=t[n],r=t[n+1];if(l.isBreakingSpace(s,r)||l._isNewline(s)){i!==""&&(e.push(i),i=""),s==="\r"&&r===`
`?(e.push(`\r
`),n++):e.push(s);continue}i+=s}return i!==""&&e.push(i),e}static canBreakWords(t,e){return e}static canBreakChars(t,e,i,n,s){return!0}static wordWrapSplit(t){return l.graphemeSegmenter(t)}static measureFont(t){if(l._fonts[t])return l._fonts[t];const e=l._context;e.font=t;const i=e.measureText(l.METRICS_STRING+l.BASELINE_SYMBOL),n={ascent:i.actualBoundingBoxAscent,descent:i.actualBoundingBoxDescent,fontSize:i.actualBoundingBoxAscent+i.actualBoundingBoxDescent};return l._fonts[t]=n,n}static clearMetrics(t=""){t?delete l._fonts[t]:l._fonts={}}static get _canvas(){if(!l.__canvas){let t;try{const e=new OffscreenCanvas(0,0);if(e.getContext("2d",$)?.measureText)return l.__canvas=e,e;t=R.get().createCanvas()}catch{t=R.get().createCanvas()}t.width=t.height=10,l.__canvas=t}return l.__canvas}static get _context(){return l.__context||(l.__context=l._canvas.getContext("2d",$)),l.__context}};C.METRICS_STRING="|ÉqÅ";C.BASELINE_SYMBOL="M";C.BASELINE_MULTIPLIER=1.4;C.HEIGHT_MULTIPLIER=2;C.graphemeSegmenter=(()=>{if(typeof Intl?.Segmenter=="function"){const o=new Intl.Segmenter;return t=>{const e=o.segment(t),i=[];let n=0;for(const s of e)i[n++]=s.segment;return i}}return o=>[...o]})();C.experimentalLetterSpacing=!1;C._fonts={};C._newlines=[10,13];C._breakingSpaces=[9,32,8192,8193,8194,8195,8196,8197,8198,8200,8201,8202,8287,12288];C._measurementCache=et(1e3);let E=C;const D=class M extends tt{constructor(t={}){super(),this.uid=rt("textStyle"),this._tick=0,dt(t);const e={...M.defaultTextStyle,...t};for(const i in e){const n=i;this[n]=e[i]}this.update(),this._tick=0}get align(){return this._align}set align(t){this._align=t,this.update()}get breakWords(){return this._breakWords}set breakWords(t){this._breakWords=t,this.update()}get dropShadow(){return this._dropShadow}set dropShadow(t){t!==null&&typeof t=="object"?this._dropShadow=this._createProxy({...M.defaultDropShadow,...t}):this._dropShadow=t?this._createProxy({...M.defaultDropShadow}):null,this.update()}get fontFamily(){return this._fontFamily}set fontFamily(t){this._fontFamily=t,this.update()}get fontSize(){return this._fontSize}set fontSize(t){typeof t=="string"?this._fontSize=parseInt(t,10):this._fontSize=t,this.update()}get fontStyle(){return this._fontStyle}set fontStyle(t){this._fontStyle=t.toLowerCase(),this.update()}get fontVariant(){return this._fontVariant}set fontVariant(t){this._fontVariant=t,this.update()}get fontWeight(){return this._fontWeight}set fontWeight(t){this._fontWeight=t,this.update()}get leading(){return this._leading}set leading(t){this._leading=t,this.update()}get letterSpacing(){return this._letterSpacing}set letterSpacing(t){this._letterSpacing=t,this.update()}get lineHeight(){return this._lineHeight}set lineHeight(t){this._lineHeight=t,this.update()}get padding(){return this._padding}set padding(t){this._padding=t,this.update()}get filters(){return this._filters}set filters(t){this._filters=Object.freeze(t),this.update()}get trim(){return this._trim}set trim(t){this._trim=t,this.update()}get textBaseline(){return this._textBaseline}set textBaseline(t){this._textBaseline=t,this.update()}get whiteSpace(){return this._whiteSpace}set whiteSpace(t){this._whiteSpace=t,this.update()}get wordWrap(){return this._wordWrap}set wordWrap(t){this._wordWrap=t,this.update()}get wordWrapWidth(){return this._wordWrapWidth}set wordWrapWidth(t){this._wordWrapWidth=t,this.update()}get fill(){return this._originalFill}set fill(t){t!==this._originalFill&&(this._originalFill=t,this._isFillStyle(t)&&(this._originalFill=this._createProxy({...A.defaultFillStyle,...t},()=>{this._fill=X({...this._originalFill},A.defaultFillStyle)})),this._fill=X(t===0?"black":t,A.defaultFillStyle),this.update())}get stroke(){return this._originalStroke}set stroke(t){t!==this._originalStroke&&(this._originalStroke=t,this._isFillStyle(t)&&(this._originalStroke=this._createProxy({...A.defaultStrokeStyle,...t},()=>{this._stroke=U({...this._originalStroke},A.defaultStrokeStyle)})),this._stroke=U(t,A.defaultStrokeStyle),this.update())}update(){this._tick++,this.emit("update",this)}reset(){const t=M.defaultTextStyle;for(const e in t)this[e]=t[e]}get styleKey(){return`${this.uid}-${this._tick}`}clone(){return new M({align:this.align,breakWords:this.breakWords,dropShadow:this._dropShadow?{...this._dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,leading:this.leading,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,textBaseline:this.textBaseline,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,filters:this._filters?[...this._filters]:void 0})}_getFinalPadding(){let t=0;if(this._filters)for(let e=0;e<this._filters.length;e++)t+=this._filters[e].padding;return Math.max(this._padding,t)}destroy(t=!1){if(this.removeAllListeners(),typeof t=="boolean"?t:t?.texture){const i=typeof t=="boolean"?t:t?.textureSource;this._fill?.texture&&this._fill.texture.destroy(i),this._originalFill?.texture&&this._originalFill.texture.destroy(i),this._stroke?.texture&&this._stroke.texture.destroy(i),this._originalStroke?.texture&&this._originalStroke.texture.destroy(i)}this._fill=null,this._stroke=null,this.dropShadow=null,this._originalStroke=null,this._originalFill=null}_createProxy(t,e){return new Proxy(t,{set:(i,n,s)=>(i[n]=s,e?.(n,s),this.update(),!0)})}_isFillStyle(t){return(t??null)!==null&&!(L.isColorLike(t)||t instanceof O||t instanceof K)}};D.defaultDropShadow={alpha:1,angle:Math.PI/6,blur:0,color:"black",distance:5};D.defaultTextStyle={align:"left",breakWords:!1,dropShadow:null,fill:"black",fontFamily:"Arial",fontSize:26,fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",leading:0,letterSpacing:0,lineHeight:0,padding:0,stroke:null,textBaseline:"alphabetic",trim:!1,whiteSpace:"pre",wordWrap:!1,wordWrapWidth:100};let H=D;function dt(o){const t=o;if(typeof t.dropShadow=="boolean"&&t.dropShadow){const e=H.defaultDropShadow;o.dropShadow={alpha:t.dropShadowAlpha??e.alpha,angle:t.dropShadowAngle??e.angle,blur:t.dropShadowBlur??e.blur,color:t.dropShadowColor??e.color,distance:t.dropShadowDistance??e.distance}}if(t.strokeThickness!==void 0){T(B,"strokeThickness is now a part of stroke");const e=t.stroke;let i={};if(L.isColorLike(e))i.color=e;else if(e instanceof O||e instanceof K)i.fill=e;else if(Object.hasOwnProperty.call(e,"color")||Object.hasOwnProperty.call(e,"fill"))i=e;else throw new Error("Invalid stroke value.");o.stroke={...i,width:t.strokeThickness}}if(Array.isArray(t.fillGradientStops)){if(T(B,"gradient fill is now a fill pattern: `new FillGradient(...)`"),!Array.isArray(t.fill)||t.fill.length===0)throw new Error("Invalid fill value. Expected an array of colors for gradient fill.");t.fill.length!==t.fillGradientStops.length&&N("The number of fill colors must match the number of fill gradient stops.");const e=new O({start:{x:0,y:0},end:{x:0,y:1},textureSpace:"local"}),i=t.fillGradientStops.slice(),n=t.fill.map(s=>L.shared.setValue(s).toNumber());i.forEach((s,r)=>{e.addColorStop(s,n[r])}),o.fill={fill:e}}}const J=1e5;function Z(o,t,e,i=0){if(o.texture===P.WHITE&&!o.fill)return L.shared.setValue(o.color).setAlpha(o.alpha??1).toHexa();if(o.fill){if(o.fill instanceof K){const n=o.fill,s=t.createPattern(n.texture.source.resource,"repeat"),r=n.transform.copyTo(V.shared);return r.scale(n.texture.frame.width,n.texture.frame.height),s.setTransform(r),s}else if(o.fill instanceof O){const n=o.fill,s=n.type==="linear",r=n.textureSpace==="local";let a=1,h=1;r&&e&&(a=e.width+i,h=e.height+i);let f,d=!1;if(s){const{start:u,end:g}=n;f=t.createLinearGradient(u.x*a,u.y*h,g.x*a,g.y*h),d=Math.abs(g.x-u.x)<Math.abs((g.y-u.y)*.1)}else{const{center:u,innerRadius:g,outerCenter:m,outerRadius:x}=n;f=t.createRadialGradient(u.x*a,u.y*h,g*a,m.x*a,m.y*h,x*a)}if(d&&r&&e){const u=e.lineHeight/h;for(let g=0;g<e.lines.length;g++){const m=(g*e.lineHeight+i/2)/h;n.colorStops.forEach(x=>{const w=m+x.offset*u;f.addColorStop(Math.floor(w*J)/J,L.shared.setValue(x.color).toHex())})}}else n.colorStops.forEach(u=>{f.addColorStop(u.offset,L.shared.setValue(u.color).toHex())});return f}}else{const n=t.createPattern(o.texture.source.resource,"repeat"),s=o.matrix.copyTo(V.shared);return s.scale(o.texture.frame.width,o.texture.frame.height),n.setTransform(s),n}return N("FillStyle not recognised",o),"red"}const it=class st extends lt{constructor(t){super(),this.resolution=1,this.pages=[],this._padding=0,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentMaxCharHeight=0,this._currentPageIndex=-1,this._skipKerning=!1;const e={...st.defaultOptions,...t};this._textureSize=e.textureSize,this._mipmap=e.mipmap;const i=e.style.clone();e.overrideFill&&(i._fill.color=16777215,i._fill.alpha=1,i._fill.texture=P.WHITE,i._fill.fill=null),this.applyFillAsTint=e.overrideFill;const n=i.fontSize;i.fontSize=this.baseMeasurementFontSize;const s=j(i);e.overrideSize?i._stroke&&(i._stroke.width*=this.baseRenderedFontSize/n):i.fontSize=this.baseRenderedFontSize=n,this._style=i,this._skipKerning=e.skipKerning??!1,this.resolution=e.resolution??1,this._padding=e.padding??4,e.textureStyle&&(this._textureStyle=e.textureStyle instanceof Y?e.textureStyle:new Y(e.textureStyle)),this.fontMetrics=E.measureFont(s),this.lineHeight=i.lineHeight||this.fontMetrics.fontSize||i.fontSize}ensureCharacters(t){const e=E.graphemeSegmenter(t).filter(_=>!this._currentChars.includes(_)).filter((_,c,p)=>p.indexOf(_)===c);if(!e.length)return;this._currentChars=[...this._currentChars,...e];let i;this._currentPageIndex===-1?i=this._nextPage():i=this.pages[this._currentPageIndex];let{canvas:n,context:s}=i.canvasAndContext,r=i.texture.source;const a=this._style;let h=this._currentX,f=this._currentY,d=this._currentMaxCharHeight;const u=this.baseRenderedFontSize/this.baseMeasurementFontSize,g=this._padding*u;let m=!1;const x=n.width/this.resolution,w=n.height/this.resolution;for(let _=0;_<e.length;_++){const c=e[_],p=E.measureText(c,a,n,!1);p.lineHeight=p.height;const S=p.width*u,y=Math.ceil((a.fontStyle==="italic"?2:1)*S),v=p.height*u,b=y+g*2,k=v+g*2;if(m=!1,c!==`
`&&c!=="\r"&&c!=="	"&&c!==" "&&(m=!0,d=Math.ceil(Math.max(k,d))),h+b>x&&(f+=d,d=k,h=0,f+d>w)){r.update();const F=this._nextPage();n=F.canvasAndContext.canvas,s=F.canvasAndContext.context,r=F.texture.source,h=0,f=0,d=0}const W=S/u-(a.dropShadow?.distance??0)-(a._stroke?.width??0);if(this.chars[c]={id:c.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:W,kerning:{}},m){this._drawGlyph(s,p,h+g,f+g,u,a);const F=r.width*u,G=r.height*u,nt=new at(h/F*r.width,f/G*r.height,b/F*r.width,k/G*r.height);this.chars[c].texture=new P({source:r,frame:nt}),h+=Math.ceil(b)}}r.update(),this._currentX=h,this._currentY=f,this._currentMaxCharHeight=d,this._skipKerning&&this._applyKerning(e,s)}get pageTextures(){return T(B,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(t,e){const i=this._measureCache;for(let n=0;n<t.length;n++){const s=t[n];for(let r=0;r<this._currentChars.length;r++){const a=this._currentChars[r];let h=i[s];h||(h=i[s]=e.measureText(s).width);let f=i[a];f||(f=i[a]=e.measureText(a).width);let d=e.measureText(s+a).width,u=d-(h+f);u&&(this.chars[s].kerning[a]=u),d=e.measureText(s+a).width,u=d-(h+f),u&&(this.chars[a].kerning[s]=u)}}}_nextPage(){this._currentPageIndex++;const t=this.resolution,e=q.getOptimalCanvasAndContext(this._textureSize,this._textureSize,t);this._setupContext(e.context,this._style,t);const i=t*(this.baseRenderedFontSize/this.baseMeasurementFontSize),n=new P({source:new ot({resource:e.canvas,resolution:i,alphaMode:"premultiply-alpha-on-upload",autoGenerateMipmaps:this._mipmap})});this._textureStyle&&(n.source.style=this._textureStyle);const s={canvasAndContext:e,texture:n};return this.pages[this._currentPageIndex]=s,s}_setupContext(t,e,i){e.fontSize=this.baseRenderedFontSize,t.scale(i,i),t.font=j(e),e.fontSize=this.baseMeasurementFontSize,t.textBaseline=e.textBaseline;const n=e._stroke,s=n?.width??0;if(n&&(t.lineWidth=s,t.lineJoin=n.join,t.miterLimit=n.miterLimit,t.strokeStyle=Z(n,t)),e._fill&&(t.fillStyle=Z(e._fill,t)),e.dropShadow){const r=e.dropShadow,a=L.shared.setValue(r.color).toArray(),h=r.blur*i,f=r.distance*i;t.shadowColor=`rgba(${a[0]*255},${a[1]*255},${a[2]*255},${r.alpha})`,t.shadowBlur=h,t.shadowOffsetX=Math.cos(r.angle)*f,t.shadowOffsetY=Math.sin(r.angle)*f}else t.shadowColor="black",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0}_drawGlyph(t,e,i,n,s,r){const a=e.text,h=e.fontProperties,d=(r._stroke?.width??0)*s,u=i+d/2,g=n-d/2,m=h.descent*s,x=e.lineHeight*s;let w=!1;r.stroke&&d&&(w=!0,t.strokeText(a,u,g+x-m));const{shadowBlur:_,shadowOffsetX:c,shadowOffsetY:p}=t;r._fill&&(w&&(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0),t.fillText(a,u,g+x-m)),w&&(t.shadowBlur=_,t.shadowOffsetX=c,t.shadowOffsetY=p)}destroy(){super.destroy();for(let t=0;t<this.pages.length;t++){const{canvasAndContext:e,texture:i}=this.pages[t];q.returnCanvasAndContext(e),i.destroy(!0)}this.pages=null}};it.defaultOptions={textureSize:512,style:new H,mipmap:!0};let Q=it;function ft(o,t,e,i){const n={width:0,height:0,offsetY:0,scale:t.fontSize/e.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};n.offsetY=e.baseLineOffset;let s=n.lines[0],r=null,a=!0;const h={width:0,start:0,index:0,positions:[],chars:[]},f=e.baseMeasurementFontSize/t.fontSize,d=t.letterSpacing*f,u=t.wordWrapWidth*f,g=t.lineHeight?t.lineHeight*f:e.lineHeight,m=t.wordWrap&&t.breakWords,x=c=>{const p=s.width;for(let S=0;S<h.index;S++){const y=c.positions[S];s.chars.push(c.chars[S]),s.charPositions.push(y+p)}s.width+=c.width,a=!1,h.width=0,h.index=0,h.chars.length=0},w=()=>{let c=s.chars.length-1;if(i){let p=s.chars[c];for(;p===" ";)s.width-=e.chars[p].xAdvance,p=s.chars[--c]}n.width=Math.max(n.width,s.width),s={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},a=!0,n.lines.push(s),n.height+=g},_=c=>c-d>u;for(let c=0;c<o.length+1;c++){let p;const S=c===o.length;S||(p=o[c]);const y=e.chars[p]||e.chars[" "];if(/(?:\s)/.test(p)||p==="\r"||p===`
`||S){if(!a&&t.wordWrap&&_(s.width+h.width)?(w(),x(h),S||s.charPositions.push(0)):(h.start=s.width,x(h),S||s.charPositions.push(0)),p==="\r"||p===`
`)w();else if(!S){const W=y.xAdvance+(y.kerning[r]||0)+d;s.width+=W,s.spaceWidth=W,s.spacesIndex.push(s.charPositions.length),s.chars.push(p)}}else{const k=y.kerning[r]||0,W=y.xAdvance+k+d;m&&_(s.width+h.width+W)&&(x(h),w()),h.positions[h.index++]=h.width+k,h.chars.push(p),h.width+=W}r=p}return w(),t.align==="center"?ut(n):t.align==="right"?pt(n):t.align==="justify"&&gt(n),n}function ut(o){for(let t=0;t<o.lines.length;t++){const e=o.lines[t],i=o.width/2-e.width/2;for(let n=0;n<e.charPositions.length;n++)e.charPositions[n]+=i}}function pt(o){for(let t=0;t<o.lines.length;t++){const e=o.lines[t],i=o.width-e.width;for(let n=0;n<e.charPositions.length;n++)e.charPositions[n]+=i}}function gt(o){const t=o.width;for(let e=0;e<o.lines.length;e++){const i=o.lines[e];let n=0,s=i.spacesIndex[n++],r=0;const a=i.spacesIndex.length,f=(t-i.width)/a;for(let d=0;d<i.charPositions.length;d++)d===s&&(s=i.spacesIndex[n++],r+=f),i.charPositions[d]+=r}}function St(o){if(o==="")return[];typeof o=="string"&&(o=[o]);const t=[];for(let e=0,i=o.length;e<i;e++){const n=o[e];if(Array.isArray(n)){if(n.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${n.length}.`);if(n[0].length===0||n[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const s=n[0].charCodeAt(0),r=n[1].charCodeAt(0);if(r<s)throw new Error("[BitmapFont]: Invalid character range.");for(let a=s,h=r;a<=h;a++)t.push(String.fromCharCode(a))}else t.push(...Array.from(n))}if(t.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return t}let I=0;class mt{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1,textureStyle:null},this.measureCache=et(1e3)}getFont(t,e){let i=`${e.fontFamily}-bitmap`,n=!0;if(e._fill.fill&&!e._stroke?(i+=e._fill.fill.styleKey,n=!1):(e._stroke||e.dropShadow)&&(i=`${e.styleKey}-bitmap`,n=!1),!z.has(i)){const r=Object.create(e);r.lineHeight=0;const a=new Q({style:r,overrideFill:n,overrideSize:!0,...this.defaultOptions});I++,I>50&&N("BitmapText",`You have dynamically created ${I} bitmap fonts, this can be inefficient. Try pre installing your font styles using \`BitmapFont.install({name:"style1", style})\``),a.once("destroy",()=>{I--,z.remove(i)}),z.set(i,a)}const s=z.get(i);return s.ensureCharacters?.(t),s}getLayout(t,e,i=!0){const n=this.getFont(t,e),s=`${t}-${e.styleKey}-${i}`;if(this.measureCache.has(s))return this.measureCache.get(s);const r=E.graphemeSegmenter(t),a=ft(r,e,n,i);return this.measureCache.set(s,a),a}measureText(t,e,i=!0){return this.getLayout(t,e,i)}install(...t){let e=t[0];typeof e=="string"&&(e={name:e,style:t[1],chars:t[2]?.chars,resolution:t[2]?.resolution,padding:t[2]?.padding,skipKerning:t[2]?.skipKerning},T(B,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const i=e?.name;if(!i)throw new Error("[BitmapFontManager] Property `name` is required.");e={...this.defaultOptions,...e};const n=e.style,s=n instanceof H?n:new H(n),r=e.dynamicFill??this._canUseTintForStyle(s),a=new Q({style:s,overrideFill:r,skipKerning:e.skipKerning,padding:e.padding,resolution:e.resolution,overrideSize:!1,textureStyle:e.textureStyle}),h=St(e.chars);return a.ensureCharacters(h.join("")),z.set(`${i}-bitmap`,a),a.once("destroy",()=>z.remove(`${i}-bitmap`)),a}uninstall(t){const e=`${t}-bitmap`,i=z.get(e);i&&i.destroy()}_canUseTintForStyle(t){return!t._stroke&&(!t.dropShadow||t.dropShadow.color===0)&&!t._fill.fill&&t._fill.color===16777215}}const yt=new mt;export{lt as A,yt as B,E as C,H as T,ft as a,j as f,Z as g};
