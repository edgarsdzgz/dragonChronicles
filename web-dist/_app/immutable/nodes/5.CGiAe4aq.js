var Wt=Object.defineProperty;var Yt=(p,i,l)=>i in p?Wt(p,i,{enumerable:!0,configurable:!0,writable:!0,value:l}):p[i]=l;var h=(p,i,l)=>Yt(p,typeof i!="symbol"?i+"":i,l);import"../chunks/DsnmJJEf.js";import{i as Xt}from"../chunks/CP9tZzGG.js";import{g as Lt,o as Ut,A as Vt,an as Jt,ao as Kt,i as it,r as x,q as m,u as Je,w as e,B as z,k as Ke,l as Qt,M as C,v as P,n as R,m as F,t as v,a7 as Qe,ar as $e}from"../chunks/DzhVMzrA.js";import{i as Zt}from"../chunks/DSEsMLIz.js";import{b as Ze,r as et}from"../chunks/DX-_nXvY.js";import{T as nt,s as V,c as tt}from"../chunks/CxIXe2Zz.js";import{b as er}from"../chunks/Dh9k4Bes.js";import{S as at}from"../chunks/B2cBvE-Z.js";import{A as tr}from"../chunks/Bdegg2L_.js";import{G as Ee}from"../chunks/DYyOJ_hf.js";const rr={frameSpeedMultipliers:{idle:1,fly_1:1,fly_2:1,fly_3:1},smoothTransitions:!0,transitionDuration:50},ir={frameSpeedMultipliers:{idle:.5,fly_1:.5,fly_2:.5,fly_3:2},smoothTransitions:!0,transitionDuration:75,frameDurationExtensions:{idle:0,fly_1:0,fly_2:0,fly_3:5},frameSpeedDecay:{idle:{startMultiplier:.5,endMultiplier:.5},fly_1:{startMultiplier:.5,endMultiplier:.5},fly_2:{startMultiplier:.5,endMultiplier:.5},fly_3:{startMultiplier:2,endMultiplier:.5}}},nr={"mantair-corsair":ir,swarm:rr},ar={"mantair-corsair":{name:"Mantair Corsair",imagePath:"/sprites/wsn_mantairCorsair_sprite.svg",frameWidth:128,frameHeight:128,rows:2,cols:2},swarm:{name:"Swarm",imagePath:"/sprites/wsn_swarm_sprite.svg",frameWidth:128,frameHeight:128,rows:2,cols:2}},or={idle:{row:0,col:0},fly_1:{row:0,col:1},fly_2:{row:1,col:0},fly_3:{row:1,col:1}},ot={};for(const[p,i]of Object.entries(ar))ot[p]=new nt({imagePath:i.imagePath,frameWidth:i.frameWidth,frameHeight:i.frameHeight,rows:i.rows,cols:i.cols});async function st(p,i){try{const l=ot[p];if(!l){console.error(`No atlas found for enemy type: ${p}`);return}const{row:d,col:r}=or[i],a=await l.getFrame(d,r);if(!a){console.error(`Failed to get enemy frame: ${p} ${i} (${d}, ${r})`);return}return a}catch(l){console.error(`Error loading enemy frame ${p} ${i}:`,l);return}}async function sr(p,i="idle"){const l=await st(p,i);if(!l)throw new Error(`Invalid enemy frame: ${p} ${i}`);const d=new at(l.texture);return d.anchor.set(.5),d}class lr{constructor(i,l,d,r){h(this,"sprite");h(this,"enemyType");h(this,"isPlaying",!1);h(this,"currentFrameIndex",0);h(this,"intervalId",null);h(this,"frameSequence",["idle","fly_1","fly_2","fly_3"]);h(this,"frameDuration",125);h(this,"renderer",null);h(this,"stage",null);h(this,"movementPattern");h(this,"currentSpeedMultiplier",1);h(this,"targetSpeedMultiplier",1);h(this,"speedTransitionStart",0);h(this,"onFrameChange");h(this,"frameExtensionCounter",0);h(this,"currentExtendedFrame",null);this.sprite=i,this.enemyType=l,this.renderer=d||null,this.stage=r||null,this.movementPattern=nr[l],this.currentSpeedMultiplier=this.movementPattern.frameSpeedMultipliers.idle,this.targetSpeedMultiplier=this.currentSpeedMultiplier}setFrameChangeCallback(i){this.onFrameChange=i}getCurrentSpeedMultiplier(){if(this.currentExtendedFrame&&this.frameExtensionCounter>0){const a=this.movementPattern.frameSpeedDecay?.[this.currentExtendedFrame];if(a){const b=(this.movementPattern.frameDurationExtensions?.[this.currentExtendedFrame]||0)+1,w=this.frameExtensionCounter+1,_=(b-w)/b,G=a.startMultiplier+(a.endMultiplier-a.startMultiplier)*_;return console.log(`${this.enemyType} decay: ${a.startMultiplier.toFixed(2)}x → ${a.endMultiplier.toFixed(2)}x (progress: ${(_*100).toFixed(1)}%)`),G}}if(!this.movementPattern.smoothTransitions)return this.targetSpeedMultiplier;const l=performance.now()-this.speedTransitionStart;if(l>=this.movementPattern.transitionDuration)return this.targetSpeedMultiplier;const d=l/this.movementPattern.transitionDuration,r=this.easeInOutCubic(d);return this.currentSpeedMultiplier+(this.targetSpeedMultiplier-this.currentSpeedMultiplier)*r}easeInOutCubic(i){return i<.5?4*i*i*i:1-Math.pow(-2*i+2,3)/2}async start(){this.isPlaying||(this.isPlaying=!0,await this.updateFrame(),this.intervalId=window.setInterval(async()=>{if(this.isPlaying){if(this.currentExtendedFrame&&this.frameExtensionCounter>0){if(this.frameExtensionCounter--,this.onFrameChange){const i=this.getCurrentSpeedMultiplier();this.onFrameChange(this.currentExtendedFrame,i)}console.log(`${this.enemyType} holding extended frame: ${this.currentExtendedFrame} (${this.frameExtensionCounter} remaining)`);return}this.currentFrameIndex=(this.currentFrameIndex+1)%this.frameSequence.length,await this.updateFrame()}},this.frameDuration))}stop(){this.isPlaying=!1,this.intervalId!==null&&(clearInterval(this.intervalId),this.intervalId=null)}pause(){this.isPlaying=!1,this.intervalId!==null&&(clearInterval(this.intervalId),this.intervalId=null)}resume(){this.isPlaying||this.start()}async updateFrame(){try{const i=this.frameSequence[this.currentFrameIndex],l=await st(this.enemyType,i);l?(this.sprite.texture=l.texture,console.log(`${this.enemyType} frame updated to: ${i}`),this.updateMovementSpeed(i),this.renderer&&this.stage&&this.renderer.render(this.stage)):console.warn(`Failed to load ${this.enemyType} frame: ${i}`)}catch(i){console.error(`Error updating ${this.enemyType} frame:`,i)}}updateMovementSpeed(i){const l=this.movementPattern.frameSpeedMultipliers[i];l!==this.targetSpeedMultiplier&&(this.currentSpeedMultiplier=this.getCurrentSpeedMultiplier(),this.targetSpeedMultiplier=l,this.speedTransitionStart=performance.now(),console.log(`${this.enemyType} speed transition: ${this.currentSpeedMultiplier.toFixed(2)}x → ${this.targetSpeedMultiplier}x`));const d=this.movementPattern.frameDurationExtensions?.[i]||0;d>0?(this.currentExtendedFrame=i,this.frameExtensionCounter=d,console.log(`${this.enemyType} extending frame ${i} for ${d} extra frames`)):(this.currentExtendedFrame=null,this.frameExtensionCounter=0),this.onFrameChange&&this.onFrameChange(i,this.getCurrentSpeedMultiplier())}getCurrentFrame(){return this.frameSequence[this.currentFrameIndex]}isAnimating(){return this.isPlaying}setFPS(i){if(i<=0){console.warn("FPS must be greater than 0");return}this.frameDuration=1e3/i,console.log(`${this.enemyType} animation FPS changed to: ${i} (${this.frameDuration}ms per frame)`),this.isPlaying&&(this.stop(),this.start())}getFPS(){return 1e3/this.frameDuration}getMovementPattern(){return this.movementPattern}async forceFrame(i,l){const d=this.frameSequence.indexOf(i);if(d===-1){console.warn(`Invalid frame type: ${i}`);return}l?(this.currentFrameIndex=d,this.currentExtendedFrame=i,this.frameExtensionCounter=999,await this.updateFrame(),console.log(`${this.enemyType} forced to hold frame: ${i}`)):(this.currentExtendedFrame=null,this.frameExtensionCounter=0,console.log(`${this.enemyType} resumed normal animation from frame: ${i}`))}destroy(){this.stop()}}async function cr(p,i,l){try{const d=await sr(p,"idle"),r=new lr(d,p,i,l);return console.log(`Created animated ${p} sprite successfully`),{sprite:d,animator:r}}catch(d){throw console.error(`Failed to create animated ${p} sprite:`,d),d}}const Me={"mantair-corsair-attack":{name:"Mantair Corsair Projectile",imagePath:"/sprites/wsn_mantairCorsair_attack.svg",frameWidth:32,frameHeight:32,rows:2,cols:2,speed:150,scale:.75},"swarm-attack":{name:"Swarm Projectile",imagePath:"/sprites/wsn_swarm_attack.svg",frameWidth:32,frameHeight:32,rows:2,cols:2,speed:200,scale:.75},"dragon-attack":{name:"Dragon Attack Projectile",imagePath:"/sprites/protagonist_dragon_attack.svg",frameWidth:32,frameHeight:32,rows:2,cols:2,speed:250,scale:.75}},dr={idle:{row:0,col:0},fly_1:{row:0,col:1},fly_2:{row:1,col:0},fly_3:{row:1,col:1}},lt={};for(const[p,i]of Object.entries(Me))lt[p]=new nt({imagePath:i.imagePath,frameWidth:i.frameWidth,frameHeight:i.frameHeight,rows:i.rows,cols:i.cols});async function ct(p,i){try{const l=lt[p];if(!l){console.error(`No atlas found for projectile type: ${p}`);return}const{row:d,col:r}=dr[i],a=await l.getFrame(d,r);if(!a){console.error(`Failed to get projectile frame: ${p} ${i} (${d}, ${r})`);return}return a}catch(l){console.error(`Error loading projectile frame ${p} ${i}:`,l);return}}async function pr(p,i="idle"){const l=await ct(p,i);if(!l)throw new Error(`Invalid projectile frame: ${p} ${i}`);const d=new at(l.texture);return d.anchor.set(.5),d}class ur{constructor(i,l,d,r,a,o,b){h(this,"sprite");h(this,"projectileType");h(this,"targetX");h(this,"targetY");h(this,"speed");h(this,"isActive",!0);h(this,"animationFrameIndex",0);h(this,"frameSequence",["idle","fly_1","fly_2","fly_3"]);h(this,"lastFrameUpdate",0);h(this,"frameDuration",125);h(this,"renderer",null);h(this,"stage",null);h(this,"collisionCallback");this.sprite=i,this.projectileType=l,this.targetX=d,this.targetY=r,this.speed=Me[l].speed,this.renderer=a||null,this.stage=o||null,this.collisionCallback=b,this.lastFrameUpdate=performance.now()}update(i){if(!this.isActive)return!1;if(this.updateAnimation(i),this.collisionCallback&&this.collisionCallback(this.sprite))return this.destroy(),!1;const l=this.targetX-this.sprite.x,d=this.targetY-this.sprite.y,r=Math.sqrt(l*l+d*d);if(r<20)return this.destroy(),!1;const a=this.speed*(i/1e3);if(r>0){const o=l/r*a,b=d/r*a;this.sprite.x+=o,this.sprite.y+=b}return this.renderer&&this.stage&&this.renderer.render(this.stage),!0}async updateAnimation(i){const l=performance.now();if(l-this.lastFrameUpdate>=this.frameDuration){this.animationFrameIndex=(this.animationFrameIndex+1)%this.frameSequence.length,this.lastFrameUpdate=l;const d=this.frameSequence[this.animationFrameIndex],r=await ct(this.projectileType,d);r&&(this.sprite.texture=r.texture)}}setFPS(i){this.frameDuration=1e3/i}getSprite(){return this.sprite}isAlive(){return this.isActive}destroy(){this.isActive=!1,this.sprite.parent&&this.sprite.parent.removeChild(this.sprite),this.sprite.destroy()}}async function rt(p,i,l,d,r,a,o,b){const w=await pr(p,"idle");w.position.set(i,l);const k=Me[p];w.scale.set(k.scale),w.visible=!0;const _=new ur(w,p,d,r,a,o,b);return o&&o.addChild(w),console.log(`Created ${p} projectile from (${i}, ${l}) to (${d}, ${r}) at scale ${k.scale}`),_}function mr(p){switch(p){case"mantair-corsair":return"mantair-corsair-attack";case"swarm":return"swarm-attack";default:return"mantair-corsair-attack"}}function fr(){return"dragon-attack"}var gr=it('<div style="padding:6px 8px; background:rgba(255, 87, 34, 0.2); border-radius:4px; text-align:center; margin-bottom:8px;"><div style="font-size:10px; color:#FF5722; font-weight:bold;">🎮 Game Running</div> <div style="font-size:8px; color:#aaa; margin-top:1px;"> </div></div>'),hr=it(`<div style="position:fixed; inset:0; background: linear-gradient(to bottom, 
    /* Sky layers with authentic steppe blues */
    #4169E1 0%,     /* Deep sky blue */
    #87CEEB 15%,    /* Main sky blue from images */
    #B0E0E6 30%,    /* Powder blue for atmosphere */
    #E6F3FF 45%,    /* Morning haze near horizon */
    /* Grass layers with extracted steppe greens */
    #6B8E23 60%,    /* Primary olive drab grass */
    #228B22 75%,    /* Rich forest green grass */
    #9ACD32 85%,    /* Yellow-green sunlit grass */
    #556B2F 100%    /* Dark olive green shadows */
  );"><div style="position: absolute; inset: 0; 
    background: radial-gradient(ellipse at 50% 45%, 
      rgba(240, 248, 255, 0.3) 0%,     /* Heat shimmer effect */
      rgba(230, 243, 255, 0.2) 40%,    /* Morning mist */
      rgba(176, 224, 230, 0.1) 70%,    /* Atmospheric blue */
      transparent 100%
    );"></div> <div style="position: absolute; inset: 0; 
    background: linear-gradient(to bottom, 
      transparent 0%, 
      transparent 40%,
      rgba(112, 128, 144, 0.15) 45%,   /* Distant slate grey mountains */
      rgba(100, 149, 237, 0.1) 50%,    /* Cornflower blue atmospheric mountains */
      transparent 55%,
      transparent 100%
    );"></div> <div style="position: absolute; inset: 0; 
    background: linear-gradient(135deg, 
      transparent 0%,
      rgba(154, 205, 50, 0.1) 25%,     /* Yellow-green grass highlights */
      transparent 50%,
      rgba(85, 107, 47, 0.05) 75%,     /* Dark olive grass shadows */
      transparent 100%
    ); 
    background-size: 200px 200px;"></div> <div style="position: absolute; inset: 0; 
    background: radial-gradient(circle at 30% 70%, 
      rgba(245, 245, 220, 0.05) 0%,    /* Seed drift particles */
      transparent 30%
    ), 
    radial-gradient(circle at 70% 60%, 
      rgba(222, 184, 135, 0.03) 0%,    /* Dust swirl */
      transparent 40%
    );"></div> <canvas style="width:100%; height:100%; display:block;"></canvas> <div style="position:absolute; right:8px; top:8px; background:rgba(0,0,0,.9); color:#fff; padding:16px; border-radius:12px; font:12px system-ui; min-width:280px; max-width:320px; backdrop-filter: blur(10px); overflow-wrap:break-word;"><h3 style="margin:0 0 12px 0; font-size:16px; color:#4CAF50;">🐉 Dragon Animation Test</h3> <div style="margin-bottom:12px; padding:8px; background:rgba(255,255,255,.1); border-radius:6px;"><div style="font-size:11px; color:#aaa; margin-bottom:4px;">Animation Status</div> <div> </div> <div style="font-size:10px; color:#888; margin-top:2px;"> </div></div> <div style="margin-bottom:12px; padding:8px; background:rgba(255,255,255,.1); border-radius:6px;"><div style="font-size:11px; color:#aaa; margin-bottom:6px;">Animation Speed</div> <div style="display:flex; align-items:center; gap:8px;"><input type="range" min="1" max="20" step="1" style="flex:1; accent-color:#4CAF50;"/> <input type="number" min="1" max="20" style="width:50px; padding:2px 4px; background:#333; color:#fff; border:1px solid #555; border-radius:3px; font-size:10px;"/> <span style="font-size:10px; color:#888;">FPS</span></div> <div style="font-size:9px; color:#666; margin-top:4px;">1 FPS = Slow | 8 FPS = Default | 20 FPS = Fast</div></div> <div style="display:flex; flex-direction:column; gap:8px;"><div style="display:flex; gap:6px;"><button style="flex:1; padding:8px 12px; background:#4CAF50; color:white; border:none; border-radius:6px; cursor:pointer; font-size:11px;">🎯 Left Dragon</button> <button style="flex:1; padding:8px 12px; background:#2196F3; color:white; border:none; border-radius:6px; cursor:pointer; font-size:11px;">🎲 Random Dragon</button></div> <div style="font-size:10px; color:#aaa; margin:4px 0;">Wind Swept Nomads:</div> <div style="display:flex; gap:6px;"><button style="flex:1; padding:8px 12px; background:#FF6B35; color:white; border:none; border-radius:6px; cursor:pointer; font-size:10px;">⚔️ Mantair Corsair</button> <button style="flex:1; padding:8px 12px; background:#8B4513; color:white; border:none; border-radius:6px; cursor:pointer; font-size:10px;">🐝 Swarm</button></div> <button> </button> <div style="font-size:10px; color:#aaa; margin:8px 0 4px 0;">Combat Controls:</div> <div style="display:flex; gap:6px; margin-bottom:6px;"><button></button> <button></button></div> <div style="padding:8px; background:rgba(76, 175, 80, 0.2); border-radius:6px; text-align:center; margin-bottom:8px;"><div style="font-size:11px; color:#4CAF50; font-weight:bold;">🤖 Automatic Combat</div> <div style="font-size:9px; color:#aaa; margin-top:2px;">Dragons auto-attack enemies in range<br/> Enemies move toward dragons, then auto-attack</div></div> <button> </button> <!> <div style="display:flex; gap:6px;"><button style="flex:1; padding:6px 8px; background:#f44336; color:white; border:none; border-radius:4px; cursor:pointer; font-size:10px;">🗑️ Clear Dragons</button> <button style="flex:1; padding:6px 8px; background:#f44336; color:white; border:none; border-radius:4px; cursor:pointer; font-size:10px;">🗑️ Clear Enemies</button></div> <button style="padding:8px 12px; background:#d32f2f; color:white; border:none; border-radius:6px; cursor:pointer; font-size:11px;">🗑️ Remove All</button></div> <div style="border-top:1px solid #444; padding-top:12px; margin-top:12px;"><div style="font-size:11px; color:#aaa; margin-bottom:6px;">Statistics</div> <div> </div> <div> </div> <div> </div> <div> </div> <div style="font-size:10px; color:#888; margin-top:4px;"></div> <div style="font-size:10px; color:#888;"> </div> <div style="font-size:10px; color:#888; margin-top:4px;"> </div> <div style="font-size:10px; color:#888;"> </div> <div style="font-size:10px; color:#888;"> </div> <div style="font-size:10px; color:#888;"> </div> <div style="font-size:10px; color:#888;"> </div></div> <div style="border-top:1px solid #444; padding-top:12px; margin-top:12px;"><div style="font-size:10px; color:#888; line-height:1.4;"><strong>Animation Sequence:</strong><br/> idle → fly_1 → fly_2 → fly_3 → repeat<br/> <strong>Frame Rate:</strong> </div></div></div></div>`);function Mr(p,i){Lt(i,!1);const l=R();let d=R(),r,a=R([]),o=R([]),b=R([]),w=R(!1),k=R(!0),_=R(8),G=[],W=R(!1),Y=R(!1),I=null,j=null,D=null,H=R(!1),J=null;const K=400,B=300,dt=50,Pe=5,te={"mantair-corsair":12,swarm:3},q={baseInterval:3e3,intervalVariation:1e3,enemyTypes:["mantair-corsair","swarm"],maxEnemies:8};let T=R({currentColumn:0,currentPosition:0,enemiesPerColumn:0,maxEnemiesPerColumn:8,columnSpacing:120,verticalSpacing:100,startX:600});async function pt(){if(!(!r||!e(w)))try{const{sprite:t,animator:n}=await tt(r.renderer,r.stage),c=64,f=c+Math.random()*(r.renderer.width-c*2),s=c+Math.random()*(r.renderer.height-c*2);t.position.set(f,s),t.scale.set(.75),t.visible=!0,t.alpha=1,t.tint=16777215,console.log("Adding animated dragon to stage:",{position:t.position,visible:t.visible,stageChildren:r.stage.children.length,spriteTexture:t.texture,textureValid:t.texture?.source?.valid,rendererSize:{width:r.renderer.width,height:r.renderer.height}}),r.stage.addChild(t),r.renderer.render(r.stage),console.log("After adding sprite:",{stageChildren:r.stage.children.length,spriteInStage:r.stage.children.includes(t),spriteWorldTransform:t.worldTransform});const u={sprite:t,animator:n,x:f,y:s,lastFireTime:0,fireRate:1500+Math.random()*300};e(a).push(u),n.setFPS(e(_)),e(k)&&await n.start(),console.log("Animated dragon spawned successfully, total:",e(a).length),F(a,e(a)),X()}catch(t){console.error("Failed to spawn animated dragon:",t)}}async function ut(){F(k,!e(k));for(const t of e(a))e(k)?await t.animator.start():t.animator.pause();for(const t of e(o))e(k)?await t.animator.start():t.animator.pause()}function ke(){for(const t of e(a))t.animator.destroy(),r.stage.removeChild(t.sprite);F(a,[]),X()}function Ae(){Ie();for(const t of e(o))t.animator.destroy(),r.stage.removeChild(t.sprite);F(o,[]),$e(T,e(T).currentColumn=0),$e(T,e(T).currentPosition=0),$e(T,e(T).enemiesPerColumn=0),L(),De(),console.log("Enemy formation reset")}function mt(){ke(),Ae(),ft()}function ft(){for(const t of e(b))t.destroy();F(b,[])}function X(){if(!r||!e(W)||e(a).length===0){I&&(I.visible=!1);return}I||(I=new Ee,r.stage.addChild(I)),I.clear(),e(a).forEach(t=>{I&&(I.circle(t.x,t.y,K).stroke({width:2,color:0,alpha:.8}),I.moveTo(t.x,t.y).lineTo(t.x+K,t.y).stroke({width:1,color:0,alpha:.6}))}),I.visible=!0,r.renderer.render(r.stage)}function gt(){F(W,!e(W)),X(),console.log(`Dragon attack range indicator: ${e(W)?"ON":"OFF"}`)}function L(){if(!r||!e(Y)||e(o).length===0){j&&(j.visible=!1);return}j||(j=new Ee,r.stage.addChild(j)),j.clear(),e(o).forEach(t=>{if(j&&(j.circle(t.x,t.y,B).stroke({width:2,color:16711680,alpha:.6}),e(a).length>0)){const n=e(a)[0],c=n.x-t.x,f=n.y-t.y,s=Math.sqrt(c*c+f*f);if(s>0){const u=t.x+c/s*B,g=t.y+f/s*B;j.moveTo(t.x,t.y).lineTo(u,g).stroke({width:1,color:16711680,alpha:.4})}}}),j.visible=!0,r.renderer.render(r.stage)}function ht(){F(Y,!e(Y)),L(),console.log(`Enemy attack range indicator: ${e(Y)?"ON":"OFF"}`)}function xt(t){if(!t||!t.sprite)return;const n=t.sprite.tint,c=t.sprite.scale.x;t.sprite.tint=16724787,t.sprite.scale.set(c*1.1),r&&r.renderer.render(r.stage),setTimeout(()=>{t.sprite&&(t.sprite.tint=n,t.sprite.scale.set(c),r&&r.renderer.render(r.stage))},120),console.log(`${t.type} flashed red from damage (${t.health}/${t.maxHealth} HP remaining)`)}function vt(t){if(!t||!t.sprite)return;const n=t.sprite.tint,c=t.sprite.scale.x;t.sprite.tint=16737894,t.sprite.scale.set(c*1.08),r&&r.renderer.render(r.stage),setTimeout(()=>{t.sprite&&(t.sprite.tint=n,t.sprite.scale.set(c),r&&r.renderer.render(r.stage))},100),console.log("Dragon flashed red from enemy damage")}function De(){if(!r||e(o).length===0){D&&(D.visible=!1);return}D||(D=new Ee,r.stage.addChild(D)),D.clear(),e(o).forEach(t=>{if(!D)return;const n=40,c=6,f=t.x-n/2,s=t.y-40,u=Math.max(0,t.health/t.maxHealth);if(D.rect(f,s,n,c).fill({color:16711680,alpha:.8}),u>0){let g=65280;u<.5&&(g=16776960),u<.25&&(g=16729344);const y=n*u;D.rect(f,s,y,c).fill({color:g,alpha:.9})}D.rect(f,s,n,c).stroke({width:1,color:0,alpha:.8})}),D.visible=!0,r.renderer.render(r.stage)}async function yt(t){if(!r||t>=e(o).length||e(a).length===0)return;const n=e(o)[t];if(!n){console.warn("Invalid enemy for projectile firing");return}const c=e(a).filter(u=>{const g=u.x-n.x,y=u.y-n.y;return Math.sqrt(g*g+y*y)<=B});if(c.length===0){console.log(`${n.type} has no dragons in range (${B}px) - not firing`);return}let f=c[0],s=1/0;c.forEach(u=>{const g=u.x-n.x,y=u.y-n.y,S=Math.sqrt(g*g+y*y);S<s&&(s=S,f=u)});try{const u=mr(n.type),g=S=>{for(let $=0;$<e(a).length;$++){const E=e(a)[$],M=S.getBounds(),A=E.sprite.getBounds();if(M.x<A.x+A.width&&M.x+M.width>A.x&&M.y<A.y+A.height&&M.y+M.height>A.y)return console.log("Enemy projectile hit dragon!"),vt(E),!0}return!1},y=await rt(u,n.x,n.y,f.x,f.y,r.renderer,r.stage,g);y.setFPS(e(_)),e(b).push(y),console.log(`${n.type} fired projectile toward dragon (distance: ${Math.round(s)}px)`),F(b,e(b))}catch(u){console.error(`Failed to fire projectile from ${n.type}:`,u)}}function Ie(){G.forEach(t=>clearInterval(t)),G=[],console.log("All enemies stop shooting - intervals cleared")}async function bt(t){if(!r||t>=e(a).length||e(o).length===0)return;const n=e(a)[t],c=e(o).filter(u=>{const g=u.x-n.x,y=u.y-n.y;return Math.sqrt(g*g+y*y)<=K});if(c.length===0)return;let f=c[0],s=1/0;c.forEach(u=>{const g=u.x-n.x,y=u.y-n.y,S=Math.sqrt(g*g+y*y);S<s&&(s=S,f=u)});try{const u=fr(),g=S=>{for(let $=0;$<e(o).length;$++){const E=e(o)[$],M=S.getBounds(),A=E.sprite.getBounds();if(M.x<A.x+A.width&&M.x+M.width>A.x&&M.y<A.y+A.height&&M.y+M.height>A.y)return E.health-=Pe,console.log(`Dragon projectile hit ${E.type} for ${Pe} damage! Health: ${E.health}/${E.maxHealth}`),xt(E),E.health<=0&&(console.log(`${E.type} defeated!`),E.animator.destroy(),r.stage.removeChild(E.sprite),e(o).splice($,1),L(),F(o,e(o))),!0}return!1},y=await rt(u,n.x,n.y,f.x,f.y,r.renderer,r.stage,g);y.setFPS(e(_)),e(b).push(y),console.log(`Dragon fired projectile toward ${f.type}`),F(b,e(b))}catch(u){console.error("Failed to fire projectile from dragon:",u)}}function wt(){let t=performance.now();function n(){if(!r)return;const c=performance.now(),f=c-t;t=c;const s=[];for(const u of e(b))u.update(f)?s.push(u):console.log("Projectile hit target and destroyed");s.length!==e(b).length&&F(b,s),requestAnimationFrame(n)}requestAnimationFrame(n),console.log("Projectile update loop started")}function Ft(){let t=performance.now();function n(){if(!r)return;const c=performance.now(),f=c-t;t=c,e(o).forEach((s,u)=>{if(!e(a).length)return;const g=e(a)[0],y=g.x-s.x,S=g.y-s.y,$=Math.sqrt(y*y+S*S);if(s.isMoving&&$>B){const E=s.animator.getCurrentSpeedMultiplier(),M=dt*E*(f/1e3);if($>0){const A=y/$*M,Ce=S/$*M;s.x+=A,s.y+=Ce,s.sprite.position.set(s.x,s.y),s.currentSpeedMultiplier=E}}else $<=B?(s.isMoving=!1,s.type==="mantair-corsair"&&s.animator.getCurrentFrame()!=="fly_3"&&s.animator.forceFrame("fly_3",!0),c-s.lastFireTime>=s.fireRate&&(yt(u),s.lastFireTime=c)):$>B*1.2&&(s.isMoving=!0,s.type==="mantair-corsair"&&s.animator.forceFrame("fly_3",!1))}),e(a).forEach((s,u)=>{e(o).filter(y=>{const S=y.x-s.x,$=y.y-s.y;return Math.sqrt(S*S+$*$)<=K}).length>0&&c-s.lastFireTime>=s.fireRate&&(bt(u),s.lastFireTime=c)}),X(),L(),De(),requestAnimationFrame(n)}requestAnimationFrame(n),console.log("Enemy movement and combat loop started")}function _t(){if(e(H)||!e(w))return;F(H,!0),console.log("Auto-spawning started - simulating gameplay!");const t=()=>{if(!e(H))return;const n=q.baseInterval,c=(Math.random()-.5)*q.intervalVariation,f=n+c;J=window.setTimeout(()=>{if(e(H)){if(e(o).length<q.maxEnemies){const s=q.enemyTypes[Math.floor(Math.random()*q.enemyTypes.length)];re(s),console.log(`Auto-spawned ${s} (${e(o).length+1}/${q.maxEnemies})`)}else console.log(`Max enemies reached (${q.maxEnemies}) - waiting for some to be defeated`);t()}},f)};t()}function je(){F(H,!1),J&&(clearTimeout(J),J=null),console.log("Auto-spawning stopped")}function St(){e(H)?je():_t()}function ze(t){F(_,t),console.log(`Changing all animations to ${t} FPS`);for(const n of e(a))n.animator.setFPS(t);for(const n of e(o))n.animator.setFPS(t);for(const n of e(b))n.setFPS(t)}function Te(){!r||!e(w)||tt(r.renderer,r.stage).then(({sprite:t,animator:n})=>{const f=r.renderer.height/2;t.position.set(150,f),t.scale.set(1),t.visible=!0,console.log("Adding left-side dragon to stage:",{position:t.position,visible:t.visible,stageChildren:r.stage.children.length}),r.stage.addChild(t),r.renderer.render(r.stage);const s={sprite:t,animator:n,x:150,y:f,lastFireTime:0,fireRate:1500+Math.random()*300};e(a).push(s),n.setFPS(e(_)),e(k)&&n.start(),console.log("Left-side dragon spawned successfully, total:",e(a).length),F(a,e(a)),X()}).catch(t=>{console.error("Failed to spawn left-side dragon:",t)})}function Ct(){const t=r.renderer.width-320,n=50,c=n+Math.random()*(r.renderer.height-n*2);return{x:t,y:c}}async function re(t){if(!(!r||!e(w)))try{const{sprite:n,animator:c}=await cr(t,r.renderer,r.stage),{x:f,y:s}=Ct();n.position.set(f,s),n.scale.set(.75),n.visible=!0,n.alpha=1,n.tint=16777215,console.log(`Adding ${t} to formation:`,{position:n.position,column:e(T).currentColumn+1,positionInColumn:e(T).currentPosition+1,visible:n.visible}),r.stage.addChild(n),r.renderer.render(r.stage);const u=te[t]||10,g={sprite:n,animator:c,x:f,y:s,type:t,isMoving:!0,lastFireTime:0,fireRate:2e3+Math.random()*500,health:u,maxHealth:u,currentSpeedMultiplier:1,lastFrameChangeTime:performance.now()};e(o).push(g),c.setFrameChangeCallback((y,S)=>{g.currentSpeedMultiplier=S,g.lastFrameChangeTime=performance.now(),console.log(`${t} movement speed updated: ${S.toFixed(2)}x (frame: ${y})`)}),c.setFPS(e(_)),e(k)&&await c.start(),console.log(`${t} spawned in formation, total enemies:`,e(o).length),F(o,e(o)),L()}catch(n){console.error(`Failed to spawn ${t}:`,n)}}function $t(){re("mantair-corsair")}function Et(){re("swarm")}Ut(async()=>{try{console.log("Creating PixiJS app with explicit settings..."),r=new tr,await r.init({canvas:e(d),backgroundAlpha:0,antialias:!1,resolution:1,autoDensity:!0,width:e(d).clientWidth||800,height:e(d).clientHeight||600}),r.ticker&&(r.ticker.stop(),console.log("Ticker stopped to avoid conflicts")),console.log("PixiJS app initialized:",{renderer:{width:r.renderer.width,height:r.renderer.height,type:r.renderer.type},stage:r.stage,canvas:r.canvas}),F(w,!0),wt(),Ft(),console.log("Attempting to spawn dragon..."),await Te(),console.log("Dragon spawn completed")}catch(t){console.error("Failed to initialize PIXI app:",t),t instanceof Error&&console.error("Error details:",{message:t.message,stack:t.stack,name:t.name})}}),Vt(()=>{Ie();for(const t of e(a))t.animator.destroy();F(a,[]);for(const t of e(o))t.animator.destroy();F(o,[]);for(const t of e(b))t.destroy();F(b,[]),G.forEach(t=>clearInterval(t)),G=[],I&&(I.destroy(),I=null),j&&(j.destroy(),j=null),D&&(D.destroy(),D=null),je(),r&&r.destroy(!0,{children:!0})}),Jt(()=>e(a),()=>{F(l,e(a).length>0?e(a)[0]?.animator.getCurrentFrame():"none")}),Kt(),Xt();var ie=hr(),Re=m(x(ie),8);er(Re,t=>F(d,t),()=>e(d));var He=m(Re,2),ne=m(x(He),2),Q=m(x(ne),2),Mt=x(Q);v(Q);var qe=m(Q,2),Pt=x(qe);v(qe),v(ne);var ae=m(ne,2),Be=m(x(ae),2),Z=x(Be);et(Z);var oe=m(Z,2);et(oe),Qe(2),v(Be),Qe(2),v(ae);var se=m(ae,2),le=x(se),ce=x(le),Ge=m(ce,2);v(le);var de=m(le,4),pe=x(de),Ne=m(pe,2);v(de);var N=m(de,2),kt=x(N,!0);v(N);var ue=m(N,4),U=x(ue);U.textContent="📏 Dragon Range (400px)";var ee=m(U,2);ee.textContent="📏 Enemy Range (300px)",v(ue);var O=m(ue,4),At=x(O,!0);v(O);var Oe=m(O,2);{var Dt=t=>{var n=gr(),c=m(x(n),2),f=x(c);v(c),v(n),Je(()=>P(f,`Auto-spawning every ~3 seconds | Max: ${C(()=>q.maxEnemies)??""} enemies`)),Ke(t,n)};Zt(Oe,t=>{e(H)&&t(Dt)})}var me=m(Oe,2),fe=x(me),We=m(fe,2);v(me);var Ye=m(me,2);v(se);var ge=m(se,2),he=m(x(ge),2),It=x(he);v(he);var xe=m(he,2),jt=x(xe);v(xe);var ve=m(xe,2),zt=x(ve);v(ve);var ye=m(ve,2),Tt=x(ye);v(ye);var Xe=m(ye,2);Xe.textContent="Dragon Damage: 5 per hit";var be=m(Xe,2),Rt=x(be);v(be);var we=m(be,2),Ht=x(we);v(we);var Fe=m(we,2),qt=x(Fe);v(Fe);var _e=m(Fe,2),Bt=x(_e);v(_e);var Se=m(_e,2),Gt=x(Se);v(Se);var Le=m(Se,2),Nt=x(Le,!0);v(Le),v(ge);var Ue=m(ge,2),Ve=x(Ue),Ot=m(x(Ve),6);v(Ve),v(Ue),v(He),v(ie),Je((t,n,c)=>{V(Q,`color: ${e(k)?"#4CAF50":"#f44336"};`),P(Mt,`${e(k)?"▶️ Playing":"⏸️ Paused"} at ${e(_)??""} FPS`),P(Pt,`Current Frame: ${e(l)??""}`),ce.disabled=!e(w),Ge.disabled=!e(w),pe.disabled=!e(w),Ne.disabled=!e(w),N.disabled=(e(w),e(a),e(o),C(()=>!e(w)||e(a).length===0&&e(o).length===0)),V(N,`padding:8px 12px; background:${e(k)?"#FF9800":"#4CAF50"}; color:white; border:none; border-radius:6px; cursor:pointer; font-size:11px;`),P(kt,e(k)?"⏸️ Pause All":"▶️ Play All"),U.disabled=(e(w),e(a),C(()=>!e(w)||e(a).length===0)),V(U,`flex:1; padding:6px 8px; background:${e(W)?"#FF9800":"#607D8B"}; color:white; border:none; border-radius:4px; cursor:pointer; font-size:9px;`),ee.disabled=(e(w),e(o),C(()=>!e(w)||e(o).length===0)),V(ee,`flex:1; padding:6px 8px; background:${e(Y)?"#FF5722":"#795548"}; color:white; border:none; border-radius:4px; cursor:pointer; font-size:9px;`),O.disabled=(e(w),e(a),C(()=>!e(w)||e(a).length===0)),V(O,`width:100%; padding:12px; background:${e(H)?"#FF5722":"#2196F3"}; color:white; border:none; border-radius:8px; cursor:pointer; font-size:12px; font-weight:bold; margin-bottom:12px;`),P(At,e(H)?"⏹️ Stop Game Simulation":"🎮 Start Game Simulation"),fe.disabled=(e(a),C(()=>e(a).length===0)),We.disabled=(e(o),C(()=>e(o).length===0)),Ye.disabled=(e(a),e(o),C(()=>e(a).length===0&&e(o).length===0)),P(It,`Dragons: ${e(a),C(()=>e(a).length)??""}`),P(jt,`Enemies: ${e(o),C(()=>e(o).length)??""}`),P(zt,`Projectiles: ${e(b),C(()=>e(b).length)??""}`),P(Tt,`Total Sprites: ${e(a),e(o),e(b),C(()=>e(a).length+e(o).length+e(b).length)??""}`),P(Rt,`Enemy Health: Mantair ${C(()=>te["mantair-corsair"])??""}HP | Swarm ${C(()=>te.swarm)??""}HP`),P(Ht,`Formation: Column ${e(T),C(()=>e(T).currentColumn+1)??""}, Position ${e(T),C(()=>e(T).currentPosition+1)??""}`),P(qt,`Combat: Automatic 🤖 | Moving: ${t??""}`),P(Bt,`Speed Range: ${n??""}`),P(Gt,`Spawning: ${e(H),e(o),C(()=>e(H)?`Auto 🎮 (${e(o).length}/${q.maxEnemies})`:"Manual")??""}`),P(Nt,e(w)?"System ready ✓":"Loading..."),P(Ot,` ${e(_)??""} FPS (${c??""}ms/frame)`)},[()=>(e(o),C(()=>e(o).filter(t=>t.isMoving).length)),()=>(e(o),C(()=>e(o).length>0?`${Math.min(...e(o).map(t=>t.currentSpeedMultiplier)).toFixed(1)}x - ${Math.max(...e(o).map(t=>t.currentSpeedMultiplier)).toFixed(1)}x`:"none")),()=>(e(_),C(()=>Math.round(1e3/e(_))))]),Ze(Z,()=>e(_),t=>F(_,t)),z("input",Z,()=>ze(e(_))),Ze(oe,()=>e(_),t=>F(_,t)),z("input",oe,()=>ze(e(_))),z("click",ce,Te),z("click",Ge,pt),z("click",pe,$t),z("click",Ne,Et),z("click",N,ut),z("click",U,gt),z("click",ee,ht),z("click",O,St),z("click",fe,ke),z("click",We,Ae),z("click",Ye,mt),Ke(p,ie),Qt()}export{Mr as component};
