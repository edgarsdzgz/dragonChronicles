name: checks

on:
  pull_request:
    paths:
      - "**/*.ts"
      - "**/*.svelte"
      - "**/*.md"
      - "tests/**"
      - "configs/**"
      - "package.json"
      - "pnpm-lock.yaml"

jobs:
  checks:
    runs-on: ubuntu-latest
    env:
      # Prevent Husky/prepare from running in CI
      HUSKY: '0'
      # Optional: faster installs, keeps cache clean
      PNPM_CACHE_DIR: ~/.pnpm-store
    
    # Force bash everywhere so scripts behave consistently
    defaults:
      run:
        shell: bash
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # This step guarantees a pnpm binary is on PATH for this job
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9           # keep in sync with package.json "packageManager"
          run_install: false

      - name: Verify pnpm on PATH
        run: |
          set -e
          # bash-friendly checks; works cross-platform with defaults.run.shell: bash
          command -v pnpm || { echo "pnpm missing from PATH" >&2; exit 1; }
          node -v
          pnpm -v

      # Use pnpm's store path for a more effective cache
      - name: Get pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Restore pnpm store cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Install (frozen lockfile, ignore scripts in CI)
        run: pnpm -w install --frozen-lockfile --ignore-scripts

      # Guard against legacy pnpm-setup references
      - name: Assert no legacy pnpm-setup usage
        run: |
          if git grep -n "./.github/actions/pnpm-setup" -- ':!**/node_modules/**' 2>/dev/null; then
            echo "Legacy pnpm-setup still referenced"; exit 1; 
          fi

      # tests
      - run: pnpm run test:all

      # style gates
      - run: pnpm -w lint
      - run: pnpm run format:check

      # docs gates (you already have these)
      - run: pnpm run docs:lint
      - run: pnpm run docs:links