name: checks

on:
  pull_request:
    paths:
      - "**/*.ts"
      - "**/*.svelte"
      - "**/*.md"
      - "tests/**"
      - "configs/**"
      - "package.json"
      - "pnpm-lock.yaml"

jobs:
  checks:
    runs-on: ubuntu-latest
    env:
      # Prevent Husky/prepare from running in CI
      HUSKY: '0'
      # Optional: faster installs, keeps cache clean
      PNPM_CACHE_DIR: ~/.pnpm-store
    
    # Force bash everywhere so scripts behave consistently
    defaults:
      run:
        shell: bash
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Setup Node (20)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9
          run_install: false

      - name: Restore pnpm store cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Install workspace dependencies
        env:
          HUSKY: '0'
        run: |
          echo "=== DEBUGGING WORKSPACE LINKING ==="
          echo "Current directory: $(pwd)"
          echo "Contents of .npmrc:"
          cat .npmrc || echo "No .npmrc file found"
          echo "pnpm config list:"
          pnpm config list
          echo "pnpm workspace info:"
          pnpm -w list --depth=0 || echo "Workspace list failed"
          echo "Checking workspace config:"
          ls -la pnpm-workspace.yaml || echo "No pnpm-workspace.yaml found"
          cat pnpm-workspace.yaml || echo "Cannot read pnpm-workspace.yaml"
          echo "Checking package.json workspace field:"
          cat package.json | grep -A 5 -B 5 "workspace" || echo "No workspace field in package.json"
          echo "Checking if workspace packages exist:"
          ls -la packages/ || echo "No packages directory"
          ls -la apps/ || echo "No apps directory"
          echo "Checking individual package.json files:"
          find packages -name "package.json" -exec echo "=== {} ===" \; -exec cat {} \; || echo "No package.json files in packages"
          echo "Installing workspace dependencies..."
          pnpm -w install
          echo "Verifying workspace links:"
          ls -la packages/logger/node_modules/@draconia/ || echo "No @draconia links found"
          echo "Testing @draconia/db resolution:"
          node -e "console.log('@draconia/db available:', require.resolve('@draconia/db'))" || echo "@draconia/db not resolvable"

      - name: Build (TS project references)
        run: |
          pnpm -w run clean
          pnpm -w run build:ci

      - name: Tests
        run: pnpm -w run test:all

      # style gates
      - run: pnpm -w lint
      - run: pnpm run format:check

      # docs gates (you already have these)
      - run: pnpm run docs:lint
        continue-on-error: true
      - run: pnpm run docs:links